[{"path":"https://hda1472.github.io/HDAnalyzeR/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"Apache License","title":"Apache License","text":"Version 2.0, January 2004 <http://www.apache.org/licenses/>","code":""},{"path":[]},{"path":"https://hda1472.github.io/HDAnalyzeR/LICENSE.html","id":"id_1-definitions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"1. Definitions","title":"Apache License","text":"“License” shall mean terms conditions use, reproduction, distribution defined Sections 1 9 document. “Licensor” shall mean copyright owner entity authorized copyright owner granting License. “Legal Entity” shall mean union acting entity entities control, controlled , common control entity. purposes definition, “control” means () power, direct indirect, cause direction management entity, whether contract otherwise, (ii) ownership fifty percent (50%) outstanding shares, (iii) beneficial ownership entity. “” (“”) shall mean individual Legal Entity exercising permissions granted License. “Source” form shall mean preferred form making modifications, including limited software source code, documentation source, configuration files. “Object” form shall mean form resulting mechanical transformation translation Source form, including limited compiled object code, generated documentation, conversions media types. “Work” shall mean work authorship, whether Source Object form, made available License, indicated copyright notice included attached work (example provided Appendix ). “Derivative Works” shall mean work, whether Source Object form, based (derived ) Work editorial revisions, annotations, elaborations, modifications represent, whole, original work authorship. purposes License, Derivative Works shall include works remain separable , merely link (bind name) interfaces , Work Derivative Works thereof. “Contribution” shall mean work authorship, including original version Work modifications additions Work Derivative Works thereof, intentionally submitted Licensor inclusion Work copyright owner individual Legal Entity authorized submit behalf copyright owner. purposes definition, “submitted” means form electronic, verbal, written communication sent Licensor representatives, including limited communication electronic mailing lists, source code control systems, issue tracking systems managed , behalf , Licensor purpose discussing improving Work, excluding communication conspicuously marked otherwise designated writing copyright owner “Contribution.” “Contributor” shall mean Licensor individual Legal Entity behalf Contribution received Licensor subsequently incorporated within Work.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/LICENSE.html","id":"id_2-grant-of-copyright-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"2. Grant of Copyright License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable copyright license reproduce, prepare Derivative Works , publicly display, publicly perform, sublicense, distribute Work Derivative Works Source Object form.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/LICENSE.html","id":"id_3-grant-of-patent-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"3. Grant of Patent License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable (except stated section) patent license make, made, use, offer sell, sell, import, otherwise transfer Work, license applies patent claims licensable Contributor necessarily infringed Contribution(s) alone combination Contribution(s) Work Contribution(s) submitted. institute patent litigation entity (including cross-claim counterclaim lawsuit) alleging Work Contribution incorporated within Work constitutes direct contributory patent infringement, patent licenses granted License Work shall terminate date litigation filed.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/LICENSE.html","id":"id_4-redistribution","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"4. Redistribution","title":"Apache License","text":"may reproduce distribute copies Work Derivative Works thereof medium, without modifications, Source Object form, provided meet following conditions: () must give recipients Work Derivative Works copy License; (b) must cause modified files carry prominent notices stating changed files; (c) must retain, Source form Derivative Works distribute, copyright, patent, trademark, attribution notices Source form Work, excluding notices pertain part Derivative Works; (d) Work includes “NOTICE” text file part distribution, Derivative Works distribute must include readable copy attribution notices contained within NOTICE file, excluding notices pertain part Derivative Works, least one following places: within NOTICE text file distributed part Derivative Works; within Source form documentation, provided along Derivative Works; , within display generated Derivative Works, wherever third-party notices normally appear. contents NOTICE file informational purposes modify License. may add attribution notices within Derivative Works distribute, alongside addendum NOTICE text Work, provided additional attribution notices construed modifying License. may add copyright statement modifications may provide additional different license terms conditions use, reproduction, distribution modifications, Derivative Works whole, provided use, reproduction, distribution Work otherwise complies conditions stated License.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/LICENSE.html","id":"id_5-submission-of-contributions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"5. Submission of Contributions","title":"Apache License","text":"Unless explicitly state otherwise, Contribution intentionally submitted inclusion Work Licensor shall terms conditions License, without additional terms conditions. Notwithstanding , nothing herein shall supersede modify terms separate license agreement may executed Licensor regarding Contributions.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/LICENSE.html","id":"id_6-trademarks","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"6. Trademarks","title":"Apache License","text":"License grant permission use trade names, trademarks, service marks, product names Licensor, except required reasonable customary use describing origin Work reproducing content NOTICE file.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/LICENSE.html","id":"id_7-disclaimer-of-warranty","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"7. Disclaimer of Warranty","title":"Apache License","text":"Unless required applicable law agreed writing, Licensor provides Work (Contributor provides Contributions) “” BASIS, WITHOUT WARRANTIES CONDITIONS KIND, either express implied, including, without limitation, warranties conditions TITLE, NON-INFRINGEMENT, MERCHANTABILITY, FITNESS PARTICULAR PURPOSE. solely responsible determining appropriateness using redistributing Work assume risks associated exercise permissions License.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/LICENSE.html","id":"id_8-limitation-of-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"8. Limitation of Liability","title":"Apache License","text":"event legal theory, whether tort (including negligence), contract, otherwise, unless required applicable law (deliberate grossly negligent acts) agreed writing, shall Contributor liable damages, including direct, indirect, special, incidental, consequential damages character arising result License use inability use Work (including limited damages loss goodwill, work stoppage, computer failure malfunction, commercial damages losses), even Contributor advised possibility damages.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/LICENSE.html","id":"id_9-accepting-warranty-or-additional-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"9. Accepting Warranty or Additional Liability","title":"Apache License","text":"redistributing Work Derivative Works thereof, may choose offer, charge fee , acceptance support, warranty, indemnity, liability obligations /rights consistent License. However, accepting obligations, may act behalf sole responsibility, behalf Contributor, agree indemnify, defend, hold Contributor harmless liability incurred , claims asserted , Contributor reason accepting warranty additional liability. END TERMS CONDITIONS","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/LICENSE.html","id":"appendix-how-to-apply-the-apache-license-to-your-work","dir":"","previous_headings":"","what":"APPENDIX: How to apply the Apache License to your work","title":"Apache License","text":"apply Apache License work, attach following boilerplate notice, fields enclosed brackets [] replaced identifying information. (Don’t include brackets!) text enclosed appropriate comment syntax file format. also recommend file class name description purpose included “printed page” copyright notice easier identification within third-party archives.","code":"Copyright [yyyy] [name of copyright owner]  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at    http://www.apache.org/licenses/LICENSE-2.0  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License."},{"path":"https://hda1472.github.io/HDAnalyzeR/articles/HDAnalyzeR.html","id":"loading-the-data","dir":"Articles","previous_headings":"","what":"Loading the Data","title":"HDAnalyzeR","text":"First, load package’s example_data example_metadata. initialize HDAnalyzeR object data metadata. hd_initialize() function create object used throughout analysis. specify sample ID, variable name, value name order correctly load widen data. case, data long format, set is_wide = FALSE. 📓 real-world scenarios, load data metadata files instead using example dataset. ⚠️ strongly recommended use hd_initialize() function initialize HDAnalyzeR object starting analysis. initialization step ensures input data metadata correctly formatted compatible package. possible use HDAnalyzeR functions data outside HDAnalyzeR object, users must ensure data adheres required structure: first column must contain sample IDs, followed numeric columns wide format. Additionally, metadata must include set sample IDs. Proper initialization careful adherence requirements crucial accurate efficient analysis.","code":"head(example_data) #>      DAid    Sample  OlinkID UniProt  Assay           Panel        NPX #> 1 DA00001 AML_syn_1 OID21311  Q9BTE6 AARSD1        Oncology  3.3903461 #> 2 DA00001 AML_syn_1 OID21280  P00519   ABL1        Oncology  2.7588517 #> 3 DA00001 AML_syn_1 OID21269  P09110  ACAA1        Oncology  1.7070090 #> 4 DA00001 AML_syn_1 OID20159  P16112   ACAN Cardiometabolic  0.0332709 #> 5 DA00001 AML_syn_1 OID20105  Q9BYF1   ACE2 Cardiometabolic  1.7553590 #> 6 DA00001 AML_syn_1 OID20124  Q15067  ACOX1 Cardiometabolic -0.9192835 #>   Assay_Warning QC_Warning PlateID #> 1          PASS       PASS  Run001 #> 2          PASS       PASS  Run001 #> 3          PASS       PASS  Run001 #> 4          PASS       PASS  Run001 #> 5          PASS       PASS  Run001 #> 6          PASS       PASS  Run001 head(example_metadata) #>      DAid    Sample Disease   Stage Grade Sex Age  BMI Cohort #> 1 DA00001 AML_syn_1     AML       2  <NA>   F  42 22.7   UCAN #> 2 DA00002 AML_syn_2     AML Unknown  <NA>   M  69 33.1   UCAN #> 3 DA00003 AML_syn_3     AML       2  <NA>   F  61 26.2   UCAN #> 4 DA00004 AML_syn_4     AML Unknown  <NA>   M  54 28.1   UCAN #> 5 DA00005 AML_syn_5     AML       2  <NA>   F  57 21.4   UCAN #> 6 DA00006 AML_syn_6     AML Unknown  <NA>   M  86 33.9   UCAN hd_obj <- hd_initialize(dat = example_data,                          metadata = example_metadata,                          is_wide = FALSE,                          sample_id = \"DAid\",                         var_name = \"Assay\",                         value_name = \"NPX\")  # See the data transformed into a wide format! head(hd_obj$data) #> # A tibble: 6 × 101 #>   DAid    AARSD1  ABL1  ACAA1    ACAN   ACE2  ACOX1   ACP5   ACP6  ACTA2   ACTN4 #>   <chr>    <dbl> <dbl>  <dbl>   <dbl>  <dbl>  <dbl>  <dbl>  <dbl>  <dbl>   <dbl> #> 1 DA00001   3.39  2.76  1.71   0.0333  1.76  -0.919 1.54    2.15   2.81   0.742  #> 2 DA00002   1.42  1.25 -0.816 -0.459   0.826 -0.902 0.647   1.30   0.798 -0.0659 #> 3 DA00003  NA    NA    NA      0.989  NA      0.330 1.37   NA     NA     NA      #> 4 DA00004   3.41  3.38  1.69  NA       1.52  NA     0.841   0.582  1.70   0.108  #> 5 DA00005   5.01  5.05  0.128  0.401  -0.933 -0.584 0.0265  1.16   2.73   0.350  #> 6 DA00006   6.83  1.18 -1.74  -0.156   1.53  -0.721 0.620   0.527  0.772 NA      #> # ℹ 90 more variables: ACY1 <dbl>, ADA <dbl>, ADA2 <dbl>, ADAM15 <dbl>, #> #   ADAM23 <dbl>, ADAM8 <dbl>, ADAMTS13 <dbl>, ADAMTS15 <dbl>, ADAMTS16 <dbl>, #> #   ADAMTS8 <dbl>, ADCYAP1R1 <dbl>, ADGRE2 <dbl>, ADGRE5 <dbl>, ADGRG1 <dbl>, #> #   ADGRG2 <dbl>, ADH4 <dbl>, ADM <dbl>, AGER <dbl>, AGR2 <dbl>, AGR3 <dbl>, #> #   AGRN <dbl>, AGRP <dbl>, AGXT <dbl>, AHCY <dbl>, AHSP <dbl>, AIF1 <dbl>, #> #   AIFM1 <dbl>, AK1 <dbl>, AKR1B1 <dbl>, AKR1C4 <dbl>, AKT1S1 <dbl>, #> #   AKT3 <dbl>, ALCAM <dbl>, ALDH1A1 <dbl>, ALDH3A1 <dbl>, ALPP <dbl>, …"},{"path":"https://hda1472.github.io/HDAnalyzeR/articles/HDAnalyzeR.html","id":"quality-control-qc","dir":"Articles","previous_headings":"","what":"Quality Control (QC)","title":"HDAnalyzeR","text":"hd_qc_summary() provides comprehensive summary input data metadata. Regarding data, check column types, calculate percentage NAs column row plot distributions, calculate protein-protein correlations, create heatmap correlations. Users can also specify threshold reporting protein-protein correlations. Regarding metadata, check column types calculate percentage NAs column row exactly . also create summary visualizations metadata variables like “Sex”, “Disease”, “Age”. Let’s run QC summary take look results!","code":"qc_data <- hd_qc_summary(hd_obj,                           variable = \"Disease\",                           palette = list(Disease = \"cancers12\", Sex = \"sex\"),                           cor_threshold = 0.7) #> [1] \"Summary:\" #> [1] \"Note: In case of long output, only the first 10 rows are shown. To see the rest display the object with view()\" #> [1] \"Number of samples: 586\" #> [1] \"Number of variables: 101\" #> [1] \"--------------------------------------\" #> [1] \"categorical : 1\" #> [1] \"continuous : 100\" #> [1] \"--------------------------------------\" #> [1] \"NA percentage in each column:\" #> # A tibble: 91 × 2 #>    column   na_percentage #>    <chr>            <dbl> #>  1 ACE2               6.1 #>  2 ACTA2              6.1 #>  3 ACTN4              6.1 #>  4 ADAM15             6.1 #>  5 ADAMTS16           6.1 #>  6 ADH4               6.1 #>  7 AKR1C4             6.1 #>  8 AMBN               6.1 #>  9 AMN                6.1 #> 10 AOC1               6.1 #> # ℹ 81 more rows #> [1] \"--------------------------------------\" #> [1] \"NA percentage in each row:\" #> # A tibble: 144 × 2 #>    DAid    na_percentage #>    <chr>           <dbl> #>  1 DA00450          57.4 #>  2 DA00482          53.5 #>  3 DA00542          53.5 #>  4 DA00003          50.5 #>  5 DA00463          46.5 #>  6 DA00116          43.6 #>  7 DA00475          42.6 #>  8 DA00578          42.6 #>  9 DA00443          41.6 #> 10 DA00476          35.6 #> # ℹ 134 more rows #> [1] \"--------------------------------------\" #> [1] \"Protein-protein correlations above 0.7:\" #>   Protein1 Protein2 Correlation #> 1  ATP5IF1    AIFM1        0.76 #> 2    AXIN1 ARHGEF12        0.76 #> 3    AIFM1  ATP5IF1        0.76 #> 4 ARHGEF12    AXIN1        0.76 #> 5 ARHGEF12    AIFM1        0.71 #> 6    AIFM1 ARHGEF12        0.71 #> [1] \"--------------------------------------\" #> [1] \"Summary:\" #> [1] \"Note: In case of long output, only the first 10 rows are shown. To see the rest display the object with view()\" #> [1] \"Number of samples: 586\" #> [1] \"Number of variables: 9\" #> [1] \"--------------------------------------\" #> [1] \"categorical : 7\" #> [1] \"continuous : 2\" #> [1] \"--------------------------------------\" #> [1] \"NA percentage in each column:\" #> # A tibble: 1 × 2 #>   column na_percentage #>   <chr>          <dbl> #> 1 Grade           91.5 #> [1] \"--------------------------------------\" #> [1] \"NA percentage in each row:\" #> # A tibble: 536 × 2 #>    DAid    na_percentage #>    <chr>           <dbl> #>  1 DA00001          11.1 #>  2 DA00002          11.1 #>  3 DA00003          11.1 #>  4 DA00004          11.1 #>  5 DA00005          11.1 #>  6 DA00006          11.1 #>  7 DA00007          11.1 #>  8 DA00008          11.1 #>  9 DA00009          11.1 #> 10 DA00010          11.1 #> # ℹ 526 more rows #> [1] \"--------------------------------------\"  qc_data$data_summary$na_col_hist #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. qc_data$data_summary$cor_heatmap qc_data$metadata_summary$Sex qc_data$metadata_summary$Age #> Picking joint bandwidth of 6.06"},{"path":"https://hda1472.github.io/HDAnalyzeR/articles/HDAnalyzeR.html","id":"imputation-and-dimensionality-reduction","dir":"Articles","previous_headings":"","what":"Imputation and Dimensionality Reduction","title":"HDAnalyzeR","text":"saw QC results, data contains NAs issues need addressed. impute missing values using K-nearest neighbors (KNN) 5 neighbors via hd_impute_knn(). imputation, run Principal Component Analysis (PCA) via hd_auto_pca() Uniform Manifold Approximation Projection (UMAP) via hd_auto_umap() check outliers, batch effects, potential issues. wrapper functions run necessary steps perform PCA UMAP, including scaling data coloring plots metadata variables.    Let’s color UMAP Sex instead Disease see sex related differences.","code":"hd_obj <- hd_impute_knn(hd_obj, k = 5, verbose = FALSE) head(hd_obj$data) #> # A tibble: 6 × 101 #>   DAid    AARSD1  ABL1  ACAA1    ACAN   ACE2  ACOX1   ACP5  ACP6 ACTA2   ACTN4 #>   <chr>    <dbl> <dbl>  <dbl>   <dbl>  <dbl>  <dbl>  <dbl> <dbl> <dbl>   <dbl> #> 1 DA00001   3.39  2.76  1.71   0.0333  1.76  -0.919 1.54   2.15  2.81   0.742  #> 2 DA00002   1.42  1.25 -0.816 -0.459   0.826 -0.902 0.647  1.30  0.798 -0.0659 #> 3 DA00003   3.70  2.85  2.27   0.989   0.184  0.330 1.37   0.876 1.33   0.570  #> 4 DA00004   3.41  3.38  1.69   0.415   1.52   1.23  0.841  0.582 1.70   0.108  #> 5 DA00005   5.01  5.05  0.128  0.401  -0.933 -0.584 0.0265 1.16  2.73   0.350  #> 6 DA00006   6.83  1.18 -1.74  -0.156   1.53  -0.721 0.620  0.527 0.772  0.446  #> # ℹ 90 more variables: ACY1 <dbl>, ADA <dbl>, ADA2 <dbl>, ADAM15 <dbl>, #> #   ADAM23 <dbl>, ADAM8 <dbl>, ADAMTS13 <dbl>, ADAMTS15 <dbl>, ADAMTS16 <dbl>, #> #   ADAMTS8 <dbl>, ADCYAP1R1 <dbl>, ADGRE2 <dbl>, ADGRE5 <dbl>, ADGRG1 <dbl>, #> #   ADGRG2 <dbl>, ADH4 <dbl>, ADM <dbl>, AGER <dbl>, AGR2 <dbl>, AGR3 <dbl>, #> #   AGRN <dbl>, AGRP <dbl>, AGXT <dbl>, AHCY <dbl>, AHSP <dbl>, AIF1 <dbl>, #> #   AIFM1 <dbl>, AK1 <dbl>, AKR1B1 <dbl>, AKR1C4 <dbl>, AKT1S1 <dbl>, #> #   AKT3 <dbl>, ALCAM <dbl>, ALDH1A1 <dbl>, ALDH3A1 <dbl>, ALPP <dbl>, … pca_res <- hd_auto_pca(hd_obj,                         components = 10,                         plot_color = \"Disease\",                         plot_palette = \"cancers12\")  head(pca_res$pca_res) #> # A tibble: 6 × 11 #>   DAid     PC1     PC2    PC3    PC4    PC5    PC6    PC7    PC8     PC9    PC10 #>   <fct>  <dbl>   <dbl>  <dbl>  <dbl>  <dbl>  <dbl>  <dbl>  <dbl>   <dbl>   <dbl> #> 1 DA00… -3.69  -4.32   -2.30  -3.15  -2.53  -2.78  -2.77   0.603 -3.20   -0.532  #> 2 DA00…  4.17  -2.70    2.10  -0.472 -4.47  -1.96  -1.04   1.51  -0.229  -0.0614 #> 3 DA00… -3.31   4.74    1.41   0.920 -0.588  0.316 -0.103 -0.441  1.36    0.201  #> 4 DA00… -4.78   0.447   1.44   0.134 -1.15  -0.284  0.279  3.34   0.0452 -0.866  #> 5 DA00… -5.04  -3.69    0.820 -5.73  -0.697 -3.87  -1.01   1.96  -0.970  -1.12   #> 6 DA00…  0.429  0.0714 -1.86  -7.80   0.809 -2.89  -0.733  0.381 -0.617   1.32 pca_res$pca_plot pca_res$pca_loadings_plot pca_res$pca_variance_plot umap_res <- hd_auto_umap(hd_obj,                           plot_color = \"Sex\",                           plot_palette = \"sex\")  head(umap_res$umap_res) #> # A tibble: 6 × 3 #>   DAid     UMAP1  UMAP2 #>   <fct>    <dbl>  <dbl> #> 1 DA00001  2.26   1.14  #> 2 DA00002 -0.917 -2.46  #> 3 DA00003  0.394  2.49  #> 4 DA00004  0.658  2.74  #> 5 DA00005  2.31   1.29  #> 6 DA00006 -1.83  -0.203 umap_res$umap_plot"},{"path":[]},{"path":"https://hda1472.github.io/HDAnalyzeR/articles/HDAnalyzeR.html","id":"differential-expression-analysis","dir":"Articles","previous_headings":"Biomarker Identification","what":"Differential Expression Analysis","title":"HDAnalyzeR","text":"run differential expression analysis identify potential biomarkers. use hd_de_limma() able correct also Sex Age. method help us pinpoint proteins significantly different conditions. run analysis 3 times different case classes classes time. also run hd_plot_volcano() visualize results. present results Acute Myeloid Leukemia (AML).  can also summarize results via hd_plot_de_summary(). order use function need store results list.","code":"de_res_aml <- hd_de_limma(hd_obj,                           variable = \"Disease\",                           case = \"AML\",                           correct = c(\"Sex\", \"Age\")) |>    hd_plot_volcano(logfc_lim = 1)  head(de_res_aml$de_res) #> # A tibble: 6 × 10 #>   Feature  logFC   CI.L  CI.R AveExpr     t  P.Value adj.P.Val     B Disease #>   <chr>    <dbl>  <dbl> <dbl>   <dbl> <dbl>    <dbl>     <dbl> <dbl> <chr>   #> 1 AZU1     1.54   1.23   1.84   0.226  9.97 9.51e-22  9.51e-20  38.5 AML     #> 2 ADA      1.40   1.12   1.68   0.924  9.75 6.37e-21  3.19e-19  36.6 AML     #> 3 APBB1IP  1.08   0.799  1.35  -0.253  7.62 1.04e-13  3.45e-12  20.3 AML     #> 4 APEX1    1.45   1.07   1.82   0.515  7.56 1.50e-13  3.74e-12  19.9 AML     #> 5 ANGPT1  -1.63  -2.09  -1.16   1.72  -6.87 1.65e-11  3.29e-10  15.3 AML     #> 6 ARTN     0.826  0.572  1.08   0.423  6.38 3.60e-10  6.00e- 9  12.3 AML de_res_aml$volcano_plot de_res_crc <- hd_de_limma(hd_obj,                           variable = \"Disease\",                           case = \"CRC\",                           correct = c(\"Sex\", \"Age\")) de_res_lungc <- hd_de_limma(hd_obj,                             variable = \"Disease\",                             case = \"LUNGC\",                             correct = c(\"Sex\", \"Age\")) de_res <- list(\"AML\" = de_res_aml,                 \"CRC\" = de_res_crc,                 \"LUNGC\" = de_res_lungc)  de_summary <- hd_plot_de_summary(de_res, class_palette = \"cancers12\") de_summary$de_barplot de_summary$upset_plot_up de_summary$upset_plot_down"},{"path":"https://hda1472.github.io/HDAnalyzeR/articles/HDAnalyzeR.html","id":"lasso-machine-learning-classification-model","dir":"Articles","previous_headings":"Biomarker Identification","what":"Lasso Machine Learning Classification Model","title":"HDAnalyzeR","text":"addition differential expression analysis, use Lasso machine learning classification model identify significant features. model help us understand proteins predictive conditions studied. start creating data split hd_split_data() don’t data leakage train test data run model hd_model_rreg(). , run analysis 3 times present results AML.    can get visual summary results via hd_plot_model_summary(). order use function need store results list .","code":"hd_split <- hd_split_data(hd_obj, variable = \"Disease\")  lasso_res_aml <- hd_model_rreg(hd_split,                                 variable = \"Disease\",                                case = \"AML\",                                mixture = 1,                                grid_size = 5,                                palette = \"cancers12\",                                verbose = FALSE)  lasso_res_aml$metrics #> $accuracy #> [1] 0.7959184 #>  #> $sensitivity #> [1] 0.9166667 #>  #> $specificity #> [1] 0.7851852 #>  #> $auc #> [1] 0.9351852 #>  #> $confusion_matrix #>           Truth #> Prediction   0   1 #>          0 106   1 #>          1  29  11 lasso_res_aml$roc_curve lasso_res_aml$probability_plot lasso_res_aml$var_imp_plot lasso_res_crc <- hd_model_rreg(hd_split,                                 variable = \"Disease\",                                case = \"CRC\",                                mixture = 1,                                grid_size = 5,                                palette = \"cancers12\",                                verbose = FALSE) lasso_res_lungc <- hd_model_rreg(hd_split,                                   variable = \"Disease\",                                  case = \"LUNGC\",                                  mixture = 1,                                  grid_size = 5,                                  palette = \"cancers12\",                                  verbose = FALSE) lasso_res <- list(\"AML\" = lasso_res_aml,                    \"CRC\" = lasso_res_crc,                    \"LUNGC\" = lasso_res_lungc)  features_summary <- hd_plot_model_summary(lasso_res, class_palette = \"cancers12\") features_summary$metrics_barplot features_summary$features_barplot features_summary$upset_plot_features"},{"path":"https://hda1472.github.io/HDAnalyzeR/articles/HDAnalyzeR.html","id":"one-step-further","dir":"Articles","previous_headings":"","what":"One step further","title":"HDAnalyzeR","text":"final step involves performing -Representation Analysis -regulated proteins differential expression, also identified features ML model. example, use Gene Ontology (GO) database show results AML. use hd_ora() hd_plot_ora() perform visualize analysis.    📓 Remember data dummy-dataset artificial data results guide interpreted real results. purpose vignette show use package functions.","code":"# Extract the proteins identified by both DE and Lasso de_proteins <- de_res_aml$de_res |>    dplyr::filter(adj.P.Val < 0.05) |>    dplyr::pull(Feature)  lasso_proteins <- lasso_res_aml$features |>    dplyr::filter(Scaled_Importance > 0) |>    dplyr::pull(Feature)  intersect_proteins <- intersect(de_proteins, lasso_proteins)  # Perform ORA with GO database and visualize results enrichment <- hd_ora(intersect_proteins,                       database = \"GO\",                       ontology = \"BP\",                       pval_lim_enrichment = 0.2)  # We will use a higher p-value threshold for this example enrichment_plots <- hd_plot_ora(enrichment)  enrichment_plots$dotplot enrichment_plots$treeplot enrichment_plots$cnetplot"},{"path":"https://hda1472.github.io/HDAnalyzeR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Konstantinos Antonopoulos. Author, maintainer. Maria Bueno Alvez. Author. Emil Johansson. Author. Fredrik Edfors Arfwidsson. Author, copyright holder.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Antonopoulos K, Bueno Alvez M, Johansson E, Edfors Arfwidsson F (2024). “HDAnalyzeR: HDA Internal Package Streamed-line Proteomics Analysis.” Zenodo. doi:10.5281/zenodo.13786124.","code":"@Misc{,   title = {HDAnalyzeR: HDA Internal Package for Streamed-line Proteomics Analysis},   author = {Konstantinos Antonopoulos and Maria {Bueno Alvez} and Emil Johansson and Fredrik {Edfors Arfwidsson}},   year = {2024},   howpublished = {Zenodo},   doi = {10.5281/zenodo.13786124}, }"},{"path":"https://hda1472.github.io/HDAnalyzeR/index.html","id":"hdanalyzer-","dir":"","previous_headings":"","what":"HDA Internal Package for Streamed-line Proteomics Analysis","title":"HDA Internal Package for Streamed-line Proteomics Analysis","text":"HDAnalyzeR R package developed Human Disease Blood Atlas project, designed facilitate proteomics analysis biomarker selection blood plasma samples. HDAnalyzeR offers ready--use functions common proteomics tasks protein differential expression analysis, classification models, imputation methods, dimensionality reduction, data visualization, aiming streamline workflows enhance standardization efficiency biomarker discovery disease research.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"HDA Internal Package for Streamed-line Proteomics Analysis","text":"can install latest (recommended) development version HDAnalyzeR GitHub:","code":"# Install devtools if you haven't already install.packages(\"devtools\")  # Install HDAnalyzeR latest version options(timeout = 1200)  # Set timeout to 20 minutes to avoid timeout errors devtools::install_github(\"HDA1472/HDAnalyzeR@v1.1.0\")  # Install HDAnalyzeR development version options(timeout = 1200)  devtools::install_github(\"HDA1472/HDAnalyzeR\")"},{"path":"https://hda1472.github.io/HDAnalyzeR/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"HDA Internal Package for Streamed-line Proteomics Analysis","text":"following example showcases perform differential expression analysis. one many features HDAnalyzeR. complete guide available package’s documentation.","code":"library(HDAnalyzeR)  # Prepare data hd_object <- hd_initialize(example_data, example_metadata)  # Run differential expression analysis de_results <- hd_run_de_limma(hd_object, case = \"AML\")  # Plot volcano plot de_results <- hd_plot_volcano(de_results)  # DE results and volcano plot for AML de_results$de_res de_results$volcano_plot"},{"path":"https://hda1472.github.io/HDAnalyzeR/index.html","id":"issues-and-support","dir":"","previous_headings":"","what":"Issues and Support","title":"HDA Internal Package for Streamed-line Proteomics Analysis","text":"encounter bugs want recommend new features changes existing ones, please open new issue GitHub repository.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/index.html","id":"contact","dir":"","previous_headings":"","what":"Contact","title":"HDA Internal Package for Streamed-line Proteomics Analysis","text":"questions information, please contact us konstantinos.antonopoulos@scilifelab.se.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/add_axis_variance.html","id":null,"dir":"Reference","previous_headings":"","what":"Add component variance to the axis labels — add_axis_variance","title":"Add component variance to the axis labels — add_axis_variance","text":"add_axis_variance() adds explained variance components axis labels.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/add_axis_variance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add component variance to the axis labels — add_axis_variance","text":"","code":"add_axis_variance(dim_object, dim_plot, x, y)"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/add_axis_variance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add component variance to the axis labels — add_axis_variance","text":"dim_object PCA object containing PCA variance. Created hd_pca(). dim_plot ggplot object data points 2D plane. x name column dim_res contains x-axis values. y name column dim_res contains y-axis values.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/add_axis_variance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add component variance to the axis labels — add_axis_variance","text":"ggplot object","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/apply_palette.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply palette to plot — apply_palette","title":"Apply palette to plot — apply_palette","text":"apply_palette applies color palette plot. checks palette valid palette Human Protein Atlas (HPA) custom palette.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/apply_palette.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply palette to plot — apply_palette","text":"","code":"apply_palette(plot, palette, type = \"color\")"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/apply_palette.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply palette to plot — apply_palette","text":"plot plot apply palette. palette color palette apply. can either character name palette HPA custom palette (example c(\"M\" = \"red\", \"F\" = \"blue\")). type type palette apply. Default \"color\". option \"fill\".","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/apply_palette.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply palette to plot — apply_palette","text":"plot selected palette.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/balance_groups.html","id":null,"dir":"Reference","previous_headings":"","what":"Balance groups — balance_groups","title":"Balance groups — balance_groups","text":"balance_groups() balances groups based case variable provided. downsamples control group match number samples case group.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/balance_groups.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Balance groups — balance_groups","text":"","code":"balance_groups(dat, variable, case = 1, seed = 123)"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/balance_groups.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Balance groups — balance_groups","text":"dat dataset containing case control groups. variable name column containing case control groups. Default \"Disease\". case case class. Default 1. seed Seed reproducibility. Default 123.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/balance_groups.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Balance groups — balance_groups","text":"balanced dataset.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/calc_na_percentage_col.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the percentage of NAs in each column of the dataset — calc_na_percentage_col","title":"Calculate the percentage of NAs in each column of the dataset — calc_na_percentage_col","text":"calc_na_percentage_col() calculates percentage NAs column input dataset. filters columns 0% missing data returns rest descending order.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/calc_na_percentage_col.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the percentage of NAs in each column of the dataset — calc_na_percentage_col","text":"","code":"calc_na_percentage_col(dat)"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/calc_na_percentage_col.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the percentage of NAs in each column of the dataset — calc_na_percentage_col","text":"dat input dataset.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/calc_na_percentage_col.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the percentage of NAs in each column of the dataset — calc_na_percentage_col","text":"tibble column names percentage NAs column.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/calc_na_percentage_row.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the percentage of NAs in each row of the dataset — calc_na_percentage_row","title":"Calculate the percentage of NAs in each row of the dataset — calc_na_percentage_row","text":"calc_na_percentage_row() calculates percentage NAs row input dataset. filters rows 0% missing data returns rest descending order.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/calc_na_percentage_row.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the percentage of NAs in each row of the dataset — calc_na_percentage_row","text":"","code":"calc_na_percentage_row(dat, sample_id)"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/calc_na_percentage_row.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the percentage of NAs in each row of the dataset — calc_na_percentage_row","text":"dat input dataset. sample_id name column containing sample IDs.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/calc_na_percentage_row.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the percentage of NAs in each row of the dataset — calc_na_percentage_row","text":"tibble DAids percentage NAs row.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/calculate_na_percentage.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate NA percentage — calculate_na_percentage","title":"Calculate NA percentage — calculate_na_percentage","text":"calculate_na_percentage() calculates percentage missing values column dataset.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/calculate_na_percentage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate NA percentage — calculate_na_percentage","text":"","code":"calculate_na_percentage(dat)"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/calculate_na_percentage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate NA percentage — calculate_na_percentage","text":"dat dataset.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/calculate_na_percentage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate NA percentage — calculate_na_percentage","text":"tibble containing column names respective NA percentages.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/check_col_types.html","id":null,"dir":"Reference","previous_headings":"","what":"Check the column types of the dataset — check_col_types","title":"Check the column types of the dataset — check_col_types","text":"check_col_types() checks column types input dataset returns counts class.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/check_col_types.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check the column types of the dataset — check_col_types","text":"","code":"check_col_types(dat, unique_threshold = 5)"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/check_col_types.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check the column types of the dataset — check_col_types","text":"dat input dataset. unique_threshold threshold consider numeric variable categorical. Default 5.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/check_col_types.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check the column types of the dataset — check_col_types","text":"table counts class dataset.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/check_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Check data structure of object — check_data","title":"Check data structure of object — check_data","text":"check_data() checks structure object provided. checks object hd_model object list containing train test data. also checks variable present train test data.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/check_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check data structure of object — check_data","text":"","code":"check_data(dat, variable = \"Disease\")"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/check_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check data structure of object — check_data","text":"dat hd_model object list containing train test data. variable name column containing case control groups. Default \"Disease\".","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/check_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check data structure of object — check_data","text":"model object containing train test data.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/check_numeric_columns.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for non-numeric columns — check_numeric_columns","title":"Check for non-numeric columns — check_numeric_columns","text":"check_numeric_columns() checks columns except first (Sample ID) dataframe numeric.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/check_numeric_columns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for non-numeric columns — check_numeric_columns","text":"","code":"check_numeric_columns(dat)"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/check_numeric_columns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for non-numeric columns — check_numeric_columns","text":"dat dataframe check.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/check_numeric_columns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for non-numeric columns — check_numeric_columns","text":"warning names non-numeric columns .","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/evaluate_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Finalize and evaluate the model — evaluate_model","title":"Finalize and evaluate the model — evaluate_model","text":"evaluate_model() finalizes model using best hyperparameters evaluates model using test set. calculates accuracy, sensitivity, specificity, AUC, confusion matrix. also plots ROC curve.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/evaluate_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Finalize and evaluate the model — evaluate_model","text":"","code":"evaluate_model(   dat,   variable = \"Disease\",   case,   mixture = NULL,   palette = NULL,   verbose = TRUE,   seed = 123 )"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/evaluate_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Finalize and evaluate the model — evaluate_model","text":"dat hd_model object coming tuning function. variable variable predict. Default \"Disease\". case case class. mixture mixture parameter elastic net. NULL tuned. Default NULL. palette color palette classes. character, one palettes hd_palettes(). Default NULL. verbose Whether print progress messages. Default TRUE. seed Seed reproducibility. Default 123.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/evaluate_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Finalize and evaluate the model — evaluate_model","text":"model object containing train test data, final model, metrics, ROC curve, mixture parameter.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/evaluate_multiclass_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Finalize and evaluate the multiclass model — evaluate_multiclass_model","title":"Finalize and evaluate the multiclass model — evaluate_multiclass_model","text":"evaluate_multiclass_model() finalizes model using best hyperparameters evaluates model using test set. calculates accuracy, sensitivity, specificity, AUC, confusion matrix. also plots ROC curve.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/evaluate_multiclass_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Finalize and evaluate the multiclass model — evaluate_multiclass_model","text":"","code":"evaluate_multiclass_model(   dat,   variable = \"Disease\",   mixture = NULL,   palette = NULL,   verbose = TRUE,   seed = 123 )"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/evaluate_multiclass_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Finalize and evaluate the multiclass model — evaluate_multiclass_model","text":"dat hd_model object coming tuning function. variable variable predict. Default \"Disease\". mixture mixture parameter elastic net. NULL tuned. Default NULL. palette color palette classes. character, one palettes hd_palettes(). Default NULL. verbose Whether print progress messages. Default TRUE. seed Seed reproducibility. Default 123.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/evaluate_multiclass_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Finalize and evaluate the multiclass model — evaluate_multiclass_model","text":"model object containing train test data, final model, metrics, ROC curve, mixture parameter.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/example_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Cancer cohort Olink data — example_data","title":"Cancer cohort Olink data — example_data","text":"data subset synthetic cancer dataset keeping first 100 Assays. DAid, Assay_Warning, QC_Warning, PlateID added extra columns. original dataset processed process_example_data script.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/example_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cancer cohort Olink data — example_data","text":"","code":"example_data"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/example_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Cancer cohort Olink data — example_data","text":"tibble 56,142 rows 10 columns: DAid Disease Atlas sample ID Sample Sample ID OlinkID Olink Assay ID UniProt UniProt Assay ID Assay Assay name Panel Olink Panel Assay belongs NPX NPX value Sample Assay Assay_Warning Assay warning status sample QC_Warning QC warning status sample PlateID ID plate sample processed","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/example_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Cancer cohort Olink data — example_data","text":"https://github.com/buenoalvezm/Pan-cancer-profiling/blob/main/data/cancer_data_synthetic.rds","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/example_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cancer cohort Olink data — example_data","text":"","code":"example_data #> # A tibble: 56,142 × 10 #>    DAid    Sample   OlinkID UniProt Assay Panel     NPX Assay_Warning QC_Warning #>    <chr>   <chr>    <chr>   <chr>   <chr> <chr>   <dbl> <chr>         <chr>      #>  1 DA00001 AML_syn… OID213… Q9BTE6  AARS… Onco…  3.39   PASS          PASS       #>  2 DA00001 AML_syn… OID212… P00519  ABL1  Onco…  2.76   PASS          PASS       #>  3 DA00001 AML_syn… OID212… P09110  ACAA1 Onco…  1.71   PASS          PASS       #>  4 DA00001 AML_syn… OID201… P16112  ACAN  Card…  0.0333 PASS          PASS       #>  5 DA00001 AML_syn… OID201… Q9BYF1  ACE2  Card…  1.76   PASS          PASS       #>  6 DA00001 AML_syn… OID201… Q15067  ACOX1 Card… -0.919  PASS          PASS       #>  7 DA00001 AML_syn… OID203… P13686  ACP5  Card…  1.54   PASS          PASS       #>  8 DA00001 AML_syn… OID214… Q9NPH0  ACP6  Onco…  2.15   PASS          PASS       #>  9 DA00001 AML_syn… OID200… P62736  ACTA2 Card…  2.81   PASS          PASS       #> 10 DA00001 AML_syn… OID204… O43707  ACTN4 Infl…  0.742  PASS          PASS       #> # ℹ 56,132 more rows #> # ℹ 1 more variable: PlateID <chr>"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/example_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Cancer cohort metadata — example_metadata","title":"Cancer cohort metadata — example_metadata","text":"data subset synthetic cancer metadata. DAid, Age, BMI, Cohort added extra columns. original dataset processed process_example_metadata script.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/example_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cancer cohort metadata — example_metadata","text":"","code":"example_metadata"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/example_metadata.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Cancer cohort metadata — example_metadata","text":"tibble 586 rows 9 columns: DAid Disease Atlas sample ID Sample Sample ID Disease cancer type Stage cancer stage Grade cancer grade Sex patient sex Age patient age BMI patient BMI Cohort cohort patient belongs ","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/example_metadata.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Cancer cohort metadata — example_metadata","text":"https://github.com/buenoalvezm/Pan-cancer-profiling/blob/main/data/cancer_metadata_synthetic.rds","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/example_metadata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cancer cohort metadata — example_metadata","text":"","code":"example_metadata #> # A tibble: 586 × 9 #>    DAid    Sample     Disease Stage   Grade Sex     Age   BMI Cohort #>    <chr>   <chr>      <chr>   <chr>   <chr> <chr> <dbl> <dbl> <chr>  #>  1 DA00001 AML_syn_1  AML     2       NA    F        42  22.7 UCAN   #>  2 DA00002 AML_syn_2  AML     Unknown NA    M        69  33.1 UCAN   #>  3 DA00003 AML_syn_3  AML     2       NA    F        61  26.2 UCAN   #>  4 DA00004 AML_syn_4  AML     Unknown NA    M        54  28.1 UCAN   #>  5 DA00005 AML_syn_5  AML     2       NA    F        57  21.4 UCAN   #>  6 DA00006 AML_syn_6  AML     Unknown NA    M        86  33.9 UCAN   #>  7 DA00007 AML_syn_7  AML     1       NA    F        85  28.7 UCAN   #>  8 DA00008 AML_syn_8  AML     3       NA    F        88  32.6 UCAN   #>  9 DA00009 AML_syn_9  AML     Unknown NA    M        80  26.1 UCAN   #> 10 DA00010 AML_syn_10 AML     3       NA    M        48  33.8 UCAN   #> # ℹ 576 more rows"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/extract_protein_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract protein lists from the upset data — extract_protein_list","title":"Extract protein lists from the upset data — extract_protein_list","text":"extract_protein_list() extracts protein lists upset data. creates list proteins combination diseases. also creates tibble proteins combination diseases.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/extract_protein_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract protein lists from the upset data — extract_protein_list","text":"","code":"extract_protein_list(upset_data, proteins)"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/extract_protein_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract protein lists from the upset data — extract_protein_list","text":"upset_data tibble upset data. proteins list protein lists disease.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/extract_protein_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract protein lists from the upset data — extract_protein_list","text":"list following elements: proteins_list: list proteins combination diseases. proteins_df: tibble proteins combination diseases.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/fix_components_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Fix component names — fix_components_names","title":"Fix component names — fix_components_names","text":"fix_components_names() fixes names PCs PCA results. number PCs higher 10, function remove zeros front PC names (example PC01 -> PC1).","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/fix_components_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fix component names — fix_components_names","text":"","code":"fix_components_names(   pca_res,   components,   by_sample,   sample_id,   var_name,   type = \"pca\" )"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/fix_components_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fix component names — fix_components_names","text":"pca_res tibble PCA results. Created hd_pca(). components number PCs calculated. by_sample TRUE, points represent samples. FALSE, points represent features. sample_id name column data contains sample IDs. var_name name column data contains feature IDs. type type analysis. Default \"pca\".","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/fix_components_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fix component names — fix_components_names","text":"tibble PCA results fixed PC names.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/gene_to_entrezid.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert gene names to ENTREZID — gene_to_entrezid","title":"Convert gene names to ENTREZID — gene_to_entrezid","text":"gene_to_entrezid() converts gene names ENTREZID using org.Hs.eg.db database.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/gene_to_entrezid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert gene names to ENTREZID — gene_to_entrezid","text":"","code":"gene_to_entrezid(gene_list, background = NULL)"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/gene_to_entrezid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert gene names to ENTREZID — gene_to_entrezid","text":"gene_list character vector containing gene names. background character vector containing background genes .","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/gene_to_entrezid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert gene names to ENTREZID — gene_to_entrezid","text":"list containing gene list background ENTREZID.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/generate_title.html","id":null,"dir":"Reference","previous_headings":"","what":"Create title for variable importance plot — generate_title","title":"Create title for variable importance plot — generate_title","text":"generate_title() generates subtitle variable importance plot.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/generate_title.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create title for variable importance plot — generate_title","text":"","code":"generate_title(   features,   accuracy,   sensitivity,   specificity,   auc,   mixture = NULL,   title = c(\"accuracy\", \"sensitivity\", \"specificity\", \"auc\", \"features\", \"top-features\",     \"mixture\") )"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/generate_title.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create title for variable importance plot — generate_title","text":"features tibble features model importance. accuracy Accuracy model. sensitivity Sensitivity model. specificity Specificity model. auc AUC model. mixture Mixture lasso ridge regularization. random forest models NULL. title Vector subtitle elements include plot.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/generate_title.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create title for variable importance plot — generate_title","text":"plot subtitle character vector.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_auto_pca.html","id":null,"dir":"Reference","previous_headings":"","what":"Run PCA analysis and plot the results — hd_auto_pca","title":"Run PCA analysis and plot the results — hd_auto_pca","text":"hd_auto_pca() runs PCA analysis provided data plots PCA results.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_auto_pca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run PCA analysis and plot the results — hd_auto_pca","text":"","code":"hd_auto_pca(   dat,   metadata = NULL,   components = 10,   by_sample = TRUE,   plot_x = \"PC1\",   plot_y = \"PC2\",   plot_color = NULL,   plot_palette = NULL )"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_auto_pca.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run PCA analysis and plot the results — hd_auto_pca","text":"dat HDAnalyzeR object dataset wide format sample_id first column. metadata dataset containing metadata information sample ID first column. HDAnalyzeR object provided, parameter needed. components number PCs calculated. Default 10. by_sample TRUE, points represent samples. FALSE, points represent features. Default TRUE. plot_x name column dim_res contains x-axis values. Default \"PC1\". plot_y name column dim_res contains y-axis values. Default \"PC2\". plot_color name column dim_res contains variable used plot points color. Default NULL. plot_palette color palette plot. character, one palettes hd_palettes(). Default NULL.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_auto_pca.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run PCA analysis and plot the results — hd_auto_pca","text":"list PCA results PCA plots.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_auto_pca.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run PCA analysis and plot the results — hd_auto_pca","text":"","code":"# Create the HDAnalyzeR object providing the data and metadata hd_object <- hd_initialize(example_data, example_metadata)  # Run the PCA analysis hd_auto_pca(hd_object, components = 20, plot_color = \"Disease\", plot_palette = \"cancers12\") #> $pca_res #> # A tibble: 586 × 21 #>    DAid        PC1     PC2      PC3    PC4    PC5     PC6     PC7    PC8    PC9 #>    <fct>     <dbl>   <dbl>    <dbl>  <dbl>  <dbl>   <dbl>   <dbl>  <dbl>  <dbl> #>  1 DA00001  -3.67  -4.28   -2.34    -3.10  -2.65  -2.73   -2.78    0.433 -3.23  #>  2 DA00002   4.11  -2.64    2.04    -0.441 -4.43  -1.91   -0.897   1.54  -0.283 #>  3 DA00003  -3.34   4.72    1.41     0.881 -0.561  0.308  -0.0612 -0.267  1.42  #>  4 DA00004  -4.78   0.443   1.41     0.107 -1.10  -0.262   0.350   3.33  -0.336 #>  5 DA00005  -4.98  -3.67    0.711   -5.70  -0.807 -3.77   -0.969   1.83  -1.29  #>  6 DA00006   0.395  0.0572 -1.90    -7.75   0.707 -2.70   -0.681   0.301 -0.486 #>  7 DA00007 -10.5   -2.91   -0.382   -0.841 -1.61   1.96   -1.30    2.51  -2.23  #>  8 DA00008   2.64  -2.01    2.75    -0.128 -0.852  0.408  -1.70    0.595 -0.135 #>  9 DA00009  -1.79  -0.461   2.79    -2.61  -2.71   0.0732 -3.08    1.75  -1.72  #> 10 DA00010   3.57   0.821  -0.00756  1.50  -2.66  -0.856   0.0190  1.17  -0.683 #> # ℹ 576 more rows #> # ℹ 11 more variables: PC10 <dbl>, PC11 <dbl>, PC12 <dbl>, PC13 <dbl>, #> #   PC14 <dbl>, PC15 <dbl>, PC16 <dbl>, PC17 <dbl>, PC18 <dbl>, PC19 <dbl>, #> #   PC20 <dbl> #>  #> $pca_loadings #> # A tibble: 10,000 × 3 #>    terms    value component #>    <chr>    <dbl> <chr>     #>  1 AARSD1 -0.133  PC1       #>  2 ABL1   -0.198  PC1       #>  3 ACAA1  -0.163  PC1       #>  4 ACAN    0.0123 PC1       #>  5 ACE2   -0.0583 PC1       #>  6 ACOX1  -0.135  PC1       #>  7 ACP5   -0.0626 PC1       #>  8 ACP6   -0.0933 PC1       #>  9 ACTA2  -0.0751 PC1       #> 10 ACTN4  -0.0424 PC1       #> # ℹ 9,990 more rows #>  #> $pca_variance #> # A tibble: 20 × 3 #>    component percent_variance cumulative_percent_variance #>        <int>            <dbl>                       <dbl> #>  1         1            15.7                         15.7 #>  2         2             6.72                        22.4 #>  3         3             3.73                        26.2 #>  4         4             3.31                        29.5 #>  5         5             2.90                        32.4 #>  6         6             2.44                        34.8 #>  7         7             2.25                        37.1 #>  8         8             1.70                        38.8 #>  9         9             1.61                        40.4 #> 10        10             1.58                        42.0 #> 11        11             1.49                        43.5 #> 12        12             1.45                        44.9 #> 13        13             1.39                        46.3 #> 14        14             1.35                        47.6 #> 15        15             1.32                        49.0 #> 16        16             1.27                        50.2 #> 17        17             1.25                        51.5 #> 18        18             1.22                        52.7 #> 19        19             1.19                        53.9 #> 20        20             1.17                        55.1 #>  #> $by_sample #> [1] TRUE #>  #> $pca_loadings_plot  #>  #> $pca_variance_plot  #>  #> $pca_plot  #>  #> attr(,\"class\") #> [1] \"hd_pca\""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_auto_umap.html","id":null,"dir":"Reference","previous_headings":"","what":"Run UMAP analysis and plot the results — hd_auto_umap","title":"Run UMAP analysis and plot the results — hd_auto_umap","text":"hd_auto_umap() runs UMAP analysis provided data plots UMAP results.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_auto_umap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run UMAP analysis and plot the results — hd_auto_umap","text":"","code":"hd_auto_umap(   dat,   metadata = NULL,   by_sample = TRUE,   plot_x = \"UMAP1\",   plot_y = \"UMAP2\",   plot_color = NULL,   plot_palette = NULL )"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_auto_umap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run UMAP analysis and plot the results — hd_auto_umap","text":"dat HDAnalyzeR object dataset wide format sample_id first column. metadata dataset containing metadata information sample ID first column. HDAnalyzeR object provided, parameter needed. by_sample TRUE, points represent samples. FALSE, points represent features. Default TRUE. plot_x name column dim_res contains x-axis values. Default \"PC1\". plot_y name column dim_res contains y-axis values. Default \"PC2\". plot_color name column dim_res contains variable used plot points color. Default NULL. plot_palette color palette plot. character, one palettes hd_palettes(). Default NULL.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_auto_umap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run UMAP analysis and plot the results — hd_auto_umap","text":"list UMAP results UMAP plots.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_auto_umap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run UMAP analysis and plot the results — hd_auto_umap","text":"","code":"# Create the HDAnalyzeR object providing the data and metadata hd_object <- hd_initialize(example_data, example_metadata)  # Run the UMAP analysis hd_auto_umap(hd_object, plot_color = \"Disease\", plot_palette = \"cancers12\") #> $umap_res #> # A tibble: 586 × 3 #>    DAid     UMAP1   UMAP2 #>    <fct>    <dbl>   <dbl> #>  1 DA00001 -2.39  -0.211  #>  2 DA00002  1.42   2.15   #>  3 DA00003 -1.07  -2.34   #>  4 DA00004 -1.57  -2.31   #>  5 DA00005 -2.71  -0.450  #>  6 DA00006  1.88  -0.286  #>  7 DA00007 -2.90  -1.75   #>  8 DA00008 -0.300  1.73   #>  9 DA00009 -0.803  0.0411 #> 10 DA00010  1.03   2.13   #> # ℹ 576 more rows #>  #> $by_sample #> [1] TRUE #>  #> $umap_plot  #>  #> attr(,\"class\") #> [1] \"hd_umap\""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_bin_columns.html","id":null,"dir":"Reference","previous_headings":"","what":"Bin columns — hd_bin_columns","title":"Bin columns — hd_bin_columns","text":"hd_bin_columns() bins continuous columns labels ranges.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_bin_columns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bin columns — hd_bin_columns","text":"","code":"hd_bin_columns(dat, column_types, bins = 5, round_digits = 0)"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_bin_columns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bin columns — hd_bin_columns","text":"dat data bin. column_types vector containing type column dataframe. bins number bins create. Default 5. round_digits number digits round bin ranges . Default 0.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_bin_columns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bin columns — hd_bin_columns","text":"data binned continuous columns.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_bin_columns.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bin columns — hd_bin_columns","text":"","code":"# Example dataframe test_data <- data.frame(   age = c(25, 35, 45, 55, 65),   BMI = c(25, 35, 30, 32, 28),   sex = c(\"M\", \"F\", \"M\", \"F\", \"M\") )  column_types <- c(\"continuous\", \"continuous\", \"categorical\") hd_bin_columns(test_data, column_types, bins = 3) #>     age   BMI sex #> 1 25-38 25-28   M #> 2 25-38 32-35   F #> 3 38-52 28-32   M #> 4 52-65 32-35   F #> 5 52-65 25-28   M"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_cluster.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster data — hd_cluster","title":"Cluster data — hd_cluster","text":"hd_cluster() takes dataset returns dataset ordered according hierarchical clustering rows columns. data can used plot heatmap ggplot2 clustering functionality.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_cluster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cluster data — hd_cluster","text":"","code":"hd_cluster(   dat,   distance_method = \"euclidean\",   clustering_method = \"ward.D2\",   cluster_rows = TRUE,   cluster_cols = TRUE,   normalize = TRUE )"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_cluster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cluster data — hd_cluster","text":"dat HDAnalyzeR object dataset wide format sample_id first column. distance_method distance method use. Default \"euclidean\". options \"maximum\", \"manhattan\", \"canberra\", \"binary\" \"minkowski\". clustering_method clustering method use. Default \"ward.D2\". options \"ward.D\", \"single\", \"complete\", \"average\" (= UPGMA), \"mcquitty\" (= WPGMA), \"median\" (= WPGMC) \"centroid\" (= UPGMC) cluster_rows Whether cluster rows. Default TRUE. cluster_cols Whether cluster columns. Default TRUE. normalize logical value indicating whether normalize data. Z-score normalization applied using hd_normalize() function. Default TRUE.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_cluster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cluster data — hd_cluster","text":"list dataset ordered according clustering rows columns hierarchical clustering object rows columns.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_cluster.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cluster data — hd_cluster","text":"can read distance clustering methods documentation dist() hclust() functions stats package.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_cluster.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cluster data — hd_cluster","text":"","code":"# Create the HDAnalyzeR object providing the data and metadata hd_object <- hd_initialize(example_data, example_metadata)  # Clustered data hd_cluster(hd_object) #> Warning: attributes are not identical across measure variables; they will be dropped #> $cluster_res #> # A tibble: 586 × 101 #>    DAid    AARSD1 ARHGAP1  AKR1B1  ATOX1 ANXA11  AKT1S1 ARHGEF12  AXIN1  ANXA3 #>    <fct>    <dbl>   <dbl>   <dbl>  <dbl>  <dbl>   <dbl>    <dbl>  <dbl>  <dbl> #>  1 DA00029   4.04 -1.42   -2.24   -1.86  -3.11  -0.0624   -1.51  -0.960 -2.46  #>  2 DA00273   2.36 -0.923  -0.801  -2.66  -3.30  -0.580    -2.15  -2.38  -2.22  #>  3 DA00511   1.88 -1.56    0.144  -1.07  -1.39  -2.37     -2.08  -2.05  -1.78  #>  4 DA00016   1.79 -0.835  -0.734  -2.36  -2.03  -2.03     -1.41  -1.33  -1.97  #>  5 DA00267  NA    -0.281   0.0621 -1.29  -2.73  -1.47     -2.03  -1.20  -1.16  #>  6 DA00494   1.98  0.0550 -1.09   -1.26  -1.58  -1.60     -0.568 -1.97  -1.18  #>  7 DA00250   2.92 -0.0653 -0.676  -1.18  -3.54  -1.26     -1.50  -1.56  -2.04  #>  8 DA00271   1.40 -0.0407  0.0906 -1.09  -1.50  -0.256    -1.19  -1.17  -0.228 #>  9 DA00418   1.79 -0.476  -0.387  -0.241 -0.473 -0.261    -1.38  -0.886 -1.64  #> 10 DA00557   2.83  0.557  -0.963   0.119 -0.486  0.442    -0.601 -0.436 -0.155 #> # ℹ 576 more rows #> # ℹ 91 more variables: ANXA4 <dbl>, AIF1 <dbl>, ATP6V1F <dbl>, AHCY <dbl>, #> #   ATXN10 <dbl>, ACAA1 <dbl>, ACOX1 <dbl>, AKT3 <dbl>, ARSB <dbl>, #> #   AIFM1 <dbl>, ATP5IF1 <dbl>, ANGPT1 <dbl>, APP <dbl>, ANKRD54 <dbl>, #> #   AK1 <dbl>, ATG4A <dbl>, ADAM23 <dbl>, AMIGO2 <dbl>, ADAMTS8 <dbl>, #> #   AGER <dbl>, ADGRG2 <dbl>, AOC3 <dbl>, AMBN <dbl>, ADCYAP1R1 <dbl>, #> #   AOC1 <dbl>, ANGPTL3 <dbl>, APOH <dbl>, AGR3 <dbl>, ACP6 <dbl>, AMN <dbl>, … #>  #> $cluster_rows #>  #> Call: #> stats::hclust(d = stats::dist(wide_data, method = distance_method),     method = clustering_method) #>  #> Cluster method   : ward.D2  #> Distance         : euclidean  #> Number of objects: 586  #>  #>  #> $cluster_cols #>  #> Call: #> stats::hclust(d = stats::dist(t(wide_data), method = distance_method),     method = clustering_method) #>  #> Cluster method   : ward.D2  #> Distance         : euclidean  #> Number of objects: 100  #>  #>  #> attr(,\"class\") #> [1] \"hd_cluster\""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_correlate.html","id":null,"dir":"Reference","previous_headings":"","what":"Correlate data — hd_correlate","title":"Correlate data — hd_correlate","text":"hd_correlate() calculates correlation matrix input dataset.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_correlate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Correlate data — hd_correlate","text":"","code":"hd_correlate(x, y = NULL, use = \"pairwise.complete.obs\", method = \"pearson\")"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_correlate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Correlate data — hd_correlate","text":"x numeric vector, matrix tibble. y numeric vector, matrix tibble compatible dimensions x. Default NULL. use character string. method use computing correlations. Default \"pairwise.complete.obs\". options \"everything\", \".obs\", \"complete.obs\", \"na..complete\". method character string. correlation method use. Default \"pearson\". options \"kendall\" \"spearman\".","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_correlate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Correlate data — hd_correlate","text":"matrix protein-protein correlations.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_correlate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Correlate data — hd_correlate","text":"","code":"# Correlate features in a dataset (column wise) dat <- example_data |>  dplyr::select(DAid, Assay, NPX) |>  tidyr::pivot_wider(names_from = \"Assay\", values_from = \"NPX\") |>  dplyr::select(-DAid)  hd_correlate(dat)[1:5, 1:5]  # Subset of the correlation matrix #>        AARSD1  ABL1 ACAA1  ACAN ACE2 #> AARSD1   1.00  0.47  0.19 -0.06 0.04 #> ABL1     0.47  1.00  0.46 -0.01 0.13 #> ACAA1    0.19  0.46  1.00  0.03 0.32 #> ACAN    -0.06 -0.01  0.03  1.00 0.07 #> ACE2     0.04  0.13  0.32  0.07 1.00  # Correlate 2 vectors vec1 <- c(1, 2, 3, 4, 5) vec2 <- c(5, 4, 3, 2, 1) hd_correlate(vec1, vec2) #> [1] -1"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_de_limma.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential expression analysis with limma — hd_de_limma","title":"Differential expression analysis with limma — hd_de_limma","text":"hd_de_limma() performs differential expression analysis using limma package. can correct results metadata columns like Sex, Age, BMI. output tibble includes logFC, p-values, well FDR adjusted p-values. function removes NAs columns used correct .","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_de_limma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential expression analysis with limma — hd_de_limma","text":"","code":"hd_de_limma(   dat,   metadata = NULL,   variable = \"Disease\",   case,   control = NULL,   correct = NULL )"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_de_limma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential expression analysis with limma — hd_de_limma","text":"dat HDAnalyzeR object dataset wide format sample_id first column. metadata dataset containing metadata information sample ID first column. HDAnalyzeR object provided, parameter needed. variable name column containing case control groups continuous variable. case case group. case continuous variable, must NULL. control control groups. NULL, set unique values variable case. case continuous variable, must NULL. correct variables correct results . Default NULL.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_de_limma.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential expression analysis with limma — hd_de_limma","text":"object DE results.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_de_limma.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Differential expression analysis with limma — hd_de_limma","text":"case continuous variable correcting based continuous variable, variable numeric contain least 6 unique variables.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_de_limma.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential expression analysis with limma — hd_de_limma","text":"","code":"# Initialize an HDAnalyzeR object hd_object <- hd_initialize(example_data, example_metadata)  # Run differential expression analysis for AML vs all others hd_de_limma(hd_object, case = \"AML\") #> $de_res #> # A tibble: 100 × 10 #>    Feature  logFC   CI.L   CI.R AveExpr     t  P.Value adj.P.Val     B Disease #>    <chr>    <dbl>  <dbl>  <dbl>   <dbl> <dbl>    <dbl>     <dbl> <dbl> <chr>   #>  1 ADA      1.46   1.17   1.75   0.924   9.83 3.29e-21  3.29e-19 37.3  AML     #>  2 AZU1     1.53   1.20   1.86   0.226   9.10 1.32e-18  6.62e-17 31.4  AML     #>  3 APEX1    1.56   1.17   1.95   0.517   7.90 1.40e-14  4.67e-13 22.3  AML     #>  4 APBB1IP  1.17   0.855  1.49  -0.237   7.24 1.48e-12  3.69e-11 17.8  AML     #>  5 ANGPT1  -1.70  -2.18  -1.21   1.72   -6.92 1.24e-11  2.48e-10 15.6  AML     #>  6 ADGRG1   1.23   0.837  1.63   1.54    6.12 1.75e- 9  2.92e- 8 10.8  AML     #>  7 ANGPT2   0.773  0.522  1.02   0.920   6.04 2.70e- 9  3.86e- 8 10.3  AML     #>  8 ARTN     0.829  0.552  1.11   0.429   5.88 6.95e- 9  8.69e- 8  9.47 AML     #>  9 APP     -0.823 -1.15  -0.493  1.17   -4.90 1.24e- 6  1.35e- 5  4.42 AML     #> 10 AGRP     0.756  0.452  1.06   0.0229  4.88 1.35e- 6  1.35e- 5  4.35 AML     #> # ℹ 90 more rows #>  #> attr(,\"class\") #> [1] \"hd_de\"  # Run differential expression analysis for AML vs CLL and MYEL and correct for metadata variables hd_de_limma(hd_object,                 case = \"AML\",                 control = c(\"CLL\", \"MYEL\"),                 correct = c(\"Sex\", \"Age\", \"BMI\")) #> $de_res #> # A tibble: 100 × 10 #>    Feature   logFC   CI.L   CI.R AveExpr     t  P.Value adj.P.Val      B Disease #>    <chr>     <dbl>  <dbl>  <dbl>   <dbl> <dbl>    <dbl>     <dbl>  <dbl> <chr>   #>  1 ADA       1.35   0.959  1.74    1.46   6.86 2.23e-10   2.23e-8 13.2   AML     #>  2 AZU1      1.77   1.23   2.31    0.592  6.49 1.39e- 9   6.95e-8 11.4   AML     #>  3 ANGPT1   -1.77  -2.37  -1.18    1.26  -5.92 2.59e- 8   8.64e-7  8.60  AML     #>  4 ACP6     -0.814 -1.15  -0.482   1.36  -4.85 3.43e- 6   8.56e-5  3.87  AML     #>  5 ARHGEF12 -1.30  -1.89  -0.716   3.38  -4.40 2.21e- 5   4.35e-4  2.08  AML     #>  6 APP      -0.864 -1.26  -0.472   0.959 -4.36 2.61e- 5   4.35e-4  1.93  AML     #>  7 ACAN     -0.646 -0.946 -0.346   0.596 -4.26 3.81e- 5   5.44e-4  1.56  AML     #>  8 AGR2     -1.18  -1.82  -0.545   1.78  -3.67 3.60e- 4   4.29e-3 -0.539 AML     #>  9 ATOX1    -0.897 -1.38  -0.410   3.23  -3.64 3.86e- 4   4.29e-3 -0.607 AML     #> 10 ANXA11   -0.632 -0.990 -0.274   0.973 -3.49 6.55e- 4   6.55e-3 -1.11  AML     #> # ℹ 90 more rows #>  #> attr(,\"class\") #> [1] \"hd_de\"  # Run differential expression analysis for continuous variable hd_de_limma(hd_object, variable = \"Age\", case = NULL, correct = c(\"Sex\")) #> $de_res #> # A tibble: 100 × 8 #>    Feature      logFC as.factor.Sex.F as.factor.Sex.M AveExpr     F   P.Value #>    <chr>        <dbl>           <dbl>           <dbl>   <dbl> <dbl>     <dbl> #>  1 ADAMTS15 -0.000719            3.09            2.92    2.99 1874. 1.02e-291 #>  2 AARSD1    0.000327            2.96            3.25    3.13 1609. 6.06e-275 #>  3 AKT1S1    0.00154             3.28            3.46    3.47 1479. 1.56e-265 #>  4 ATG4A    -0.00157             2.56            2.71    2.55 1138. 1.26e-238 #>  5 ATOX1    -0.00166             3.02            3.18    2.97 1062. 5.65e-233 #>  6 ADM       0.00536             1.53            1.47    1.87  953. 5.49e-224 #>  7 AK1      -0.00373             2.51            2.66    2.34  786. 2.33e-202 #>  8 AKR1B1   -0.000171            2.28            2.33    2.29  783. 1.59e-200 #>  9 ATP5IF1  -0.00321             3.66            4.02    3.60  741. 5.59e-197 #> 10 ARHGEF12 -0.00163             3.19            3.56    3.26  684. 1.08e-187 #> # ℹ 90 more rows #> # ℹ 1 more variable: adj.P.Val <dbl> #>  #> attr(,\"class\") #> [1] \"hd_de\""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_de_ttest.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential expression analysis with t-test — hd_de_ttest","title":"Differential expression analysis with t-test — hd_de_ttest","text":"hd_de_ttest() performs differential expression analysis using t-test. separates data case-control groups, checks data normality perform t-test Wilcoxon test respectively. also performs p value FDR adjustment.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_de_ttest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential expression analysis with t-test — hd_de_ttest","text":"","code":"hd_de_ttest(dat, metadata = NULL, variable = \"Disease\", case, control = NULL)"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_de_ttest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential expression analysis with t-test — hd_de_ttest","text":"dat HDAnalyzeR object dataset wide format sample_id first column. metadata dataset containing metadata information sample ID first column. HDAnalyzeR object provided, parameter needed. variable name column containing case control groups. case case group. control control groups. NULL, set unique values variable case.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_de_ttest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential expression analysis with t-test — hd_de_ttest","text":"object DE results.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_de_ttest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential expression analysis with t-test — hd_de_ttest","text":"","code":"# Initialize an HDAnalyzeR object hd_object <- hd_initialize(example_data, example_metadata)  # Run differential expression analysis for AML vs all others hd_de_ttest(hd_object, case = \"AML\") #> $de_res #> # A tibble: 100 × 6 #>    Feature  logFC t                      P.Value  adj.P.Val Disease #>    <chr>    <dbl> <chr>                    <dbl>      <dbl> <chr>   #>  1 ANGPT2   0.795 6.58369311095654  0.0000000147 0.00000147 AML     #>  2 ADA      1.46  6.4192234222114   0.0000000409 0.00000205 AML     #>  3 ANGPT1  -1.70  -5.8675394657857  0.000000312  0.0000104  AML     #>  4 APEX1    1.30  5.09620552233708  0.00000455   0.000114   AML     #>  5 ADGRG1   1.27  4.99961363397352  0.00000736   0.000147   AML     #>  6 APP     -0.764 -4.69233634609794 0.0000178    0.000255   AML     #>  7 AZU1     1.64  4.78166296545929  0.0000154    0.000255   AML     #>  8 ALPP    -1.15  -4.30980975915516 0.0000688    0.000777   AML     #>  9 ARTN     1.09  4.33935395700382  0.0000699    0.000777   AML     #> 10 APBB1IP  1.16  4.23770695575853  0.000102     0.00102    AML     #> # ℹ 90 more rows #>  #> attr(,\"class\") #> [1] \"hd_de\"  # Run differential expression analysis for AML vs CLL hd_de_ttest(hd_object, case = \"AML\", control = \"CLL\") #> $de_res #> # A tibble: 100 × 6 #>    Feature  logFC t                     P.Value adj.P.Val Disease #>    <chr>    <dbl> <chr>                   <dbl>     <dbl> <chr>   #>  1 ADA      1.41  5.56960968552499  0.000000386 0.0000193 AML     #>  2 ADAM8   -1.36  -5.48030974302058 0.000000363 0.0000193 AML     #>  3 AZU1     1.93  5.30494963656308  0.00000154  0.0000513 AML     #>  4 ANGPT1  -1.74  -4.76056395753048 0.00000754  0.000162  AML     #>  5 ARID4B  -1.53  -4.7875765035839  0.00000809  0.000162  AML     #>  6 ACAN    -0.679 -4.64061774521444 0.0000116   0.000193  AML     #>  7 ARTN     1.32  4.66742939302417  0.0000135   0.000193  AML     #>  8 ADGRG2  -0.641 -4.35297388214812 0.0000353   0.000441  AML     #>  9 ACP6    -0.814 -4.30596496962697 0.0000411   0.000457  AML     #> 10 ADAMTS8 -0.758 -4.18218815580928 0.0000687   0.000687  AML     #> # ℹ 90 more rows #>  #> attr(,\"class\") #> [1] \"hd_de\""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_detect_vartype.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect variable type — hd_detect_vartype","title":"Detect variable type — hd_detect_vartype","text":"hd_detect_vartype() detects type variable based content. variable factor character, considered categorical. variable numeric less equal unique_threshold unique values, considered categorical. Otherwise, considered continuous.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_detect_vartype.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect variable type — hd_detect_vartype","text":"","code":"hd_detect_vartype(var, unique_threshold = 5)"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_detect_vartype.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect variable type — hd_detect_vartype","text":"var variable (vector dataframe column)detect type . unique_threshold threshold consider numeric variable categorical. Default 5.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_detect_vartype.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect variable type — hd_detect_vartype","text":"type variable string: \"categorical\", \"continuous\", \"unknown\".","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_detect_vartype.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect variable type — hd_detect_vartype","text":"","code":"# Check categorical data category <- c(\"A\", \"B\", \"A\", \"C\") hd_detect_vartype(category) #> [1] \"categorical\"  # Check continuous data continuous <- c(1, 2, 3, 4, 5, 6) hd_detect_vartype(continuous) #> [1] \"continuous\"  # Apply the function to each column of a dataframe example <- data.frame(Category = c(\"A\", \"B\", \"A\", \"C\", \"B\", \"A\"),                            Continuous = c(1.1, 2.5, 3.8, 4.0, 5.8, 9),                            Mixed = c(1, \"1\", 2, 2, \"3\", 3))  sapply(example, hd_detect_vartype) #>      Category    Continuous         Mixed  #> \"categorical\"  \"continuous\" \"categorical\""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_filter_by_sex.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter data and metadata by sex — hd_filter_by_sex","title":"Filter data and metadata by sex — hd_filter_by_sex","text":"Filter data metadata sex","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_filter_by_sex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter data and metadata by sex — hd_filter_by_sex","text":"","code":"hd_filter_by_sex(dat, metadata = NULL, variable = \"Sex\", sex)"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_filter_by_sex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter data and metadata by sex — hd_filter_by_sex","text":"dat HDAnalyzeR object dataset wide format sample_id first column. metadata dataset containing metadata information sample ID first column. HDAnalyzeR object provided, parameter needed. variable name variable metadata contain information sex. Default \"Sex\". sex value sex variable filter .","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_filter_by_sex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter data and metadata by sex — hd_filter_by_sex","text":"list containing filtered data metadata.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_filter_by_sex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter data and metadata by sex — hd_filter_by_sex","text":"","code":"# Create the HDAnalyzeR object providing the data and metadata hd_object <- hd_initialize(example_data, example_metadata)  hd_filter_by_sex(hd_object, variable = \"Sex\", sex = \"F\") #> $data #> # A tibble: 366 × 101 #>    DAid  AARSD1   ABL1  ACAA1    ACAN   ACE2   ACOX1    ACP5   ACP6 ACTA2  ACTN4 #>    <chr>  <dbl>  <dbl>  <dbl>   <dbl>  <dbl>   <dbl>   <dbl>  <dbl> <dbl>  <dbl> #>  1 DA00…   3.39  2.76   1.71   0.0333  1.76  -0.919   1.54    2.15   2.81  0.742 #>  2 DA00…  NA    NA     NA      0.989  NA      0.330   1.37   NA     NA    NA     #>  3 DA00…   5.01  5.05   0.128  0.401  -0.933 -0.584   0.0265  1.16   2.73  0.350 #>  4 DA00…  NA    NA      3.96   0.682   3.14   2.62    1.47    2.25   2.01  0.170 #>  5 DA00…   2.78  0.812 -0.552  0.982  -0.101 -0.304   0.376  -0.826  1.52 -0.597 #>  6 DA00…   3.48  4.96   3.50  -0.338   4.48   1.26    2.18    1.62   1.79  0.233 #>  7 DA00…   4.31  0.710 -1.44  -0.218  -0.469 -0.361  -0.0714 -1.30   2.86  0.129 #>  8 DA00…   1.79  1.36   0.106 -0.372   3.40  -1.19    1.77    1.07   2.00  0.980 #>  9 DA00…   3.59  3.38   1.79  -0.303   1.59   0.604   1.71   -0.837  1.65  1.13  #> 10 DA00…   1.80  1.70   2.77  -1.04    1.33  -0.0247  1.02    0.112  2.58  1.14  #> # ℹ 356 more rows #> # ℹ 90 more variables: ACY1 <dbl>, ADA <dbl>, ADA2 <dbl>, ADAM15 <dbl>, #> #   ADAM23 <dbl>, ADAM8 <dbl>, ADAMTS13 <dbl>, ADAMTS15 <dbl>, ADAMTS16 <dbl>, #> #   ADAMTS8 <dbl>, ADCYAP1R1 <dbl>, ADGRE2 <dbl>, ADGRE5 <dbl>, ADGRG1 <dbl>, #> #   ADGRG2 <dbl>, ADH4 <dbl>, ADM <dbl>, AGER <dbl>, AGR2 <dbl>, AGR3 <dbl>, #> #   AGRN <dbl>, AGRP <dbl>, AGXT <dbl>, AHCY <dbl>, AHSP <dbl>, AIF1 <dbl>, #> #   AIFM1 <dbl>, AK1 <dbl>, AKR1B1 <dbl>, AKR1C4 <dbl>, AKT1S1 <dbl>, … #>  #> $metadata #> # A tibble: 366 × 9 #>    DAid    Sample     Disease Stage Grade Sex     Age   BMI Cohort #>    <chr>   <chr>      <chr>   <chr> <chr> <chr> <dbl> <dbl> <chr>  #>  1 DA00001 AML_syn_1  AML     2     NA    F        42  22.7 UCAN   #>  2 DA00003 AML_syn_3  AML     2     NA    F        61  26.2 UCAN   #>  3 DA00005 AML_syn_5  AML     2     NA    F        57  21.4 UCAN   #>  4 DA00007 AML_syn_7  AML     1     NA    F        85  28.7 UCAN   #>  5 DA00008 AML_syn_8  AML     3     NA    F        88  32.6 UCAN   #>  6 DA00011 AML_syn_11 AML     3     NA    F        54  34.7 UCAN   #>  7 DA00012 AML_syn_12 AML     3     NA    F        78  21.4 UCAN   #>  8 DA00016 AML_syn_16 AML     3     NA    F        78  25.4 UCAN   #>  9 DA00019 AML_syn_19 AML     1     NA    F        81  22.9 UCAN   #> 10 DA00020 AML_syn_20 AML     3     NA    F        65  24.1 UCAN   #> # ℹ 356 more rows #>  #> $sample_id #> [1] \"DAid\" #>  #> $var_name #> [1] \"Assay\" #>  #> $value_name #> [1] \"NPX\" #>  #> attr(,\"class\") #> [1] \"HDAnalyzeR\""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_gsea.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform gene set enrichment analysis — hd_gsea","title":"Perform gene set enrichment analysis — hd_gsea","text":"hd_gsea() performs gene set enrichment analysis (GSEA) using clusterProfiler package.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_gsea.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform gene set enrichment analysis — hd_gsea","text":"","code":"hd_gsea(   de_results,   database = c(\"GO\", \"Reactome\", \"KEGG\"),   ontology = c(\"BP\", \"CC\", \"MF\", \"ALL\"),   expression = c(\"both\", \"up\", \"down\"),   ranked_by = c(\"logFC\", \"adj.P.Val\"),   pval_lim = 0.05,   logfc_lim = 0,   pval_lim_enrichment = 0.05 )"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_gsea.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform gene set enrichment analysis — hd_gsea","text":"de_results tibble containing results differential expression analysis. database database perform ORA. can either \"GO\", \"KEGG\", \"Reactome\". ontology ontology use database = \"GO\". can \"BP\" (Biological Process), \"CC\" (Cellular Component), \"MF\" (Molecular Function), \"\". case KEGG Reactome, parameter ignored. expression type differentially expressed proteins consider analysis. can \"\", \"\", \"\". ranked_by metric rank proteins. can \"logFC\" \"adj.P.Val\". pval_lim p-value threshold consider term significant differential expression analysis. Default 0.05. logfc_lim log fold change threshold consider term significant differential expression analysis. Default 0. pval_lim_enrichment p-value threshold consider term significant enrichment analysis. Default 0.05.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_gsea.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform gene set enrichment analysis — hd_gsea","text":"list containing results GSEA.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_gsea.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform gene set enrichment analysis — hd_gsea","text":"","code":"# Initialize an HDAnalyzeR object hd_object <- hd_initialize(example_data, example_metadata)  # Run differential expression analysis for AML vs all others de_results <- hd_de_limma(hd_object, case = \"AML\")  # Run GSEA with Reactome database hd_gsea(de_results,         database = \"GO\",         ontology = \"BP\",         expression = \"both\",         ranked_by = \"logFC\",         pval_lim_enrichment = 0.9) #>  #>  #> 'select()' returned 1:1 mapping between keys and columns #> using 'fgsea' for GSEA analysis, please cite Korotkevich et al (2019). #> preparing geneSet collections... #> GSEA analysis... #> Warning: All values in the stats vector are greater than zero and scoreType is \"std\", maybe you should switch to scoreType = \"pos\". #> leading edge analysis... #> done... #> $gene_list #>       284       328       566       100      9289     54518       250      9048  #> 1.6960339 1.5595837 1.5329435 1.4623826 1.2318594 1.1730140 1.0367356 0.8287936  #>       351     23365       285       181        25       191     10551    115201  #> 0.8227446 0.8063775 0.7728365 0.7561717 0.7468307 0.7340411 0.7046557 0.6292262  #>       306     51129      9296        59       203     59272     51742     55937  #> 0.6196824 0.5226829 0.5198482 0.5046829 0.4815729 0.4660359 0.4581703 0.4408260  #>       199       267      2683       311       176       280     10149       976  #> 0.4324161 0.4288128 0.4217458 0.4048363 0.3834199 0.3761169 0.3758535 0.3654318  #>     30817      1386       405     11093    170690  #> 0.3594460 0.3385817 0.3378419 0.3141056 0.2980142  #>  #> $enrichment #> # #> # Gene Set Enrichment Analysis #> # #> #...@organism \t Homo sapiens  #> #...@setType \t BP  #> #...@keytype \t ENTREZID  #> #...@geneList \t Named num [1:37] 1.7 1.56 1.53 1.46 1.23 ... #>  - attr(*, \"names\")= chr [1:37] \"284\" \"328\" \"566\" \"100\" ... #> #...nPerm \t  #> #...pvalues adjusted by 'BH' with cutoff <0.9  #> #...91 enriched terms found #> 'data.frame':\t91 obs. of  11 variables: #>  $ ID             : chr  \"GO:0007186\" \"GO:0051716\" \"GO:0040012\" \"GO:0048584\" ... #>  $ Description    : chr  \"G protein-coupled receptor signaling pathway\" \"cellular response to stimulus\" \"regulation of locomotion\" \"positive regulation of response to stimulus\" ... #>  $ setSize        : int  10 25 12 11 18 22 13 16 10 16 ... #>  $ enrichmentScore: num  0.648 0.624 0.619 0.62 0.581 ... #>  $ NES            : num  1.62 1.61 1.6 1.58 1.56 ... #>  $ pvalue         : num  0.0224 0.0337 0.0338 0.0361 0.0491 ... #>  $ p.adjust       : num  0.475 0.475 0.475 0.475 0.475 ... #>  $ qvalue         : num  0.472 0.472 0.472 0.472 0.472 ... #>  $ rank           : num  13 13 13 9 6 13 13 15 5 5 ... #>  $ leading_edge   : chr  \"tags=70%, list=35%, signal=62%\" \"tags=48%, list=35%, signal=96%\" \"tags=67%, list=35%, signal=64%\" \"tags=55%, list=24%, signal=59%\" ... #>  $ core_enrichment: chr  \"566/100/9289/351/23365/181/25\" \"284/328/566/100/9289/54518/9048/351/23365/285/181/25\" \"284/566/100/9289/9048/351/285/25\" \"284/566/100/9289/9048/351\" ... #> #...Citation #> S Xu, E Hu, Y Cai, Z Xie, X Luo, L Zhan, W Tang, Q Wang, B Liu, R Wang, W Xie, T Wu, L Xie, G Yu. Using clusterProfiler to characterize multiomics data. Nature Protocols. 2024, doi:10.1038/s41596-024-01020-z  #>  #>  #> attr(,\"class\") #> [1] \"hd_enrichment\" # Remember that the data is artificial, this is why we use an absurdly high p-value cutoff"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_import_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Import data from file — hd_import_data","title":"Import data from file — hd_import_data","text":"hd_import_data() imports data file. file format can CSV, TSV, TXT, RDA, RDS, XLSX, Parquet format. recognizes file format, reads returns tibble R object.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_import_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import data from file — hd_import_data","text":"","code":"hd_import_data(path_name)"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_import_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import data from file — hd_import_data","text":"path_name path file import.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_import_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import data from file — hd_import_data","text":"imported data tibble R object.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_import_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import data from file — hd_import_data","text":"","code":"# Save a dataframe as an RDS file hd_save_data(example_metadata, \"my_data/metadata.rds\") #> [1] \"File saved as my_data/metadata.rds\"  # Import the saved RDS file again as a tibble hd_import_data(\"my_data/metadata.rds\") #> # A tibble: 586 × 9 #>    DAid    Sample     Disease Stage   Grade Sex     Age   BMI Cohort #>    <chr>   <chr>      <chr>   <chr>   <chr> <chr> <dbl> <dbl> <chr>  #>  1 DA00001 AML_syn_1  AML     2       NA    F        42  22.7 UCAN   #>  2 DA00002 AML_syn_2  AML     Unknown NA    M        69  33.1 UCAN   #>  3 DA00003 AML_syn_3  AML     2       NA    F        61  26.2 UCAN   #>  4 DA00004 AML_syn_4  AML     Unknown NA    M        54  28.1 UCAN   #>  5 DA00005 AML_syn_5  AML     2       NA    F        57  21.4 UCAN   #>  6 DA00006 AML_syn_6  AML     Unknown NA    M        86  33.9 UCAN   #>  7 DA00007 AML_syn_7  AML     1       NA    F        85  28.7 UCAN   #>  8 DA00008 AML_syn_8  AML     3       NA    F        88  32.6 UCAN   #>  9 DA00009 AML_syn_9  AML     Unknown NA    M        80  26.1 UCAN   #> 10 DA00010 AML_syn_10 AML     3       NA    M        48  33.8 UCAN   #> # ℹ 576 more rows  unlink(\"my_data\", recursive = TRUE)  # Clean up the created directory"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_impute_knn.html","id":null,"dir":"Reference","previous_headings":"","what":"Impute via k-nearest neighbors — hd_impute_knn","title":"Impute via k-nearest neighbors — hd_impute_knn","text":"hd_impute_knn() imputes missing values dataset using k-nearest neighbors method. allows user exclude certain columns imputation can also display percentage missing values column imputation. user can also specify number neighbors consider imputation.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_impute_knn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Impute via k-nearest neighbors — hd_impute_knn","text":"","code":"hd_impute_knn(dat, k = 5, verbose = TRUE)"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_impute_knn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Impute via k-nearest neighbors — hd_impute_knn","text":"dat HDAnalyzeR object dataset wide format sample_id first column. k number neighbors consider imputation. verbose TRUE, percentage missing values column displayed.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_impute_knn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Impute via k-nearest neighbors — hd_impute_knn","text":"imputed dataset.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_impute_knn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Impute via k-nearest neighbors — hd_impute_knn","text":"","code":"# Create the HDAnalyzeR object providing the data and metadata hd_object <- hd_initialize(example_data, example_metadata) hd_object$data #> # A tibble: 586 × 101 #>    DAid    AARSD1   ABL1  ACAA1    ACAN    ACE2  ACOX1   ACP5    ACP6  ACTA2 #>    <chr>    <dbl>  <dbl>  <dbl>   <dbl>   <dbl>  <dbl>  <dbl>   <dbl>  <dbl> #>  1 DA00001   3.39  2.76   1.71   0.0333  1.76   -0.919 1.54    2.15    2.81  #>  2 DA00002   1.42  1.25  -0.816 -0.459   0.826  -0.902 0.647   1.30    0.798 #>  3 DA00003  NA    NA     NA      0.989  NA       0.330 1.37   NA      NA     #>  4 DA00004   3.41  3.38   1.69  NA       1.52   NA     0.841   0.582   1.70  #>  5 DA00005   5.01  5.05   0.128  0.401  -0.933  -0.584 0.0265  1.16    2.73  #>  6 DA00006   6.83  1.18  -1.74  -0.156   1.53   -0.721 0.620   0.527   0.772 #>  7 DA00007  NA    NA      3.96   0.682   3.14    2.62  1.47    2.25    2.01  #>  8 DA00008   2.78  0.812 -0.552  0.982  -0.101  -0.304 0.376  -0.826   1.52  #>  9 DA00009   4.39  3.34  -0.452 -0.868   0.395   1.71  1.49   -0.0285  0.200 #> 10 DA00010   1.83  1.21  -0.912 -1.04   -0.0918 -0.304 1.69    0.0920  2.04  #> # ℹ 576 more rows #> # ℹ 91 more variables: ACTN4 <dbl>, ACY1 <dbl>, ADA <dbl>, ADA2 <dbl>, #> #   ADAM15 <dbl>, ADAM23 <dbl>, ADAM8 <dbl>, ADAMTS13 <dbl>, ADAMTS15 <dbl>, #> #   ADAMTS16 <dbl>, ADAMTS8 <dbl>, ADCYAP1R1 <dbl>, ADGRE2 <dbl>, ADGRE5 <dbl>, #> #   ADGRG1 <dbl>, ADGRG2 <dbl>, ADH4 <dbl>, ADM <dbl>, AGER <dbl>, AGR2 <dbl>, #> #   AGR3 <dbl>, AGRN <dbl>, AGRP <dbl>, AGXT <dbl>, AHCY <dbl>, AHSP <dbl>, #> #   AIF1 <dbl>, AIFM1 <dbl>, AK1 <dbl>, AKR1B1 <dbl>, AKR1C4 <dbl>, …  # Data after imputation res <- hd_impute_knn(hd_object, k = 3) #> # A tibble: 91 × 2 #>    Variable NA_percentage #>    <chr>            <dbl> #>  1 AARSD1            5.80 #>  2 ABL1              5.80 #>  3 ACAA1             5.29 #>  4 ACAN              3.92 #>  5 ACE2              6.14 #>  6 ACOX1             3.92 #>  7 ACP6              2.22 #>  8 ACTA2             6.14 #>  9 ACTN4             6.14 #> 10 ACY1              3.92 #> # ℹ 81 more rows res$data #> # A tibble: 586 × 101 #>    DAid  AARSD1  ABL1  ACAA1    ACAN    ACE2  ACOX1   ACP5    ACP6 ACTA2   ACTN4 #>    <chr>  <dbl> <dbl>  <dbl>   <dbl>   <dbl>  <dbl>  <dbl>   <dbl> <dbl>   <dbl> #>  1 DA00…   3.39 2.76   1.71   0.0333  1.76   -0.919 1.54    2.15   2.81   0.742  #>  2 DA00…   1.42 1.25  -0.816 -0.459   0.826  -0.902 0.647   1.30   0.798 -0.0659 #>  3 DA00…   3.80 2.82   2.35   0.989  -0.0218  0.330 1.37    0.561  1.34   0.737  #>  4 DA00…   3.41 3.38   1.69   0.411   1.52    1.38  0.841   0.582  1.70   0.108  #>  5 DA00…   5.01 5.05   0.128  0.401  -0.933  -0.584 0.0265  1.16   2.73   0.350  #>  6 DA00…   6.83 1.18  -1.74  -0.156   1.53   -0.721 0.620   0.527  0.772  0.229  #>  7 DA00…   3.44 4.75   3.96   0.682   3.14    2.62  1.47    2.25   2.01   0.170  #>  8 DA00…   2.78 0.812 -0.552  0.982  -0.101  -0.304 0.376  -0.826  1.52  -0.597  #>  9 DA00…   4.39 3.34  -0.452 -0.868   0.395   1.71  1.49   -0.0285 0.200 -0.532  #> 10 DA00…   1.83 1.21  -0.912 -1.04   -0.0918 -0.304 1.69    0.0920 2.04   0.501  #> # ℹ 576 more rows #> # ℹ 90 more variables: ACY1 <dbl>, ADA <dbl>, ADA2 <dbl>, ADAM15 <dbl>, #> #   ADAM23 <dbl>, ADAM8 <dbl>, ADAMTS13 <dbl>, ADAMTS15 <dbl>, ADAMTS16 <dbl>, #> #   ADAMTS8 <dbl>, ADCYAP1R1 <dbl>, ADGRE2 <dbl>, ADGRE5 <dbl>, ADGRG1 <dbl>, #> #   ADGRG2 <dbl>, ADH4 <dbl>, ADM <dbl>, AGER <dbl>, AGR2 <dbl>, AGR3 <dbl>, #> #   AGRN <dbl>, AGRP <dbl>, AGXT <dbl>, AHCY <dbl>, AHSP <dbl>, AIF1 <dbl>, #> #   AIFM1 <dbl>, AK1 <dbl>, AKR1B1 <dbl>, AKR1C4 <dbl>, AKT1S1 <dbl>, …"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_impute_median.html","id":null,"dir":"Reference","previous_headings":"","what":"Impute via Median — hd_impute_median","title":"Impute via Median — hd_impute_median","text":"hd_impute_median() imputes missing values dataset using median column. allows user exclude certain columns imputation can also display percentage missing values column imputation.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_impute_median.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Impute via Median — hd_impute_median","text":"","code":"hd_impute_median(dat, verbose = TRUE)"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_impute_median.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Impute via Median — hd_impute_median","text":"dat HDAnalyzeR object dataset wide format sample_id first column. verbose TRUE, percentage missing values column displayed.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_impute_median.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Impute via Median — hd_impute_median","text":"imputed dataset.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_impute_median.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Impute via Median — hd_impute_median","text":"fastest usually least accurate imputation method.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_impute_median.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Impute via Median — hd_impute_median","text":"","code":"# Create the HDAnalyzeR object providing the data and metadata hd_object <- hd_initialize(example_data, example_metadata) hd_object$data #> # A tibble: 586 × 101 #>    DAid    AARSD1   ABL1  ACAA1    ACAN    ACE2  ACOX1   ACP5    ACP6  ACTA2 #>    <chr>    <dbl>  <dbl>  <dbl>   <dbl>   <dbl>  <dbl>  <dbl>   <dbl>  <dbl> #>  1 DA00001   3.39  2.76   1.71   0.0333  1.76   -0.919 1.54    2.15    2.81  #>  2 DA00002   1.42  1.25  -0.816 -0.459   0.826  -0.902 0.647   1.30    0.798 #>  3 DA00003  NA    NA     NA      0.989  NA       0.330 1.37   NA      NA     #>  4 DA00004   3.41  3.38   1.69  NA       1.52   NA     0.841   0.582   1.70  #>  5 DA00005   5.01  5.05   0.128  0.401  -0.933  -0.584 0.0265  1.16    2.73  #>  6 DA00006   6.83  1.18  -1.74  -0.156   1.53   -0.721 0.620   0.527   0.772 #>  7 DA00007  NA    NA      3.96   0.682   3.14    2.62  1.47    2.25    2.01  #>  8 DA00008   2.78  0.812 -0.552  0.982  -0.101  -0.304 0.376  -0.826   1.52  #>  9 DA00009   4.39  3.34  -0.452 -0.868   0.395   1.71  1.49   -0.0285  0.200 #> 10 DA00010   1.83  1.21  -0.912 -1.04   -0.0918 -0.304 1.69    0.0920  2.04  #> # ℹ 576 more rows #> # ℹ 91 more variables: ACTN4 <dbl>, ACY1 <dbl>, ADA <dbl>, ADA2 <dbl>, #> #   ADAM15 <dbl>, ADAM23 <dbl>, ADAM8 <dbl>, ADAMTS13 <dbl>, ADAMTS15 <dbl>, #> #   ADAMTS16 <dbl>, ADAMTS8 <dbl>, ADCYAP1R1 <dbl>, ADGRE2 <dbl>, ADGRE5 <dbl>, #> #   ADGRG1 <dbl>, ADGRG2 <dbl>, ADH4 <dbl>, ADM <dbl>, AGER <dbl>, AGR2 <dbl>, #> #   AGR3 <dbl>, AGRN <dbl>, AGRP <dbl>, AGXT <dbl>, AHCY <dbl>, AHSP <dbl>, #> #   AIF1 <dbl>, AIFM1 <dbl>, AK1 <dbl>, AKR1B1 <dbl>, AKR1C4 <dbl>, …  # Data after imputation res <- hd_impute_median(hd_object) #> # A tibble: 91 × 2 #>    Variable NA_percentage #>    <chr>            <dbl> #>  1 AARSD1            5.80 #>  2 ABL1              5.80 #>  3 ACAA1             5.29 #>  4 ACAN              3.92 #>  5 ACE2              6.14 #>  6 ACOX1             3.92 #>  7 ACP6              2.22 #>  8 ACTA2             6.14 #>  9 ACTN4             6.14 #> 10 ACY1              3.92 #> # ℹ 81 more rows res$data #> # A tibble: 586 × 101 #>    DAid  AARSD1  ABL1  ACAA1    ACAN    ACE2  ACOX1   ACP5    ACP6 ACTA2   ACTN4 #>    <chr>  <dbl> <dbl>  <dbl>   <dbl>   <dbl>  <dbl>  <dbl>   <dbl> <dbl>   <dbl> #>  1 DA00…   3.39 2.76   1.71   0.0333  1.76   -0.919 1.54    2.15   2.81   0.742  #>  2 DA00…   1.42 1.25  -0.816 -0.459   0.826  -0.902 0.647   1.30   0.798 -0.0659 #>  3 DA00…   3.06 1.66   0.855  0.989   0.745   0.330 1.37    1.19   1.57   0.385  #>  4 DA00…   3.41 3.38   1.69   0.558   1.52    0.428 0.841   0.582  1.70   0.108  #>  5 DA00…   5.01 5.05   0.128  0.401  -0.933  -0.584 0.0265  1.16   2.73   0.350  #>  6 DA00…   6.83 1.18  -1.74  -0.156   1.53   -0.721 0.620   0.527  0.772  0.385  #>  7 DA00…   3.06 1.66   3.96   0.682   3.14    2.62  1.47    2.25   2.01   0.170  #>  8 DA00…   2.78 0.812 -0.552  0.982  -0.101  -0.304 0.376  -0.826  1.52  -0.597  #>  9 DA00…   4.39 3.34  -0.452 -0.868   0.395   1.71  1.49   -0.0285 0.200 -0.532  #> 10 DA00…   1.83 1.21  -0.912 -1.04   -0.0918 -0.304 1.69    0.0920 2.04   0.501  #> # ℹ 576 more rows #> # ℹ 90 more variables: ACY1 <dbl>, ADA <dbl>, ADA2 <dbl>, ADAM15 <dbl>, #> #   ADAM23 <dbl>, ADAM8 <dbl>, ADAMTS13 <dbl>, ADAMTS15 <dbl>, ADAMTS16 <dbl>, #> #   ADAMTS8 <dbl>, ADCYAP1R1 <dbl>, ADGRE2 <dbl>, ADGRE5 <dbl>, ADGRG1 <dbl>, #> #   ADGRG2 <dbl>, ADH4 <dbl>, ADM <dbl>, AGER <dbl>, AGR2 <dbl>, AGR3 <dbl>, #> #   AGRN <dbl>, AGRP <dbl>, AGXT <dbl>, AHCY <dbl>, AHSP <dbl>, AIF1 <dbl>, #> #   AIFM1 <dbl>, AK1 <dbl>, AKR1B1 <dbl>, AKR1C4 <dbl>, AKT1S1 <dbl>, …"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_impute_missForest.html","id":null,"dir":"Reference","previous_headings":"","what":"Impute via missForest — hd_impute_missForest","title":"Impute via missForest — hd_impute_missForest","text":"impute_missForest() imputes missing values dataset using missForest method. allows user exclude certain columns imputation can also display percentage missing values column imputation.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_impute_missForest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Impute via missForest — hd_impute_missForest","text":"","code":"hd_impute_missForest(   dat,   maxiter = 10,   ntree = 100,   parallelize = \"no\",   verbose = TRUE )"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_impute_missForest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Impute via missForest — hd_impute_missForest","text":"dat HDAnalyzeR object dataset wide format sample_id first column. maxiter maximum number iterations. ntree number trees grow. parallelize \"\", imputation done single core. \"variables\", imputation done parallel variable. \"forest\", imputation done parallel tree. information, check missForest documentation. verbose TRUE, percentage missing values column displayed.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_impute_missForest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Impute via missForest — hd_impute_missForest","text":"imputed dataset.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_impute_missForest.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Impute via missForest — hd_impute_missForest","text":"slowest complex imputation method. KNN works fine, recommended use instead missForest. case large datasets, recommended parallelize imputation. However, user must doParallel package installed register cluster running function. example parallelize imputation provided examples section.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_impute_missForest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Impute via missForest — hd_impute_missForest","text":"","code":"# Create the HDAnalyzeR object providing the data and metadata hd_object <- hd_initialize(example_data, example_metadata) hd_object$data #> # A tibble: 586 × 101 #>    DAid    AARSD1   ABL1  ACAA1    ACAN    ACE2  ACOX1   ACP5    ACP6  ACTA2 #>    <chr>    <dbl>  <dbl>  <dbl>   <dbl>   <dbl>  <dbl>  <dbl>   <dbl>  <dbl> #>  1 DA00001   3.39  2.76   1.71   0.0333  1.76   -0.919 1.54    2.15    2.81  #>  2 DA00002   1.42  1.25  -0.816 -0.459   0.826  -0.902 0.647   1.30    0.798 #>  3 DA00003  NA    NA     NA      0.989  NA       0.330 1.37   NA      NA     #>  4 DA00004   3.41  3.38   1.69  NA       1.52   NA     0.841   0.582   1.70  #>  5 DA00005   5.01  5.05   0.128  0.401  -0.933  -0.584 0.0265  1.16    2.73  #>  6 DA00006   6.83  1.18  -1.74  -0.156   1.53   -0.721 0.620   0.527   0.772 #>  7 DA00007  NA    NA      3.96   0.682   3.14    2.62  1.47    2.25    2.01  #>  8 DA00008   2.78  0.812 -0.552  0.982  -0.101  -0.304 0.376  -0.826   1.52  #>  9 DA00009   4.39  3.34  -0.452 -0.868   0.395   1.71  1.49   -0.0285  0.200 #> 10 DA00010   1.83  1.21  -0.912 -1.04   -0.0918 -0.304 1.69    0.0920  2.04  #> # ℹ 576 more rows #> # ℹ 91 more variables: ACTN4 <dbl>, ACY1 <dbl>, ADA <dbl>, ADA2 <dbl>, #> #   ADAM15 <dbl>, ADAM23 <dbl>, ADAM8 <dbl>, ADAMTS13 <dbl>, ADAMTS15 <dbl>, #> #   ADAMTS16 <dbl>, ADAMTS8 <dbl>, ADCYAP1R1 <dbl>, ADGRE2 <dbl>, ADGRE5 <dbl>, #> #   ADGRG1 <dbl>, ADGRG2 <dbl>, ADH4 <dbl>, ADM <dbl>, AGER <dbl>, AGR2 <dbl>, #> #   AGR3 <dbl>, AGRN <dbl>, AGRP <dbl>, AGXT <dbl>, AHCY <dbl>, AHSP <dbl>, #> #   AIF1 <dbl>, AIFM1 <dbl>, AK1 <dbl>, AKR1B1 <dbl>, AKR1C4 <dbl>, …  # Data after imputation res <- hd_impute_missForest(hd_object, maxiter = 1, ntree = 50) #> # A tibble: 91 × 2 #>    Variable NA_percentage #>    <chr>            <dbl> #>  1 AARSD1            5.80 #>  2 ABL1              5.80 #>  3 ACAA1             5.29 #>  4 ACAN              3.92 #>  5 ACE2              6.14 #>  6 ACOX1             3.92 #>  7 ACP6              2.22 #>  8 ACTA2             6.14 #>  9 ACTN4             6.14 #> 10 ACY1              3.92 #> # ℹ 81 more rows #>   missForest iteration 1 in progress...done! #>     estimated error(s): 0.6198153  #>     difference(s): 0.003816952  #>     time: 21.729 seconds #>  res$data #> # A tibble: 586 × 101 #>    DAid  AARSD1  ABL1  ACAA1    ACAN    ACE2  ACOX1   ACP5    ACP6 ACTA2   ACTN4 #>    <chr>  <dbl> <dbl>  <dbl>   <dbl>   <dbl>  <dbl>  <dbl>   <dbl> <dbl>   <dbl> #>  1 DA00…   3.39 2.76   1.71   0.0333  1.76   -0.919 1.54    2.15   2.81   0.742  #>  2 DA00…   1.42 1.25  -0.816 -0.459   0.826  -0.902 0.647   1.30   0.798 -0.0659 #>  3 DA00…   3.48 2.37   1.41   0.989   0.427   0.330 1.37    1.36   1.45   0.308  #>  4 DA00…   3.41 3.38   1.69   0.410   1.52    1.06  0.841   0.582  1.70   0.108  #>  5 DA00…   5.01 5.05   0.128  0.401  -0.933  -0.584 0.0265  1.16   2.73   0.350  #>  6 DA00…   6.83 1.18  -1.74  -0.156   1.53   -0.721 0.620   0.527  0.772  0.317  #>  7 DA00…   4.22 3.86   3.96   0.682   3.14    2.62  1.47    2.25   2.01   0.170  #>  8 DA00…   2.78 0.812 -0.552  0.982  -0.101  -0.304 0.376  -0.826  1.52  -0.597  #>  9 DA00…   4.39 3.34  -0.452 -0.868   0.395   1.71  1.49   -0.0285 0.200 -0.532  #> 10 DA00…   1.83 1.21  -0.912 -1.04   -0.0918 -0.304 1.69    0.0920 2.04   0.501  #> # ℹ 576 more rows #> # ℹ 90 more variables: ACY1 <dbl>, ADA <dbl>, ADA2 <dbl>, ADAM15 <dbl>, #> #   ADAM23 <dbl>, ADAM8 <dbl>, ADAMTS13 <dbl>, ADAMTS15 <dbl>, ADAMTS16 <dbl>, #> #   ADAMTS8 <dbl>, ADCYAP1R1 <dbl>, ADGRE2 <dbl>, ADGRE5 <dbl>, ADGRG1 <dbl>, #> #   ADGRG2 <dbl>, ADH4 <dbl>, ADM <dbl>, AGER <dbl>, AGR2 <dbl>, AGR3 <dbl>, #> #   AGRN <dbl>, AGRP <dbl>, AGXT <dbl>, AHCY <dbl>, AHSP <dbl>, AIF1 <dbl>, #> #   AIFM1 <dbl>, AK1 <dbl>, AKR1B1 <dbl>, AKR1C4 <dbl>, AKT1S1 <dbl>, …  if (FALSE) { # \\dontrun{ # Parallelize the imputation library(doParallel)  # Load the doParallel package cl <- makeCluster(4)  # Create a cluster with 4 cores registerDoParallel(cl)  # Register the cluster res <- hd_impute_missForest(hd_object, maxiter = 1, ntree = 50, parallelize = \"forests\") } # }"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_initialize.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize HDAnalyzeR object — hd_initialize","title":"Initialize HDAnalyzeR object — hd_initialize","text":"hd_initialize() initializes HDAnalyzeR object data, metadata, parameters.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_initialize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize HDAnalyzeR object — hd_initialize","text":"","code":"hd_initialize(   dat,   metadata = NULL,   is_wide = FALSE,   sample_id = \"DAid\",   var_name = \"Assay\",   value_name = \"NPX\" )"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_initialize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialize HDAnalyzeR object — hd_initialize","text":"dat tibble containing omics data. metadata tibble containing metadata. Default NULL. is_wide logical indicating data wide format. Default FALSE. sample_id name column containing sample IDs. Default \"DAid\". var_name name column containing variable names. Default \"Assay\". value_name name column containing values. Default \"NPX\".","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_initialize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialize HDAnalyzeR object — hd_initialize","text":"HDAnalyzeR object.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_initialize.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Initialize HDAnalyzeR object — hd_initialize","text":"strongly recommended use function initialize HDAnalyzeR object starting analysis. initialization step ensures input data metadata correctly formatted compatible package. Specifically, function validates data automatically converts wide format provided long format (is_wide). possible use HDAnalyzeR functions data outside HDAnalyzeR object, users must ensure data adheres required structure: first column must contain sample IDs, followed numeric columns (protein expression)wide format. Additionally, metadata must include set sample IDs. Proper initialization careful adherence requirements crucial accurate efficient analysis.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_initialize.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Initialize HDAnalyzeR object — hd_initialize","text":"","code":"# Initialize an HDAnalyzeR object hd_initialize(example_data, example_metadata) #> $data #> # A tibble: 586 × 101 #>    DAid    AARSD1   ABL1  ACAA1    ACAN    ACE2  ACOX1   ACP5    ACP6  ACTA2 #>    <chr>    <dbl>  <dbl>  <dbl>   <dbl>   <dbl>  <dbl>  <dbl>   <dbl>  <dbl> #>  1 DA00001   3.39  2.76   1.71   0.0333  1.76   -0.919 1.54    2.15    2.81  #>  2 DA00002   1.42  1.25  -0.816 -0.459   0.826  -0.902 0.647   1.30    0.798 #>  3 DA00003  NA    NA     NA      0.989  NA       0.330 1.37   NA      NA     #>  4 DA00004   3.41  3.38   1.69  NA       1.52   NA     0.841   0.582   1.70  #>  5 DA00005   5.01  5.05   0.128  0.401  -0.933  -0.584 0.0265  1.16    2.73  #>  6 DA00006   6.83  1.18  -1.74  -0.156   1.53   -0.721 0.620   0.527   0.772 #>  7 DA00007  NA    NA      3.96   0.682   3.14    2.62  1.47    2.25    2.01  #>  8 DA00008   2.78  0.812 -0.552  0.982  -0.101  -0.304 0.376  -0.826   1.52  #>  9 DA00009   4.39  3.34  -0.452 -0.868   0.395   1.71  1.49   -0.0285  0.200 #> 10 DA00010   1.83  1.21  -0.912 -1.04   -0.0918 -0.304 1.69    0.0920  2.04  #> # ℹ 576 more rows #> # ℹ 91 more variables: ACTN4 <dbl>, ACY1 <dbl>, ADA <dbl>, ADA2 <dbl>, #> #   ADAM15 <dbl>, ADAM23 <dbl>, ADAM8 <dbl>, ADAMTS13 <dbl>, ADAMTS15 <dbl>, #> #   ADAMTS16 <dbl>, ADAMTS8 <dbl>, ADCYAP1R1 <dbl>, ADGRE2 <dbl>, ADGRE5 <dbl>, #> #   ADGRG1 <dbl>, ADGRG2 <dbl>, ADH4 <dbl>, ADM <dbl>, AGER <dbl>, AGR2 <dbl>, #> #   AGR3 <dbl>, AGRN <dbl>, AGRP <dbl>, AGXT <dbl>, AHCY <dbl>, AHSP <dbl>, #> #   AIF1 <dbl>, AIFM1 <dbl>, AK1 <dbl>, AKR1B1 <dbl>, AKR1C4 <dbl>, … #>  #> $metadata #> # A tibble: 586 × 9 #>    DAid    Sample     Disease Stage   Grade Sex     Age   BMI Cohort #>    <chr>   <chr>      <chr>   <chr>   <chr> <chr> <dbl> <dbl> <chr>  #>  1 DA00001 AML_syn_1  AML     2       NA    F        42  22.7 UCAN   #>  2 DA00002 AML_syn_2  AML     Unknown NA    M        69  33.1 UCAN   #>  3 DA00003 AML_syn_3  AML     2       NA    F        61  26.2 UCAN   #>  4 DA00004 AML_syn_4  AML     Unknown NA    M        54  28.1 UCAN   #>  5 DA00005 AML_syn_5  AML     2       NA    F        57  21.4 UCAN   #>  6 DA00006 AML_syn_6  AML     Unknown NA    M        86  33.9 UCAN   #>  7 DA00007 AML_syn_7  AML     1       NA    F        85  28.7 UCAN   #>  8 DA00008 AML_syn_8  AML     3       NA    F        88  32.6 UCAN   #>  9 DA00009 AML_syn_9  AML     Unknown NA    M        80  26.1 UCAN   #> 10 DA00010 AML_syn_10 AML     3       NA    M        48  33.8 UCAN   #> # ℹ 576 more rows #>  #> $sample_id #> [1] \"DAid\" #>  #> $var_name #> [1] \"Assay\" #>  #> $value_name #> [1] \"NPX\" #>  #> attr(,\"class\") #> [1] \"HDAnalyzeR\""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_literature_search.html","id":null,"dir":"Reference","previous_headings":"","what":"Run literature search for gene-disease pairs in PubMed — hd_literature_search","title":"Run literature search for gene-disease pairs in PubMed — hd_literature_search","text":"hd_literature_search() searches articles gene-disease pairs PubMed. list proteins diseases provided input. function retrieves articles gene-disease pair. input correct format, list diseases names gene vectors associated disease elements (see examples).","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_literature_search.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run literature search for gene-disease pairs in PubMed — hd_literature_search","text":"","code":"hd_literature_search(   feature_class_list,   max_articles = 10,   keywords = NULL,   fields = \"All Fields\",   api_key = NULL,   verbose = TRUE )"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_literature_search.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run literature search for gene-disease pairs in PubMed — hd_literature_search","text":"feature_class_list list features (gene names) classes (diseases). names list classes elements vectors features. See examples. max_articles maximum number articles retrieve gene-disease pair. Default 10. keywords Additional keywords include search. added query \"keywords\". Default NULL. fields fields search keywords. Default \"Fields\". options \"Title\", \"Abstract\", \"Author\", \"Journal\", \"Affiliation\", \"MeSH Terms\", \"Terms\". api_key user-specific API key increase limit queries per second. can obtain key NCBI required. Default NULL. verbose Whether print progress messages. Default TRUE.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_literature_search.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run literature search for gene-disease pairs in PubMed — hd_literature_search","text":"list tibbles. tibble contains articles found gene-disease pair.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_literature_search.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Run literature search for gene-disease pairs in PubMed — hd_literature_search","text":"disease gene names correct order query successful. example AML written \"acute myeloid leukemia\". query constructed \"genefield diseasefield keywords\". details check easyPubMed package documentation.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_literature_search.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run literature search for gene-disease pairs in PubMed — hd_literature_search","text":"","code":"# Prepare the list of gene-disease pairs feature_class_list <- list(\"acute myeloid leukemia\" = c(\"FLT3\", \"EPO\"),                            \"chronic lymphocytic leukemia\" = c(\"PARP1\"))  # Run the literature search lit_search_results <- hd_literature_search(feature_class_list, max_articles = 1) #> Searching for articles on FLT3 and acute myeloid leukemia #> Searching for articles on EPO and acute myeloid leukemia #> Searching for articles on PARP1 and chronic lymphocytic leukemia  # Results for FLT3 in acute myeloid leukemia lit_search_results$`acute myeloid leukemia`$FLT3 #>       pmid        First_author year #> 1 39644009 Lachowiez, Curtis A 2024 #>                                                         journal #> 1 Hematology. American Society of Hematology. Education Program #>                                                                       title #> 1 Mutation- and MRD-informed treatments for transplant-ineligible patients."},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_long_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert omics data to long format — hd_long_data","title":"Convert omics data to long format — hd_long_data","text":"hd_long_data() transforms omics data wide long format.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_long_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert omics data to long format — hd_long_data","text":"","code":"hd_long_data(dat, exclude = \"DAid\", names_to = \"Assay\", values_to = \"NPX\")"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_long_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert omics data to long format — hd_long_data","text":"dat tibble containing data wide format. exclude name columns exclude transformation. names_to name column create variable names. values_to name column create values.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_long_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert omics data to long format — hd_long_data","text":"tibble containing data long format.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_long_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert omics data to long format — hd_long_data","text":"","code":"# Olink data in wide format example_data_wide <- hd_widen_data(example_data) example_data_wide #> # A tibble: 586 × 101 #>    DAid    AARSD1   ABL1  ACAA1    ACAN    ACE2  ACOX1   ACP5    ACP6  ACTA2 #>    <chr>    <dbl>  <dbl>  <dbl>   <dbl>   <dbl>  <dbl>  <dbl>   <dbl>  <dbl> #>  1 DA00001   3.39  2.76   1.71   0.0333  1.76   -0.919 1.54    2.15    2.81  #>  2 DA00002   1.42  1.25  -0.816 -0.459   0.826  -0.902 0.647   1.30    0.798 #>  3 DA00003  NA    NA     NA      0.989  NA       0.330 1.37   NA      NA     #>  4 DA00004   3.41  3.38   1.69  NA       1.52   NA     0.841   0.582   1.70  #>  5 DA00005   5.01  5.05   0.128  0.401  -0.933  -0.584 0.0265  1.16    2.73  #>  6 DA00006   6.83  1.18  -1.74  -0.156   1.53   -0.721 0.620   0.527   0.772 #>  7 DA00007  NA    NA      3.96   0.682   3.14    2.62  1.47    2.25    2.01  #>  8 DA00008   2.78  0.812 -0.552  0.982  -0.101  -0.304 0.376  -0.826   1.52  #>  9 DA00009   4.39  3.34  -0.452 -0.868   0.395   1.71  1.49   -0.0285  0.200 #> 10 DA00010   1.83  1.21  -0.912 -1.04   -0.0918 -0.304 1.69    0.0920  2.04  #> # ℹ 576 more rows #> # ℹ 91 more variables: ACTN4 <dbl>, ACY1 <dbl>, ADA <dbl>, ADA2 <dbl>, #> #   ADAM15 <dbl>, ADAM23 <dbl>, ADAM8 <dbl>, ADAMTS13 <dbl>, ADAMTS15 <dbl>, #> #   ADAMTS16 <dbl>, ADAMTS8 <dbl>, ADCYAP1R1 <dbl>, ADGRE2 <dbl>, ADGRE5 <dbl>, #> #   ADGRG1 <dbl>, ADGRG2 <dbl>, ADH4 <dbl>, ADM <dbl>, AGER <dbl>, AGR2 <dbl>, #> #   AGR3 <dbl>, AGRN <dbl>, AGRP <dbl>, AGXT <dbl>, AHCY <dbl>, AHSP <dbl>, #> #   AIF1 <dbl>, AIFM1 <dbl>, AK1 <dbl>, AKR1B1 <dbl>, AKR1C4 <dbl>, …  # Transform Olink data in long format hd_long_data(example_data_wide) #> # A tibble: 58,600 × 3 #>    DAid    Assay      NPX #>    <chr>   <chr>    <dbl> #>  1 DA00001 AARSD1  3.39   #>  2 DA00001 ABL1    2.76   #>  3 DA00001 ACAA1   1.71   #>  4 DA00001 ACAN    0.0333 #>  5 DA00001 ACE2    1.76   #>  6 DA00001 ACOX1  -0.919  #>  7 DA00001 ACP5    1.54   #>  8 DA00001 ACP6    2.15   #>  9 DA00001 ACTA2   2.81   #> 10 DA00001 ACTN4   0.742  #> # ℹ 58,590 more rows"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_model_lr.html","id":null,"dir":"Reference","previous_headings":"","what":"Run logistic regression model pipeline — hd_model_lr","title":"Run logistic regression model pipeline — hd_model_lr","text":"hd_model_lr() runs logistic regression model pipeline. creates class-balanced case-control groups train set, tunes model, evaluates model, plots variable importance.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_model_lr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run logistic regression model pipeline — hd_model_lr","text":"","code":"hd_model_lr(   dat,   variable = \"Disease\",   case,   control = NULL,   balance_groups = TRUE,   cor_threshold = 0.9,   palette = NULL,   plot_y_labels = TRUE,   verbose = TRUE,   plot_title = c(\"accuracy\", \"sensitivity\", \"specificity\", \"auc\", \"features\",     \"top-features\"),   seed = 123 )"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_model_lr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run logistic regression model pipeline — hd_model_lr","text":"dat hd_model object list containing train test data. variable name column containing case control groups. Default \"Disease\". case case class. control control groups. NULL, set unique values variable case. Default NULL. balance_groups Whether balance groups. Default TRUE. cor_threshold Threshold absolute correlation values. used remove minimum number features resulting absolute correlations less value. palette color palette classes. character, one palettes hd_palettes(). multi-class needed. Default NULL. plot_y_labels Whether show y-axis labels variable importance plot. Default TRUE. verbose Whether print progress messages. Default TRUE. plot_title Vector title elements include plot. seed Seed reproducibility. Default 123.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_model_lr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run logistic regression model pipeline — hd_model_lr","text":"model object containing train test data, metrics, ROC curve, selected features, variable importance, mixture parameter.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_model_lr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Run logistic regression model pipeline — hd_model_lr","text":"model ideal number features small. Otherwise, use hd_model_rreg() robust high-dimensional data. numeric predictors normalized nominal predictors one-hot encoded. data contain missing values, KNN (k=5) imputation used impute. Logistic regression models supported multiclass classification. case required binary classification. multi-class classification needed, use hd_model_rreg() instead.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_model_lr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run logistic regression model pipeline — hd_model_lr","text":"","code":"# Initialize an HDAnalyzeR object with only a subset of the predictors hd_object <- hd_initialize(   example_data |> dplyr::filter(Assay %in% c(\"ADA\", \"AARSD1\", \"ACAA1\", \"ACAN1\", \"ACOX1\")),   example_metadata )  # Split the data into training and test sets hd_split <- hd_split_data(   hd_object,   metadata_cols = c(\"Age\", \"Sex\"),  # Include metadata columns   variable = \"Disease\" ) #> Warning: Too little data to stratify. #> • Resampling will be unstratified.  # Run the regularized regression model pipeline hd_model_lr(hd_split,             variable = \"Disease\",             case = \"AML\",             palette = \"cancers12\") #> Tuning logistic regression model... #> Evaluating the model... #> Generating visualizations... #> $train_data #> # A tibble: 76 × 8 #>    DAid    Disease AARSD1  ACAA1  ACOX1    ADA   Age Sex   #>    <chr>   <fct>    <dbl>  <dbl>  <dbl>  <dbl> <dbl> <chr> #>  1 DA00003 1        NA    NA      0.330  0.952    61 F     #>  2 DA00004 1         3.41  1.69  NA      2.69     54 M     #>  3 DA00005 1         5.01  0.128 -0.584  3.75     57 F     #>  4 DA00006 1         6.83 -1.74  -0.721  2.03     86 M     #>  5 DA00007 1        NA     3.96   2.62   3.99     85 F     #>  6 DA00008 1         2.78 -0.552 -0.304  2.83     88 F     #>  7 DA00010 1         1.83 -0.912 -0.304 -0.448    48 M     #>  8 DA00011 1         3.48  3.50   1.26   2.42     54 F     #>  9 DA00012 1         4.31 -1.44  -0.361  0.725    78 F     #> 10 DA00013 1         1.31  1.11  -1.35   1.13     81 M     #> # ℹ 66 more rows #>  #> $test_data #> # A tibble: 147 × 8 #>    DAid    Disease AARSD1  ACAA1   ACOX1    ADA   Age Sex   #>    <chr>   <fct>    <dbl>  <dbl>   <dbl>  <dbl> <dbl> <chr> #>  1 DA00001 1        3.39   1.71  -0.919  5.39      42 F     #>  2 DA00002 1        1.42  -0.816 -0.902  0.0114    69 M     #>  3 DA00009 1        4.39  -0.452  1.71   3.61      80 M     #>  4 DA00015 1        3.31  NA      0.687  4.11      47 M     #>  5 DA00017 1        1.46  -2.73   0.0234 1.58      44 M     #>  6 DA00018 1        2.62   0.537  0.290  1.86      75 M     #>  7 DA00028 1        2.47  -0.486 NA      3.97      78 F     #>  8 DA00032 1        3.62  -1.34   1.53   2.96      62 M     #>  9 DA00035 1        4.39   0.454  0.116  2.82      59 F     #> 10 DA00044 1        0.964  1.55   0.164  0.836     72 F     #> # ℹ 137 more rows #>  #> $model_type #> [1] \"binary_class\" #>  #> $final_workflow #> ══ Workflow ════════════════════════════════════════════════════════════════════ #> Preprocessor: Recipe #> Model: logistic_reg() #>  #> ── Preprocessor ──────────────────────────────────────────────────────────────── #> 5 Recipe Steps #>  #> • step_dummy() #> • step_nzv() #> • step_normalize() #> • step_corr() #> • step_impute_knn() #>  #> ── Model ─────────────────────────────────────────────────────────────────────── #> Logistic Regression Model Specification (classification) #>  #> Computational engine: glm  #>  #>  #> $metrics #> $metrics$accuracy #> [1] 0.7142857 #>  #> $metrics$sensitivity #> [1] 0.8333333 #>  #> $metrics$specificity #> [1] 0.7037037 #>  #> $metrics$auc #> [1] 0.8753086 #>  #> $metrics$confusion_matrix #>           Truth #> Prediction  0  1 #>          0 95  2 #>          1 40 10 #>  #>  #> $roc_curve  #>  #> $probability_plot  #>  #> $features #> # A tibble: 5 × 4 #>   Feature Importance Sign  Scaled_Importance #>   <fct>        <dbl> <chr>             <dbl> #> 1 ADA          3.71  POS              1      #> 2 Sex_M        2.00  POS              0.502  #> 3 Age          1.78  NEG              0.440  #> 4 ACAA1        1.16  NEG              0.259  #> 5 ACOX1        0.563 NEG              0.0855 #>  #> $var_imp_plot  #>  #> attr(,\"class\") #> [1] \"hd_model\""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_model_rf.html","id":null,"dir":"Reference","previous_headings":"","what":"Run random forest model pipeline — hd_model_rf","title":"Run random forest model pipeline — hd_model_rf","text":"hd_model_rf() runs random forest model pipeline. creates class-balanced case-control groups train set, tunes model, evaluates model, plots variable importance.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_model_rf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run random forest model pipeline — hd_model_rf","text":"","code":"hd_model_rf(   dat,   variable = \"Disease\",   case,   control = NULL,   balance_groups = TRUE,   cor_threshold = 0.9,   grid_size = 30,   cv_sets = 5,   palette = NULL,   plot_y_labels = FALSE,   verbose = TRUE,   plot_title = c(\"accuracy\", \"sensitivity\", \"specificity\", \"auc\", \"features\",     \"top-features\"),   seed = 123 )"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_model_rf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run random forest model pipeline — hd_model_rf","text":"dat hd_model object list containing train test data. variable name column containing case control groups. Default \"Disease\". case case class. control control groups. NULL, set unique values variable case. Default NULL. balance_groups Whether balance groups train set. Default TRUE. cor_threshold Threshold absolute correlation values. used remove minimum number features resulting absolute correlations less value. grid_size Size hyperparameter optimization grid. Default 30. cv_sets Number cross-validation sets. Default 5. palette color palette classes. character, one palettes hd_palettes(). multi-class needed. Default NULL. plot_y_labels Whether show y-axis labels variable importance plot. Default FALSE. verbose Whether print progress messages. Default TRUE. plot_title Vector title elements include plot. seed Seed reproducibility. Default 123.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_model_rf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run random forest model pipeline — hd_model_rf","text":"model object containing train test data, metrics, ROC curve, selected features, variable importance, mixture parameter.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_model_rf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Run random forest model pipeline — hd_model_rf","text":"numeric predictors normalized nominal predictors one-hot encoded. data contain missing values, KNN (k=5) imputation used impute. case provided, model binary classification model. case NULL, model multiclass classification model. multi-class models, groups train set balanced sensitivity specificity calculated via macro-averaging.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_model_rf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run random forest model pipeline — hd_model_rf","text":"","code":"# Initialize an HDAnalyzeR object hd_object <- hd_initialize(example_data, example_metadata)  # Split the data into training and test sets hd_split <- hd_split_data(hd_object, variable = \"Disease\") #> Warning: Too little data to stratify. #> • Resampling will be unstratified.  # Run the regularized regression model pipeline hd_model_rf(hd_split,             variable = \"Disease\",             case = \"AML\",             grid_size = 5,             palette = \"cancers12\") #> Tuning random forest model... #> i Fold1: preprocessor 1/1 #> ✓ Fold1: preprocessor 1/1 #> i Fold1: preprocessor 1/1, model 1/5 #> ✓ Fold1: preprocessor 1/1, model 1/5 #> i Fold1: preprocessor 1/1, model 1/5 (extracts) #> i Fold1: preprocessor 1/1, model 1/5 (predictions) #> i Fold1: preprocessor 1/1 #> ✓ Fold1: preprocessor 1/1 #> i Fold1: preprocessor 1/1, model 2/5 #> ✓ Fold1: preprocessor 1/1, model 2/5 #> i Fold1: preprocessor 1/1, model 2/5 (extracts) #> i Fold1: preprocessor 1/1, model 2/5 (predictions) #> i Fold1: preprocessor 1/1 #> ✓ Fold1: preprocessor 1/1 #> i Fold1: preprocessor 1/1, model 3/5 #> ✓ Fold1: preprocessor 1/1, model 3/5 #> i Fold1: preprocessor 1/1, model 3/5 (extracts) #> i Fold1: preprocessor 1/1, model 3/5 (predictions) #> i Fold1: preprocessor 1/1 #> ✓ Fold1: preprocessor 1/1 #> i Fold1: preprocessor 1/1, model 4/5 #> ✓ Fold1: preprocessor 1/1, model 4/5 #> i Fold1: preprocessor 1/1, model 4/5 (extracts) #> i Fold1: preprocessor 1/1, model 4/5 (predictions) #> i Fold1: preprocessor 1/1 #> ✓ Fold1: preprocessor 1/1 #> i Fold1: preprocessor 1/1, model 5/5 #> ✓ Fold1: preprocessor 1/1, model 5/5 #> i Fold1: preprocessor 1/1, model 5/5 (extracts) #> i Fold1: preprocessor 1/1, model 5/5 (predictions) #> i Fold2: preprocessor 1/1 #> ✓ Fold2: preprocessor 1/1 #> i Fold2: preprocessor 1/1, model 1/5 #> ✓ Fold2: preprocessor 1/1, model 1/5 #> i Fold2: preprocessor 1/1, model 1/5 (extracts) #> i Fold2: preprocessor 1/1, model 1/5 (predictions) #> i Fold2: preprocessor 1/1 #> ✓ Fold2: preprocessor 1/1 #> i Fold2: preprocessor 1/1, model 2/5 #> ✓ Fold2: preprocessor 1/1, model 2/5 #> i Fold2: preprocessor 1/1, model 2/5 (extracts) #> i Fold2: preprocessor 1/1, model 2/5 (predictions) #> i Fold2: preprocessor 1/1 #> ✓ Fold2: preprocessor 1/1 #> i Fold2: preprocessor 1/1, model 3/5 #> ✓ Fold2: preprocessor 1/1, model 3/5 #> i Fold2: preprocessor 1/1, model 3/5 (extracts) #> i Fold2: preprocessor 1/1, model 3/5 (predictions) #> i Fold2: preprocessor 1/1 #> ✓ Fold2: preprocessor 1/1 #> i Fold2: preprocessor 1/1, model 4/5 #> ✓ Fold2: preprocessor 1/1, model 4/5 #> i Fold2: preprocessor 1/1, model 4/5 (extracts) #> i Fold2: preprocessor 1/1, model 4/5 (predictions) #> i Fold2: preprocessor 1/1 #> ✓ Fold2: preprocessor 1/1 #> i Fold2: preprocessor 1/1, model 5/5 #> ✓ Fold2: preprocessor 1/1, model 5/5 #> i Fold2: preprocessor 1/1, model 5/5 (extracts) #> i Fold2: preprocessor 1/1, model 5/5 (predictions) #> i Fold3: preprocessor 1/1 #> ✓ Fold3: preprocessor 1/1 #> i Fold3: preprocessor 1/1, model 1/5 #> ✓ Fold3: preprocessor 1/1, model 1/5 #> i Fold3: preprocessor 1/1, model 1/5 (extracts) #> i Fold3: preprocessor 1/1, model 1/5 (predictions) #> i Fold3: preprocessor 1/1 #> ✓ Fold3: preprocessor 1/1 #> i Fold3: preprocessor 1/1, model 2/5 #> ✓ Fold3: preprocessor 1/1, model 2/5 #> i Fold3: preprocessor 1/1, model 2/5 (extracts) #> i Fold3: preprocessor 1/1, model 2/5 (predictions) #> i Fold3: preprocessor 1/1 #> ✓ Fold3: preprocessor 1/1 #> i Fold3: preprocessor 1/1, model 3/5 #> ✓ Fold3: preprocessor 1/1, model 3/5 #> i Fold3: preprocessor 1/1, model 3/5 (extracts) #> i Fold3: preprocessor 1/1, model 3/5 (predictions) #> i Fold3: preprocessor 1/1 #> ✓ Fold3: preprocessor 1/1 #> i Fold3: preprocessor 1/1, model 4/5 #> ✓ Fold3: preprocessor 1/1, model 4/5 #> i Fold3: preprocessor 1/1, model 4/5 (extracts) #> i Fold3: preprocessor 1/1, model 4/5 (predictions) #> i Fold3: preprocessor 1/1 #> ✓ Fold3: preprocessor 1/1 #> i Fold3: preprocessor 1/1, model 5/5 #> ✓ Fold3: preprocessor 1/1, model 5/5 #> i Fold3: preprocessor 1/1, model 5/5 (extracts) #> i Fold3: preprocessor 1/1, model 5/5 (predictions) #> i Fold4: preprocessor 1/1 #> ✓ Fold4: preprocessor 1/1 #> i Fold4: preprocessor 1/1, model 1/5 #> ✓ Fold4: preprocessor 1/1, model 1/5 #> i Fold4: preprocessor 1/1, model 1/5 (extracts) #> i Fold4: preprocessor 1/1, model 1/5 (predictions) #> i Fold4: preprocessor 1/1 #> ✓ Fold4: preprocessor 1/1 #> i Fold4: preprocessor 1/1, model 2/5 #> ✓ Fold4: preprocessor 1/1, model 2/5 #> i Fold4: preprocessor 1/1, model 2/5 (extracts) #> i Fold4: preprocessor 1/1, model 2/5 (predictions) #> i Fold4: preprocessor 1/1 #> ✓ Fold4: preprocessor 1/1 #> i Fold4: preprocessor 1/1, model 3/5 #> ✓ Fold4: preprocessor 1/1, model 3/5 #> i Fold4: preprocessor 1/1, model 3/5 (extracts) #> i Fold4: preprocessor 1/1, model 3/5 (predictions) #> i Fold4: preprocessor 1/1 #> ✓ Fold4: preprocessor 1/1 #> i Fold4: preprocessor 1/1, model 4/5 #> ✓ Fold4: preprocessor 1/1, model 4/5 #> i Fold4: preprocessor 1/1, model 4/5 (extracts) #> i Fold4: preprocessor 1/1, model 4/5 (predictions) #> i Fold4: preprocessor 1/1 #> ✓ Fold4: preprocessor 1/1 #> i Fold4: preprocessor 1/1, model 5/5 #> ✓ Fold4: preprocessor 1/1, model 5/5 #> i Fold4: preprocessor 1/1, model 5/5 (extracts) #> i Fold4: preprocessor 1/1, model 5/5 (predictions) #> i Fold5: preprocessor 1/1 #> ✓ Fold5: preprocessor 1/1 #> i Fold5: preprocessor 1/1, model 1/5 #> ✓ Fold5: preprocessor 1/1, model 1/5 #> i Fold5: preprocessor 1/1, model 1/5 (extracts) #> i Fold5: preprocessor 1/1, model 1/5 (predictions) #> i Fold5: preprocessor 1/1 #> ✓ Fold5: preprocessor 1/1 #> i Fold5: preprocessor 1/1, model 2/5 #> ✓ Fold5: preprocessor 1/1, model 2/5 #> i Fold5: preprocessor 1/1, model 2/5 (extracts) #> i Fold5: preprocessor 1/1, model 2/5 (predictions) #> i Fold5: preprocessor 1/1 #> ✓ Fold5: preprocessor 1/1 #> i Fold5: preprocessor 1/1, model 3/5 #> ✓ Fold5: preprocessor 1/1, model 3/5 #> i Fold5: preprocessor 1/1, model 3/5 (extracts) #> i Fold5: preprocessor 1/1, model 3/5 (predictions) #> i Fold5: preprocessor 1/1 #> ✓ Fold5: preprocessor 1/1 #> i Fold5: preprocessor 1/1, model 4/5 #> ✓ Fold5: preprocessor 1/1, model 4/5 #> i Fold5: preprocessor 1/1, model 4/5 (extracts) #> i Fold5: preprocessor 1/1, model 4/5 (predictions) #> i Fold5: preprocessor 1/1 #> ✓ Fold5: preprocessor 1/1 #> i Fold5: preprocessor 1/1, model 5/5 #> ✓ Fold5: preprocessor 1/1, model 5/5 #> i Fold5: preprocessor 1/1, model 5/5 (extracts) #> i Fold5: preprocessor 1/1, model 5/5 (predictions) #> Evaluating the model... #> Generating visualizations... #> $train_data #> # A tibble: 76 × 102 #>    DAid    Disease AARSD1   ABL1  ACAA1   ACAN    ACE2  ACOX1    ACP5    ACP6 #>    <chr>   <fct>    <dbl>  <dbl>  <dbl>  <dbl>   <dbl>  <dbl>   <dbl>   <dbl> #>  1 DA00003 1        NA    NA     NA      0.989 NA       0.330  1.37   NA      #>  2 DA00004 1         3.41  3.38   1.69  NA      1.52   NA      0.841   0.582  #>  3 DA00005 1         5.01  5.05   0.128  0.401 -0.933  -0.584  0.0265  1.16   #>  4 DA00006 1         6.83  1.18  -1.74  -0.156  1.53   -0.721  0.620   0.527  #>  5 DA00007 1        NA    NA      3.96   0.682  3.14    2.62   1.47    2.25   #>  6 DA00008 1         2.78  0.812 -0.552  0.982 -0.101  -0.304  0.376  -0.826  #>  7 DA00010 1         1.83  1.21  -0.912 -1.04  -0.0918 -0.304  1.69    0.0920 #>  8 DA00011 1         3.48  4.96   3.50  -0.338  4.48    1.26   2.18    1.62   #>  9 DA00012 1         4.31  0.710 -1.44  -0.218 -0.469  -0.361 -0.0714 -1.30   #> 10 DA00013 1         1.31  2.52   1.11   0.997  4.56   -1.35   0.833   2.33   #> # ℹ 66 more rows #> # ℹ 92 more variables: ACTA2 <dbl>, ACTN4 <dbl>, ACY1 <dbl>, ADA <dbl>, #> #   ADA2 <dbl>, ADAM15 <dbl>, ADAM23 <dbl>, ADAM8 <dbl>, ADAMTS13 <dbl>, #> #   ADAMTS15 <dbl>, ADAMTS16 <dbl>, ADAMTS8 <dbl>, ADCYAP1R1 <dbl>, #> #   ADGRE2 <dbl>, ADGRE5 <dbl>, ADGRG1 <dbl>, ADGRG2 <dbl>, ADH4 <dbl>, #> #   ADM <dbl>, AGER <dbl>, AGR2 <dbl>, AGR3 <dbl>, AGRN <dbl>, AGRP <dbl>, #> #   AGXT <dbl>, AHCY <dbl>, AHSP <dbl>, AIF1 <dbl>, AIFM1 <dbl>, AK1 <dbl>, … #>  #> $test_data #> # A tibble: 147 × 102 #>    DAid   Disease AARSD1  ABL1  ACAA1    ACAN  ACE2   ACOX1   ACP5    ACP6 ACTA2 #>    <chr>  <fct>    <dbl> <dbl>  <dbl>   <dbl> <dbl>   <dbl>  <dbl>   <dbl> <dbl> #>  1 DA000… 1        3.39  2.76   1.71   0.0333 1.76  -0.919   1.54   2.15   2.81  #>  2 DA000… 1        1.42  1.25  -0.816 -0.459  0.826 -0.902   0.647  1.30   0.798 #>  3 DA000… 1        4.39  3.34  -0.452 -0.868  0.395  1.71    1.49  -0.0285 0.200 #>  4 DA000… 1        3.31  1.90  NA     -0.926  0.408  0.687   1.03   0.612  2.19  #>  5 DA000… 1        1.46  0.832 -2.73  -0.371  2.27   0.0234  0.144  0.826  1.98  #>  6 DA000… 1        2.62  2.48   0.537 -0.215  1.82   0.290   1.27   1.11   0.206 #>  7 DA000… 1        2.47  2.16  -0.486 NA      0.386 NA       1.38   0.536  1.86  #>  8 DA000… 1        3.62  3.06  -1.34   0.965  1.05   1.53    0.152 -0.124  2.81  #>  9 DA000… 1        4.39  3.31   0.454  0.290  2.68   0.116  -1.32   0.945  2.14  #> 10 DA000… 1        0.964 2.94   1.55   1.67   2.50   0.164   1.83   1.46   3.03  #> # ℹ 137 more rows #> # ℹ 91 more variables: ACTN4 <dbl>, ACY1 <dbl>, ADA <dbl>, ADA2 <dbl>, #> #   ADAM15 <dbl>, ADAM23 <dbl>, ADAM8 <dbl>, ADAMTS13 <dbl>, ADAMTS15 <dbl>, #> #   ADAMTS16 <dbl>, ADAMTS8 <dbl>, ADCYAP1R1 <dbl>, ADGRE2 <dbl>, ADGRE5 <dbl>, #> #   ADGRG1 <dbl>, ADGRG2 <dbl>, ADH4 <dbl>, ADM <dbl>, AGER <dbl>, AGR2 <dbl>, #> #   AGR3 <dbl>, AGRN <dbl>, AGRP <dbl>, AGXT <dbl>, AHCY <dbl>, AHSP <dbl>, #> #   AIF1 <dbl>, AIFM1 <dbl>, AK1 <dbl>, AKR1B1 <dbl>, AKR1C4 <dbl>, … #>  #> $model_type #> [1] \"binary_class\" #>  #> $final_workflow #> ══ Workflow ════════════════════════════════════════════════════════════════════ #> Preprocessor: Recipe #> Model: rand_forest() #>  #> ── Preprocessor ──────────────────────────────────────────────────────────────── #> 5 Recipe Steps #>  #> • step_dummy() #> • step_nzv() #> • step_normalize() #> • step_corr() #> • step_impute_knn() #>  #> ── Model ─────────────────────────────────────────────────────────────────────── #> Random Forest Model Specification (classification) #>  #> Main Arguments: #>   mtry = 28 #>   trees = 1000 #>   min_n = 4 #>  #> Engine-Specific Arguments: #>   importance = permutation #>  #> Computational engine: ranger  #>  #>  #> $metrics #> $metrics$accuracy #> [1] 0.7891156 #>  #> $metrics$sensitivity #> [1] 0.9166667 #>  #> $metrics$specificity #> [1] 0.7777778 #>  #> $metrics$auc #> [1] 0.9259259 #>  #> $metrics$confusion_matrix #>           Truth #> Prediction   0   1 #>          0 105   1 #>          1  30  11 #>  #>  #> $roc_curve  #>  #> $probability_plot  #>  #> $features #> # A tibble: 99 × 3 #>    Feature Importance Scaled_Importance #>    <fct>        <dbl>             <dbl> #>  1 APBB1IP    0.0562             1      #>  2 ADA        0.0417             0.743  #>  3 AZU1       0.0155             0.276  #>  4 ADGRG1     0.0119             0.212  #>  5 ANGPT1     0.0112             0.198  #>  6 APEX1      0.0104             0.185  #>  7 ANXA3      0.00657            0.117  #>  8 ANGPT2     0.00516            0.0919 #>  9 ABL1       0.00291            0.0518 #> 10 AMY2A      0.00260            0.0462 #> # ℹ 89 more rows #>  #> $var_imp_plot  #>  #> attr(,\"class\") #> [1] \"hd_model\"  # Run the multiclass regularized regression model pipeline hd_model_rf(hd_split,             variable = \"Disease\",             case = NULL,             grid_size = 2,             cv_sets = 2,             verbose = FALSE) #> Warning: Too little data to stratify. #> • Resampling will be unstratified. #> $train_data #> # A tibble: 439 × 102 #>    DAid    Disease AARSD1   ABL1  ACAA1   ACAN    ACE2  ACOX1    ACP5    ACP6 #>    <chr>   <fct>    <dbl>  <dbl>  <dbl>  <dbl>   <dbl>  <dbl>   <dbl>   <dbl> #>  1 DA00003 AML      NA    NA     NA      0.989 NA       0.330  1.37   NA      #>  2 DA00004 AML       3.41  3.38   1.69  NA      1.52   NA      0.841   0.582  #>  3 DA00005 AML       5.01  5.05   0.128  0.401 -0.933  -0.584  0.0265  1.16   #>  4 DA00006 AML       6.83  1.18  -1.74  -0.156  1.53   -0.721  0.620   0.527  #>  5 DA00007 AML      NA    NA      3.96   0.682  3.14    2.62   1.47    2.25   #>  6 DA00008 AML       2.78  0.812 -0.552  0.982 -0.101  -0.304  0.376  -0.826  #>  7 DA00010 AML       1.83  1.21  -0.912 -1.04  -0.0918 -0.304  1.69    0.0920 #>  8 DA00011 AML       3.48  4.96   3.50  -0.338  4.48    1.26   2.18    1.62   #>  9 DA00012 AML       4.31  0.710 -1.44  -0.218 -0.469  -0.361 -0.0714 -1.30   #> 10 DA00013 AML       1.31  2.52   1.11   0.997  4.56   -1.35   0.833   2.33   #> # ℹ 429 more rows #> # ℹ 92 more variables: ACTA2 <dbl>, ACTN4 <dbl>, ACY1 <dbl>, ADA <dbl>, #> #   ADA2 <dbl>, ADAM15 <dbl>, ADAM23 <dbl>, ADAM8 <dbl>, ADAMTS13 <dbl>, #> #   ADAMTS15 <dbl>, ADAMTS16 <dbl>, ADAMTS8 <dbl>, ADCYAP1R1 <dbl>, #> #   ADGRE2 <dbl>, ADGRE5 <dbl>, ADGRG1 <dbl>, ADGRG2 <dbl>, ADH4 <dbl>, #> #   ADM <dbl>, AGER <dbl>, AGR2 <dbl>, AGR3 <dbl>, AGRN <dbl>, AGRP <dbl>, #> #   AGXT <dbl>, AHCY <dbl>, AHSP <dbl>, AIF1 <dbl>, AIFM1 <dbl>, AK1 <dbl>, … #>  #> $test_data #> # A tibble: 147 × 102 #>    DAid   Disease AARSD1  ABL1  ACAA1    ACAN  ACE2   ACOX1   ACP5    ACP6 ACTA2 #>    <chr>  <fct>    <dbl> <dbl>  <dbl>   <dbl> <dbl>   <dbl>  <dbl>   <dbl> <dbl> #>  1 DA000… AML      3.39  2.76   1.71   0.0333 1.76  -0.919   1.54   2.15   2.81  #>  2 DA000… AML      1.42  1.25  -0.816 -0.459  0.826 -0.902   0.647  1.30   0.798 #>  3 DA000… AML      4.39  3.34  -0.452 -0.868  0.395  1.71    1.49  -0.0285 0.200 #>  4 DA000… AML      3.31  1.90  NA     -0.926  0.408  0.687   1.03   0.612  2.19  #>  5 DA000… AML      1.46  0.832 -2.73  -0.371  2.27   0.0234  0.144  0.826  1.98  #>  6 DA000… AML      2.62  2.48   0.537 -0.215  1.82   0.290   1.27   1.11   0.206 #>  7 DA000… AML      2.47  2.16  -0.486 NA      0.386 NA       1.38   0.536  1.86  #>  8 DA000… AML      3.62  3.06  -1.34   0.965  1.05   1.53    0.152 -0.124  2.81  #>  9 DA000… AML      4.39  3.31   0.454  0.290  2.68   0.116  -1.32   0.945  2.14  #> 10 DA000… AML      0.964 2.94   1.55   1.67   2.50   0.164   1.83   1.46   3.03  #> # ℹ 137 more rows #> # ℹ 91 more variables: ACTN4 <dbl>, ACY1 <dbl>, ADA <dbl>, ADA2 <dbl>, #> #   ADAM15 <dbl>, ADAM23 <dbl>, ADAM8 <dbl>, ADAMTS13 <dbl>, ADAMTS15 <dbl>, #> #   ADAMTS16 <dbl>, ADAMTS8 <dbl>, ADCYAP1R1 <dbl>, ADGRE2 <dbl>, ADGRE5 <dbl>, #> #   ADGRG1 <dbl>, ADGRG2 <dbl>, ADH4 <dbl>, ADM <dbl>, AGER <dbl>, AGR2 <dbl>, #> #   AGR3 <dbl>, AGRN <dbl>, AGRP <dbl>, AGXT <dbl>, AHCY <dbl>, AHSP <dbl>, #> #   AIF1 <dbl>, AIFM1 <dbl>, AK1 <dbl>, AKR1B1 <dbl>, AKR1C4 <dbl>, … #>  #> $model_type #> [1] \"multi_class\" #>  #> $final_workflow #> ══ Workflow ════════════════════════════════════════════════════════════════════ #> Preprocessor: Recipe #> Model: rand_forest() #>  #> ── Preprocessor ──────────────────────────────────────────────────────────────── #> 5 Recipe Steps #>  #> • step_dummy() #> • step_nzv() #> • step_normalize() #> • step_corr() #> • step_impute_knn() #>  #> ── Model ─────────────────────────────────────────────────────────────────────── #> Random Forest Model Specification (classification) #>  #> Main Arguments: #>   mtry = 14 #>   trees = 1000 #>   min_n = 20 #>  #> Engine-Specific Arguments: #>   importance = permutation #>  #> Computational engine: ranger  #>  #>  #> $metrics #> $metrics$accuracy #> [1] 0.4353741 #>  #> $metrics$sensitivity #> [1] 0.4591521 #>  #> $metrics$specificity #> [1] 0.9487406 #>  #> $metrics$auc #> # A tibble: 14 × 2 #>    Disease   AUC #>    <chr>   <dbl> #>  1 AML     0.959 #>  2 BRC     0.722 #>  3 CLL     0.961 #>  4 CRC     0.917 #>  5 CVX     0.816 #>  6 ENDC    0.734 #>  7 GLIOM   0.832 #>  8 LUNGC   0.854 #>  9 LYMPH   0.790 #> 10 MYEL    0.976 #> 11 OVC     0.856 #> 12 PRC     0.825 #> 13 macro   0.853 #> 14 micro   0.854 #>  #> $metrics$confusion_matrix #>           Truth #> Prediction AML BRC CLL CRC CVX ENDC GLIOM LUNGC LYMPH MYEL OVC PRC #>      AML     9   0   0   0   1    0     0     0     1    0   0   1 #>      BRC     0   1   0   0   1    1     1     0     0    1   0   3 #>      CLL     1   2   7   2   0    1     1     0     1    0   0   0 #>      CRC     0   0   0   6   1    0     1     2     0    0   1   1 #>      CVX     0   2   0   0   4    2     0     0     1    0   0   2 #>      ENDC    0   4   0   2   2    4     1     1     1    0   5   1 #>      GLIOM   0   0   0   0   1    0     9     1     4    0   0   0 #>      LUNGC   0   0   0   2   1    0     0     2     1    0   1   0 #>      LYMPH   1   0   1   0   0    1     0     2     5    0   0   0 #>      MYEL    1   1   0   0   1    0     1     0     0    6   0   0 #>      OVC     0   0   0   2   2    1     0     3     0    0   6   1 #>      PRC     0   2   1   1   0    0     0     0     2    0   0   5 #>  #>  #> $roc_curve  #>  #> $probability_plot  #>  #> $features #> # A tibble: 99 × 3 #>    Feature  Importance Scaled_Importance #>    <fct>         <dbl>             <dbl> #>  1 APEX1       0.0167              1     #>  2 ARID4B      0.00919             0.550 #>  3 ARTN        0.00696             0.416 #>  4 AZU1        0.00640             0.383 #>  5 ADA         0.00511             0.306 #>  6 ALPP        0.00404             0.242 #>  7 ADGRG2      0.00359             0.215 #>  8 AHCY        0.00353             0.212 #>  9 ARHGAP25    0.00340             0.204 #> 10 ANXA3       0.00244             0.146 #> # ℹ 89 more rows #>  #> $var_imp_plot  #>  #> attr(,\"class\") #> [1] \"hd_model\""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_model_rreg.html","id":null,"dir":"Reference","previous_headings":"","what":"Run regularized regression model pipeline — hd_model_rreg","title":"Run regularized regression model pipeline — hd_model_rreg","text":"hd_model_rreg() runs regularized regression model pipeline. creates class-balanced case-control groups train set, tunes model, evaluates model, plots variable importance.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_model_rreg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run regularized regression model pipeline — hd_model_rreg","text":"","code":"hd_model_rreg(   dat,   variable = \"Disease\",   case,   control = NULL,   balance_groups = TRUE,   cor_threshold = 0.9,   grid_size = 30,   cv_sets = 5,   mixture = NULL,   palette = NULL,   plot_y_labels = FALSE,   verbose = TRUE,   plot_title = c(\"accuracy\", \"sensitivity\", \"specificity\", \"auc\", \"features\",     \"top-features\", \"mixture\"),   seed = 123 )"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_model_rreg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run regularized regression model pipeline — hd_model_rreg","text":"dat hd_model object list containing train test data. variable name column containing case control groups. Default \"Disease\". case case class. control control groups. NULL, set unique values variable case. Default NULL. balance_groups Whether balance groups train set. Default TRUE. cor_threshold Threshold absolute correlation values. used remove minimum number features resulting absolute correlations less value. grid_size Size hyperparameter optimization grid. Default 30. cv_sets Number cross-validation sets. Default 5. mixture mixture parameter elastic net. NULL tuned. Default NULL. palette color palette classes. character, one palettes hd_palettes(). multi-class needed. Default NULL. plot_y_labels Whether show y-axis labels variable importance plot. Default FALSE. verbose Whether print progress messages. Default TRUE. plot_title Vector title elements include plot. seed Seed reproducibility. Default 123.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_model_rreg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run regularized regression model pipeline — hd_model_rreg","text":"model object containing train test data, metrics, ROC curve, selected features, variable importance, mixture parameter.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_model_rreg.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Run regularized regression model pipeline — hd_model_rreg","text":"model work number predictors less 2. However, case, consider using hd_model_lr() instead. numeric predictors normalized nominal predictors one-hot encoded. data contain missing values, KNN (k=5) imputation used impute. case provided, model binary classification model. case NULL, model multiclass classification model. multi-class models, groups train set balanced sensitivity specificity calculated via macro-averaging.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_model_rreg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run regularized regression model pipeline — hd_model_rreg","text":"","code":"# Initialize an HDAnalyzeR object hd_object <- hd_initialize(example_data, example_metadata)  # Split the data into training and test sets hd_split <- hd_split_data(hd_object, variable = \"Disease\") #> Warning: Too little data to stratify. #> • Resampling will be unstratified.  # Run the regularized regression model pipeline hd_model_rreg(hd_split,               variable = \"Disease\",               case = \"AML\",               grid_size = 5,               palette = \"cancers12\") #> Tuning regularized regression model... #> i Fold1: preprocessor 1/1 #> ✓ Fold1: preprocessor 1/1 #> i Fold1: preprocessor 1/1, model 1/5 #> ✓ Fold1: preprocessor 1/1, model 1/5 #> i Fold1: preprocessor 1/1, model 1/5 (extracts) #> i Fold1: preprocessor 1/1, model 1/5 (predictions) #> i Fold1: preprocessor 1/1 #> ✓ Fold1: preprocessor 1/1 #> i Fold1: preprocessor 1/1, model 2/5 #> ✓ Fold1: preprocessor 1/1, model 2/5 #> i Fold1: preprocessor 1/1, model 2/5 (extracts) #> i Fold1: preprocessor 1/1, model 2/5 (predictions) #> i Fold1: preprocessor 1/1 #> ✓ Fold1: preprocessor 1/1 #> i Fold1: preprocessor 1/1, model 3/5 #> ✓ Fold1: preprocessor 1/1, model 3/5 #> i Fold1: preprocessor 1/1, model 3/5 (extracts) #> i Fold1: preprocessor 1/1, model 3/5 (predictions) #> i Fold1: preprocessor 1/1 #> ✓ Fold1: preprocessor 1/1 #> i Fold1: preprocessor 1/1, model 4/5 #> ✓ Fold1: preprocessor 1/1, model 4/5 #> i Fold1: preprocessor 1/1, model 4/5 (extracts) #> i Fold1: preprocessor 1/1, model 4/5 (predictions) #> i Fold1: preprocessor 1/1 #> ✓ Fold1: preprocessor 1/1 #> i Fold1: preprocessor 1/1, model 5/5 #> ✓ Fold1: preprocessor 1/1, model 5/5 #> i Fold1: preprocessor 1/1, model 5/5 (extracts) #> i Fold1: preprocessor 1/1, model 5/5 (predictions) #> i Fold2: preprocessor 1/1 #> ✓ Fold2: preprocessor 1/1 #> i Fold2: preprocessor 1/1, model 1/5 #> ✓ Fold2: preprocessor 1/1, model 1/5 #> i Fold2: preprocessor 1/1, model 1/5 (extracts) #> i Fold2: preprocessor 1/1, model 1/5 (predictions) #> i Fold2: preprocessor 1/1 #> ✓ Fold2: preprocessor 1/1 #> i Fold2: preprocessor 1/1, model 2/5 #> ✓ Fold2: preprocessor 1/1, model 2/5 #> i Fold2: preprocessor 1/1, model 2/5 (extracts) #> i Fold2: preprocessor 1/1, model 2/5 (predictions) #> i Fold2: preprocessor 1/1 #> ✓ Fold2: preprocessor 1/1 #> i Fold2: preprocessor 1/1, model 3/5 #> ✓ Fold2: preprocessor 1/1, model 3/5 #> i Fold2: preprocessor 1/1, model 3/5 (extracts) #> i Fold2: preprocessor 1/1, model 3/5 (predictions) #> i Fold2: preprocessor 1/1 #> ✓ Fold2: preprocessor 1/1 #> i Fold2: preprocessor 1/1, model 4/5 #> ✓ Fold2: preprocessor 1/1, model 4/5 #> i Fold2: preprocessor 1/1, model 4/5 (extracts) #> i Fold2: preprocessor 1/1, model 4/5 (predictions) #> i Fold2: preprocessor 1/1 #> ✓ Fold2: preprocessor 1/1 #> i Fold2: preprocessor 1/1, model 5/5 #> ✓ Fold2: preprocessor 1/1, model 5/5 #> i Fold2: preprocessor 1/1, model 5/5 (extracts) #> i Fold2: preprocessor 1/1, model 5/5 (predictions) #> i Fold3: preprocessor 1/1 #> ✓ Fold3: preprocessor 1/1 #> i Fold3: preprocessor 1/1, model 1/5 #> ✓ Fold3: preprocessor 1/1, model 1/5 #> i Fold3: preprocessor 1/1, model 1/5 (extracts) #> i Fold3: preprocessor 1/1, model 1/5 (predictions) #> i Fold3: preprocessor 1/1 #> ✓ Fold3: preprocessor 1/1 #> i Fold3: preprocessor 1/1, model 2/5 #> ✓ Fold3: preprocessor 1/1, model 2/5 #> i Fold3: preprocessor 1/1, model 2/5 (extracts) #> i Fold3: preprocessor 1/1, model 2/5 (predictions) #> i Fold3: preprocessor 1/1 #> ✓ Fold3: preprocessor 1/1 #> i Fold3: preprocessor 1/1, model 3/5 #> ✓ Fold3: preprocessor 1/1, model 3/5 #> i Fold3: preprocessor 1/1, model 3/5 (extracts) #> i Fold3: preprocessor 1/1, model 3/5 (predictions) #> i Fold3: preprocessor 1/1 #> ✓ Fold3: preprocessor 1/1 #> i Fold3: preprocessor 1/1, model 4/5 #> ✓ Fold3: preprocessor 1/1, model 4/5 #> i Fold3: preprocessor 1/1, model 4/5 (extracts) #> i Fold3: preprocessor 1/1, model 4/5 (predictions) #> i Fold3: preprocessor 1/1 #> ✓ Fold3: preprocessor 1/1 #> i Fold3: preprocessor 1/1, model 5/5 #> ✓ Fold3: preprocessor 1/1, model 5/5 #> i Fold3: preprocessor 1/1, model 5/5 (extracts) #> i Fold3: preprocessor 1/1, model 5/5 (predictions) #> i Fold4: preprocessor 1/1 #> ✓ Fold4: preprocessor 1/1 #> i Fold4: preprocessor 1/1, model 1/5 #> ✓ Fold4: preprocessor 1/1, model 1/5 #> i Fold4: preprocessor 1/1, model 1/5 (extracts) #> i Fold4: preprocessor 1/1, model 1/5 (predictions) #> i Fold4: preprocessor 1/1 #> ✓ Fold4: preprocessor 1/1 #> i Fold4: preprocessor 1/1, model 2/5 #> ✓ Fold4: preprocessor 1/1, model 2/5 #> i Fold4: preprocessor 1/1, model 2/5 (extracts) #> i Fold4: preprocessor 1/1, model 2/5 (predictions) #> i Fold4: preprocessor 1/1 #> ✓ Fold4: preprocessor 1/1 #> i Fold4: preprocessor 1/1, model 3/5 #> ✓ Fold4: preprocessor 1/1, model 3/5 #> i Fold4: preprocessor 1/1, model 3/5 (extracts) #> i Fold4: preprocessor 1/1, model 3/5 (predictions) #> i Fold4: preprocessor 1/1 #> ✓ Fold4: preprocessor 1/1 #> i Fold4: preprocessor 1/1, model 4/5 #> ✓ Fold4: preprocessor 1/1, model 4/5 #> i Fold4: preprocessor 1/1, model 4/5 (extracts) #> i Fold4: preprocessor 1/1, model 4/5 (predictions) #> i Fold4: preprocessor 1/1 #> ✓ Fold4: preprocessor 1/1 #> i Fold4: preprocessor 1/1, model 5/5 #> ✓ Fold4: preprocessor 1/1, model 5/5 #> i Fold4: preprocessor 1/1, model 5/5 (extracts) #> i Fold4: preprocessor 1/1, model 5/5 (predictions) #> i Fold5: preprocessor 1/1 #> ✓ Fold5: preprocessor 1/1 #> i Fold5: preprocessor 1/1, model 1/5 #> ✓ Fold5: preprocessor 1/1, model 1/5 #> i Fold5: preprocessor 1/1, model 1/5 (extracts) #> i Fold5: preprocessor 1/1, model 1/5 (predictions) #> i Fold5: preprocessor 1/1 #> ✓ Fold5: preprocessor 1/1 #> i Fold5: preprocessor 1/1, model 2/5 #> ✓ Fold5: preprocessor 1/1, model 2/5 #> i Fold5: preprocessor 1/1, model 2/5 (extracts) #> i Fold5: preprocessor 1/1, model 2/5 (predictions) #> i Fold5: preprocessor 1/1 #> ✓ Fold5: preprocessor 1/1 #> i Fold5: preprocessor 1/1, model 3/5 #> ✓ Fold5: preprocessor 1/1, model 3/5 #> i Fold5: preprocessor 1/1, model 3/5 (extracts) #> i Fold5: preprocessor 1/1, model 3/5 (predictions) #> i Fold5: preprocessor 1/1 #> ✓ Fold5: preprocessor 1/1 #> i Fold5: preprocessor 1/1, model 4/5 #> ✓ Fold5: preprocessor 1/1, model 4/5 #> i Fold5: preprocessor 1/1, model 4/5 (extracts) #> i Fold5: preprocessor 1/1, model 4/5 (predictions) #> i Fold5: preprocessor 1/1 #> ✓ Fold5: preprocessor 1/1 #> i Fold5: preprocessor 1/1, model 5/5 #> ✓ Fold5: preprocessor 1/1, model 5/5 #> i Fold5: preprocessor 1/1, model 5/5 (extracts) #> i Fold5: preprocessor 1/1, model 5/5 (predictions) #> Evaluating the model... #> Generating visualizations... #> $train_data #> # A tibble: 76 × 102 #>    DAid    Disease AARSD1   ABL1  ACAA1   ACAN    ACE2  ACOX1    ACP5    ACP6 #>    <chr>   <fct>    <dbl>  <dbl>  <dbl>  <dbl>   <dbl>  <dbl>   <dbl>   <dbl> #>  1 DA00003 1        NA    NA     NA      0.989 NA       0.330  1.37   NA      #>  2 DA00004 1         3.41  3.38   1.69  NA      1.52   NA      0.841   0.582  #>  3 DA00005 1         5.01  5.05   0.128  0.401 -0.933  -0.584  0.0265  1.16   #>  4 DA00006 1         6.83  1.18  -1.74  -0.156  1.53   -0.721  0.620   0.527  #>  5 DA00007 1        NA    NA      3.96   0.682  3.14    2.62   1.47    2.25   #>  6 DA00008 1         2.78  0.812 -0.552  0.982 -0.101  -0.304  0.376  -0.826  #>  7 DA00010 1         1.83  1.21  -0.912 -1.04  -0.0918 -0.304  1.69    0.0920 #>  8 DA00011 1         3.48  4.96   3.50  -0.338  4.48    1.26   2.18    1.62   #>  9 DA00012 1         4.31  0.710 -1.44  -0.218 -0.469  -0.361 -0.0714 -1.30   #> 10 DA00013 1         1.31  2.52   1.11   0.997  4.56   -1.35   0.833   2.33   #> # ℹ 66 more rows #> # ℹ 92 more variables: ACTA2 <dbl>, ACTN4 <dbl>, ACY1 <dbl>, ADA <dbl>, #> #   ADA2 <dbl>, ADAM15 <dbl>, ADAM23 <dbl>, ADAM8 <dbl>, ADAMTS13 <dbl>, #> #   ADAMTS15 <dbl>, ADAMTS16 <dbl>, ADAMTS8 <dbl>, ADCYAP1R1 <dbl>, #> #   ADGRE2 <dbl>, ADGRE5 <dbl>, ADGRG1 <dbl>, ADGRG2 <dbl>, ADH4 <dbl>, #> #   ADM <dbl>, AGER <dbl>, AGR2 <dbl>, AGR3 <dbl>, AGRN <dbl>, AGRP <dbl>, #> #   AGXT <dbl>, AHCY <dbl>, AHSP <dbl>, AIF1 <dbl>, AIFM1 <dbl>, AK1 <dbl>, … #>  #> $test_data #> # A tibble: 147 × 102 #>    DAid   Disease AARSD1  ABL1  ACAA1    ACAN  ACE2   ACOX1   ACP5    ACP6 ACTA2 #>    <chr>  <fct>    <dbl> <dbl>  <dbl>   <dbl> <dbl>   <dbl>  <dbl>   <dbl> <dbl> #>  1 DA000… 1        3.39  2.76   1.71   0.0333 1.76  -0.919   1.54   2.15   2.81  #>  2 DA000… 1        1.42  1.25  -0.816 -0.459  0.826 -0.902   0.647  1.30   0.798 #>  3 DA000… 1        4.39  3.34  -0.452 -0.868  0.395  1.71    1.49  -0.0285 0.200 #>  4 DA000… 1        3.31  1.90  NA     -0.926  0.408  0.687   1.03   0.612  2.19  #>  5 DA000… 1        1.46  0.832 -2.73  -0.371  2.27   0.0234  0.144  0.826  1.98  #>  6 DA000… 1        2.62  2.48   0.537 -0.215  1.82   0.290   1.27   1.11   0.206 #>  7 DA000… 1        2.47  2.16  -0.486 NA      0.386 NA       1.38   0.536  1.86  #>  8 DA000… 1        3.62  3.06  -1.34   0.965  1.05   1.53    0.152 -0.124  2.81  #>  9 DA000… 1        4.39  3.31   0.454  0.290  2.68   0.116  -1.32   0.945  2.14  #> 10 DA000… 1        0.964 2.94   1.55   1.67   2.50   0.164   1.83   1.46   3.03  #> # ℹ 137 more rows #> # ℹ 91 more variables: ACTN4 <dbl>, ACY1 <dbl>, ADA <dbl>, ADA2 <dbl>, #> #   ADAM15 <dbl>, ADAM23 <dbl>, ADAM8 <dbl>, ADAMTS13 <dbl>, ADAMTS15 <dbl>, #> #   ADAMTS16 <dbl>, ADAMTS8 <dbl>, ADCYAP1R1 <dbl>, ADGRE2 <dbl>, ADGRE5 <dbl>, #> #   ADGRG1 <dbl>, ADGRG2 <dbl>, ADH4 <dbl>, ADM <dbl>, AGER <dbl>, AGR2 <dbl>, #> #   AGR3 <dbl>, AGRN <dbl>, AGRP <dbl>, AGXT <dbl>, AHCY <dbl>, AHSP <dbl>, #> #   AIF1 <dbl>, AIFM1 <dbl>, AK1 <dbl>, AKR1B1 <dbl>, AKR1C4 <dbl>, … #>  #> $model_type #> [1] \"binary_class\" #>  #> $final_workflow #> ══ Workflow ════════════════════════════════════════════════════════════════════ #> Preprocessor: Recipe #> Model: logistic_reg() #>  #> ── Preprocessor ──────────────────────────────────────────────────────────────── #> 5 Recipe Steps #>  #> • step_dummy() #> • step_nzv() #> • step_normalize() #> • step_corr() #> • step_impute_knn() #>  #> ── Model ─────────────────────────────────────────────────────────────────────── #> Logistic Regression Model Specification (classification) #>  #> Main Arguments: #>   penalty = 0.225833639858074 #>   mixture = 0.282826104864944 #>  #> Computational engine: glmnet  #>  #>  #> $metrics #> $metrics$accuracy #> [1] 0.9047619 #>  #> $metrics$sensitivity #> [1] 0.9166667 #>  #> $metrics$specificity #> [1] 0.9037037 #>  #> $metrics$auc #> [1] 0.958642 #>  #> $metrics$confusion_matrix #>           Truth #> Prediction   0   1 #>          0 122   1 #>          1  13  11 #>  #>  #> $roc_curve  #>  #> $probability_plot  #>  #> $mixture #> [1] 0.2828261 #>  #> $features #> # A tibble: 64 × 4 #>    Feature  Importance Sign  Scaled_Importance #>    <fct>         <dbl> <chr>             <dbl> #>  1 ANGPT1        1.31  NEG               1     #>  2 ADGRG1        1.02  POS               0.779 #>  3 AMY2A         0.848 POS               0.648 #>  4 ADAMTS16      0.788 NEG               0.602 #>  5 ADA           0.769 POS               0.587 #>  6 ADAM8         0.721 NEG               0.551 #>  7 AHCY          0.712 POS               0.544 #>  8 AMIGO2        0.703 NEG               0.537 #>  9 ANGPTL2       0.596 POS               0.456 #> 10 AMFR          0.509 POS               0.389 #> # ℹ 54 more rows #>  #> $var_imp_plot  #>  #> attr(,\"class\") #> [1] \"hd_model\"  # Run the multiclass regularized regression model pipeline hd_model_rreg(hd_split,               variable = \"Disease\",               case = NULL,               grid_size = 2,               cv_sets = 2,               verbose = FALSE) #> Warning: Too little data to stratify. #> • Resampling will be unstratified. #> $train_data #> # A tibble: 439 × 102 #>    DAid    Disease AARSD1   ABL1  ACAA1   ACAN    ACE2  ACOX1    ACP5    ACP6 #>    <chr>   <fct>    <dbl>  <dbl>  <dbl>  <dbl>   <dbl>  <dbl>   <dbl>   <dbl> #>  1 DA00003 AML      NA    NA     NA      0.989 NA       0.330  1.37   NA      #>  2 DA00004 AML       3.41  3.38   1.69  NA      1.52   NA      0.841   0.582  #>  3 DA00005 AML       5.01  5.05   0.128  0.401 -0.933  -0.584  0.0265  1.16   #>  4 DA00006 AML       6.83  1.18  -1.74  -0.156  1.53   -0.721  0.620   0.527  #>  5 DA00007 AML      NA    NA      3.96   0.682  3.14    2.62   1.47    2.25   #>  6 DA00008 AML       2.78  0.812 -0.552  0.982 -0.101  -0.304  0.376  -0.826  #>  7 DA00010 AML       1.83  1.21  -0.912 -1.04  -0.0918 -0.304  1.69    0.0920 #>  8 DA00011 AML       3.48  4.96   3.50  -0.338  4.48    1.26   2.18    1.62   #>  9 DA00012 AML       4.31  0.710 -1.44  -0.218 -0.469  -0.361 -0.0714 -1.30   #> 10 DA00013 AML       1.31  2.52   1.11   0.997  4.56   -1.35   0.833   2.33   #> # ℹ 429 more rows #> # ℹ 92 more variables: ACTA2 <dbl>, ACTN4 <dbl>, ACY1 <dbl>, ADA <dbl>, #> #   ADA2 <dbl>, ADAM15 <dbl>, ADAM23 <dbl>, ADAM8 <dbl>, ADAMTS13 <dbl>, #> #   ADAMTS15 <dbl>, ADAMTS16 <dbl>, ADAMTS8 <dbl>, ADCYAP1R1 <dbl>, #> #   ADGRE2 <dbl>, ADGRE5 <dbl>, ADGRG1 <dbl>, ADGRG2 <dbl>, ADH4 <dbl>, #> #   ADM <dbl>, AGER <dbl>, AGR2 <dbl>, AGR3 <dbl>, AGRN <dbl>, AGRP <dbl>, #> #   AGXT <dbl>, AHCY <dbl>, AHSP <dbl>, AIF1 <dbl>, AIFM1 <dbl>, AK1 <dbl>, … #>  #> $test_data #> # A tibble: 147 × 102 #>    DAid   Disease AARSD1  ABL1  ACAA1    ACAN  ACE2   ACOX1   ACP5    ACP6 ACTA2 #>    <chr>  <fct>    <dbl> <dbl>  <dbl>   <dbl> <dbl>   <dbl>  <dbl>   <dbl> <dbl> #>  1 DA000… AML      3.39  2.76   1.71   0.0333 1.76  -0.919   1.54   2.15   2.81  #>  2 DA000… AML      1.42  1.25  -0.816 -0.459  0.826 -0.902   0.647  1.30   0.798 #>  3 DA000… AML      4.39  3.34  -0.452 -0.868  0.395  1.71    1.49  -0.0285 0.200 #>  4 DA000… AML      3.31  1.90  NA     -0.926  0.408  0.687   1.03   0.612  2.19  #>  5 DA000… AML      1.46  0.832 -2.73  -0.371  2.27   0.0234  0.144  0.826  1.98  #>  6 DA000… AML      2.62  2.48   0.537 -0.215  1.82   0.290   1.27   1.11   0.206 #>  7 DA000… AML      2.47  2.16  -0.486 NA      0.386 NA       1.38   0.536  1.86  #>  8 DA000… AML      3.62  3.06  -1.34   0.965  1.05   1.53    0.152 -0.124  2.81  #>  9 DA000… AML      4.39  3.31   0.454  0.290  2.68   0.116  -1.32   0.945  2.14  #> 10 DA000… AML      0.964 2.94   1.55   1.67   2.50   0.164   1.83   1.46   3.03  #> # ℹ 137 more rows #> # ℹ 91 more variables: ACTN4 <dbl>, ACY1 <dbl>, ADA <dbl>, ADA2 <dbl>, #> #   ADAM15 <dbl>, ADAM23 <dbl>, ADAM8 <dbl>, ADAMTS13 <dbl>, ADAMTS15 <dbl>, #> #   ADAMTS16 <dbl>, ADAMTS8 <dbl>, ADCYAP1R1 <dbl>, ADGRE2 <dbl>, ADGRE5 <dbl>, #> #   ADGRG1 <dbl>, ADGRG2 <dbl>, ADH4 <dbl>, ADM <dbl>, AGER <dbl>, AGR2 <dbl>, #> #   AGR3 <dbl>, AGRN <dbl>, AGRP <dbl>, AGXT <dbl>, AHCY <dbl>, AHSP <dbl>, #> #   AIF1 <dbl>, AIFM1 <dbl>, AK1 <dbl>, AKR1B1 <dbl>, AKR1C4 <dbl>, … #>  #> $model_type #> [1] \"multi_class\" #>  #> $final_workflow #> ══ Workflow ════════════════════════════════════════════════════════════════════ #> Preprocessor: Recipe #> Model: multinom_reg() #>  #> ── Preprocessor ──────────────────────────────────────────────────────────────── #> 5 Recipe Steps #>  #> • step_dummy() #> • step_nzv() #> • step_normalize() #> • step_corr() #> • step_impute_knn() #>  #> ── Model ─────────────────────────────────────────────────────────────────────── #> Multinomial Regression Model Specification (classification) #>  #> Main Arguments: #>   penalty = 4.45590449619826e-06 #>   mixture = 0.179142067208886 #>  #> Computational engine: glmnet  #>  #>  #> $metrics #> $metrics$accuracy #> [1] 0.3673469 #>  #> $metrics$sensitivity #> [1] 0.3872563 #>  #> $metrics$specificity #> [1] 0.942447 #>  #> $metrics$auc #> # A tibble: 14 × 2 #>    Disease   AUC #>    <chr>   <dbl> #>  1 AML     0.907 #>  2 BRC     0.773 #>  3 CLL     0.979 #>  4 CRC     0.904 #>  5 CVX     0.752 #>  6 ENDC    0.776 #>  7 GLIOM   0.778 #>  8 LUNGC   0.692 #>  9 LYMPH   0.713 #> 10 MYEL    0.966 #> 11 OVC     0.759 #> 12 PRC     0.733 #> 13 macro   0.811 #> 14 micro   0.806 #>  #> $metrics$confusion_matrix #>           Truth #> Prediction AML BRC CLL CRC CVX ENDC GLIOM LUNGC LYMPH MYEL OVC PRC #>      AML     8   0   0   0   0    0     1     0     2    0   1   0 #>      BRC     0   1   0   0   0    0     0     1     1    0   0   1 #>      CLL     0   1   7   0   0    0     0     0     1    0   0   0 #>      CRC     0   1   0   8   0    0     0     3     0    0   1   0 #>      CVX     0   2   1   0   4    4     0     1     2    0   2   3 #>      ENDC    0   0   0   0   4    3     1     1     0    1   2   2 #>      GLIOM   0   2   0   0   0    0     6     0     1    1   0   1 #>      LUNGC   1   2   0   4   0    1     1     1     1    0   4   2 #>      LYMPH   2   2   0   0   0    0     0     2     4    0   0   0 #>      MYEL    1   0   0   0   2    1     2     0     1    5   0   0 #>      OVC     0   0   0   1   1    1     2     2     2    0   3   1 #>      PRC     0   1   1   2   3    0     1     0     1    0   0   4 #>  #>  #> $roc_curve  #>  #> $probability_plot  #>  #> $mixture #> [1] 0.1791421 #>  #> $features #> # A tibble: 97 × 4 #>    Feature  Importance Sign  Scaled_Importance #>    <fct>         <dbl> <chr>             <dbl> #>  1 AHCY           2.78 POS               1     #>  2 ANGPT1         2.50 NEG               0.899 #>  3 AK1            1.96 NEG               0.704 #>  4 APEX1          1.88 POS               0.675 #>  5 ADAM8          1.87 NEG               0.672 #>  6 ARTN           1.70 POS               0.611 #>  7 ARID4B         1.56 NEG               0.560 #>  8 ADAMTS16       1.41 NEG               0.507 #>  9 ALPP           1.35 NEG               0.485 #> 10 ADGRG1         1.28 POS               0.459 #> # ℹ 87 more rows #>  #> $var_imp_plot  #>  #> attr(,\"class\") #> [1] \"hd_model\""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_na_search.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary of missing values — hd_na_search","title":"Summary of missing values — hd_na_search","text":"hd_na_search() provides summary missing values dataset. allows user specify metadata columns include summary color palette use heatmap annotations.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_na_search.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary of missing values — hd_na_search","text":"","code":"hd_na_search(   dat,   metadata = NULL,   annotation_vars = NULL,   palette = NULL,   x_labels = FALSE,   y_labels = FALSE )"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_na_search.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary of missing values — hd_na_search","text":"dat HDAnalyzeR object dataset wide format sample_id first column. metadata dataset containing metadata information sample ID first column. HDAnalyzeR object provided, parameter needed. annotation_vars metadata columns include summary. palette color palettes use heatmap annotations (check examples bellow). x_labels TRUE, show x-axis labels. Default FALSE. y_labels TRUE, show y-axis labels. Default FALSE.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_na_search.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary of missing values — hd_na_search","text":"list containing summary missing values heatmap.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_na_search.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summary of missing values — hd_na_search","text":"using continuous metadata variables, automatically binned categories 5 bins make heatmap informative easier interpret. Also, coloring annotations, user can use custom palettes Human Protein Atlas (HPA) palettes. required provide palette annotations, palette provided, must correct format (check examples bellow).","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_na_search.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary of missing values — hd_na_search","text":"","code":"# Create the HDAnalyzeR object providing the data and metadata hd_object <- hd_initialize(example_data, example_metadata)  # Use custom palettes for coloring annotations palette = list(Sex = c(M = \"blue\", F = \"pink\")) na_res <- hd_na_search(hd_object,                        annotation_vars = c(\"Age\", \"Sex\"),                        palette = palette)  # Use HPA palettes for coloring annotations palette = list(Disease = hd_palettes()$cancers12, Sex = hd_palettes()$sex) na_res <- hd_na_search(hd_object,                        annotation_vars = c(\"Disease\", \"Sex\"),                        palette = palette)"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_normalize.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalize data and remove batch effects — hd_normalize","title":"Normalize data and remove batch effects — hd_normalize","text":"hd_normalize() normalizes data scaling removing batch effects. first converts data wide format already. removes batch effects scales centers data. remove batch effects, uses remove_batch_effects(), utilizes limma package. scaling, uses scale() base R.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_normalize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalize data and remove batch effects — hd_normalize","text":"","code":"hd_normalize(   dat,   metadata = NULL,   center = TRUE,   scale = TRUE,   batch = NULL,   batch2 = NULL )"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_normalize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalize data and remove batch effects — hd_normalize","text":"dat HDAnalyzeR object dataset wide format sample_id first column. metadata dataset containing metadata information. HDAnalyzeR object provided, parameter needed. center logical value indicating whether center data. Default TRUE. scale logical value indicating whether scale data. Default TRUE. batch metadata column containing batch information. order correct batch effects, parameter provided. Default NULL. batch2 metadata column containing second batch information available. Default NULL.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_normalize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalize data and remove batch effects — hd_normalize","text":"normalized dataset.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_normalize.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Normalize data and remove batch effects — hd_normalize","text":"can read scaling centering methods documentation scale() function base package, well method removing batch effects documentation removeBatchEffect() function limma package.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_normalize.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Normalize data and remove batch effects — hd_normalize","text":"","code":"# Create the HDAnalyzeR object providing the data and metadata hd_object <- hd_initialize(example_data, example_metadata)  # Center data hd_normalize(hd_object, center = TRUE, scale = FALSE) #> $data #> # A tibble: 586 × 101 #>    DAid    AARSD1   ABL1  ACAA1   ACAN   ACE2  ACOX1    ACP5    ACP6   ACTA2 #>    <chr>    <dbl>  <dbl>  <dbl>  <dbl>  <dbl>  <dbl>   <dbl>   <dbl>   <dbl> #>  1 DA00001  0.259  0.949  0.697 -0.532  0.827 -1.42   0.612   1.02    1.20   #>  2 DA00002 -1.71  -0.563 -1.83  -1.02  -0.102 -1.40  -0.278   0.168  -0.813  #>  3 DA00003 NA     NA     NA      0.424 NA     -0.167  0.447  NA      NA      #>  4 DA00004  0.278  1.57   0.683 NA      0.593 NA     -0.0839 -0.551   0.0892 #>  5 DA00005  1.88   3.24  -0.882 -0.165 -1.86  -1.08  -0.898   0.0236  1.12   #>  6 DA00006  3.70  -0.628 -2.75  -0.721  0.600 -1.22  -0.305  -0.606  -0.840  #>  7 DA00007 NA     NA      2.95   0.117  2.21   2.12   0.548   1.12    0.398  #>  8 DA00008 -0.351 -0.998 -1.56   0.416 -1.03  -0.800 -0.549  -1.96   -0.0901 #>  9 DA00009  1.26   1.53  -1.46  -1.43  -0.533  1.21   0.562  -1.16   -1.41   #> 10 DA00010 -1.30  -0.596 -1.92  -1.60  -1.02  -0.801  0.765  -1.04    0.427  #> # ℹ 576 more rows #> # ℹ 91 more variables: ACTN4 <dbl>, ACY1 <dbl>, ADA <dbl>, ADA2 <dbl>, #> #   ADAM15 <dbl>, ADAM23 <dbl>, ADAM8 <dbl>, ADAMTS13 <dbl>, ADAMTS15 <dbl>, #> #   ADAMTS16 <dbl>, ADAMTS8 <dbl>, ADCYAP1R1 <dbl>, ADGRE2 <dbl>, ADGRE5 <dbl>, #> #   ADGRG1 <dbl>, ADGRG2 <dbl>, ADH4 <dbl>, ADM <dbl>, AGER <dbl>, AGR2 <dbl>, #> #   AGR3 <dbl>, AGRN <dbl>, AGRP <dbl>, AGXT <dbl>, AHCY <dbl>, AHSP <dbl>, #> #   AIF1 <dbl>, AIFM1 <dbl>, AK1 <dbl>, AKR1B1 <dbl>, AKR1C4 <dbl>, … #>  #> $metadata #> # A tibble: 586 × 9 #>    DAid    Sample     Disease Stage   Grade Sex     Age   BMI Cohort #>    <chr>   <chr>      <chr>   <chr>   <chr> <chr> <dbl> <dbl> <chr>  #>  1 DA00001 AML_syn_1  AML     2       NA    F        42  22.7 UCAN   #>  2 DA00002 AML_syn_2  AML     Unknown NA    M        69  33.1 UCAN   #>  3 DA00003 AML_syn_3  AML     2       NA    F        61  26.2 UCAN   #>  4 DA00004 AML_syn_4  AML     Unknown NA    M        54  28.1 UCAN   #>  5 DA00005 AML_syn_5  AML     2       NA    F        57  21.4 UCAN   #>  6 DA00006 AML_syn_6  AML     Unknown NA    M        86  33.9 UCAN   #>  7 DA00007 AML_syn_7  AML     1       NA    F        85  28.7 UCAN   #>  8 DA00008 AML_syn_8  AML     3       NA    F        88  32.6 UCAN   #>  9 DA00009 AML_syn_9  AML     Unknown NA    M        80  26.1 UCAN   #> 10 DA00010 AML_syn_10 AML     3       NA    M        48  33.8 UCAN   #> # ℹ 576 more rows #>  #> $sample_id #> [1] \"DAid\" #>  #> $var_name #> [1] \"Assay\" #>  #> $value_name #> [1] \"NPX\" #>  #> attr(,\"class\") #> [1] \"HDAnalyzeR\"  # Center and scale data (z-score scaling) hd_normalize(hd_object, center = TRUE, scale = TRUE) #> $data #> # A tibble: 586 × 101 #>    DAid    AARSD1   ABL1  ACAA1   ACAN    ACE2  ACOX1   ACP5    ACP6   ACTA2 #>    <chr>    <dbl>  <dbl>  <dbl>  <dbl>   <dbl>  <dbl>  <dbl>   <dbl>   <dbl> #>  1 DA00001  0.240  0.685  0.498 -0.753  0.722  -1.39   0.800  0.991   1.16   #>  2 DA00002 -1.58  -0.406 -1.30  -1.45  -0.0885 -1.37  -0.364  0.163  -0.786  #>  3 DA00003 NA     NA     NA      0.600 NA      -0.163  0.584 NA      NA      #>  4 DA00004  0.257  1.14   0.488 NA      0.517  NA     -0.110 -0.536   0.0862 #>  5 DA00005  1.74   2.34  -0.629 -0.233 -1.62   -1.06  -1.18   0.0230  1.08   #>  6 DA00006  3.42  -0.453 -1.96  -1.02   0.523  -1.19  -0.399 -0.590  -0.812  #>  7 DA00007 NA     NA      2.11   0.165  1.93    2.08   0.717  1.09    0.385  #>  8 DA00008 -0.325 -0.721 -1.12   0.589 -0.898  -0.783 -0.719 -1.90   -0.0871 #>  9 DA00009  1.17   1.11  -1.04  -2.03  -0.464   1.18   0.735 -1.13   -1.36   #> 10 DA00010 -1.20  -0.431 -1.37  -2.27  -0.889  -0.784  1.00  -1.01    0.413  #> # ℹ 576 more rows #> # ℹ 91 more variables: ACTN4 <dbl>, ACY1 <dbl>, ADA <dbl>, ADA2 <dbl>, #> #   ADAM15 <dbl>, ADAM23 <dbl>, ADAM8 <dbl>, ADAMTS13 <dbl>, ADAMTS15 <dbl>, #> #   ADAMTS16 <dbl>, ADAMTS8 <dbl>, ADCYAP1R1 <dbl>, ADGRE2 <dbl>, ADGRE5 <dbl>, #> #   ADGRG1 <dbl>, ADGRG2 <dbl>, ADH4 <dbl>, ADM <dbl>, AGER <dbl>, AGR2 <dbl>, #> #   AGR3 <dbl>, AGRN <dbl>, AGRP <dbl>, AGXT <dbl>, AHCY <dbl>, AHSP <dbl>, #> #   AIF1 <dbl>, AIFM1 <dbl>, AK1 <dbl>, AKR1B1 <dbl>, AKR1C4 <dbl>, … #>  #> $metadata #> # A tibble: 586 × 9 #>    DAid    Sample     Disease Stage   Grade Sex     Age   BMI Cohort #>    <chr>   <chr>      <chr>   <chr>   <chr> <chr> <dbl> <dbl> <chr>  #>  1 DA00001 AML_syn_1  AML     2       NA    F        42  22.7 UCAN   #>  2 DA00002 AML_syn_2  AML     Unknown NA    M        69  33.1 UCAN   #>  3 DA00003 AML_syn_3  AML     2       NA    F        61  26.2 UCAN   #>  4 DA00004 AML_syn_4  AML     Unknown NA    M        54  28.1 UCAN   #>  5 DA00005 AML_syn_5  AML     2       NA    F        57  21.4 UCAN   #>  6 DA00006 AML_syn_6  AML     Unknown NA    M        86  33.9 UCAN   #>  7 DA00007 AML_syn_7  AML     1       NA    F        85  28.7 UCAN   #>  8 DA00008 AML_syn_8  AML     3       NA    F        88  32.6 UCAN   #>  9 DA00009 AML_syn_9  AML     Unknown NA    M        80  26.1 UCAN   #> 10 DA00010 AML_syn_10 AML     3       NA    M        48  33.8 UCAN   #> # ℹ 576 more rows #>  #> $sample_id #> [1] \"DAid\" #>  #> $var_name #> [1] \"Assay\" #>  #> $value_name #> [1] \"NPX\" #>  #> attr(,\"class\") #> [1] \"HDAnalyzeR\"  # Center, scale and remove batch effects hd_normalize(hd_object, batch = \"Cohort\") #> $data #> # A tibble: 586 × 101 #>    DAid   AARSD1   ABL1  ACAA1   ACAN   ACE2  ACOX1   ACP5    ACP6  ACTA2  ACTN4 #>    <chr>   <dbl>  <dbl>  <dbl>  <dbl>  <dbl>  <dbl>  <dbl>   <dbl>  <dbl>  <dbl> #>  1 DA000…  0.104  0.476  0.391 -0.779  0.544 -1.46   0.701  0.915   0.985  0.516 #>  2 DA000… -1.74  -0.656 -1.43  -1.48  -0.286 -1.44  -0.471  0.0838 -1.02  -0.761 #>  3 DA000… NA     NA     NA      0.574 NA     -0.232  0.484 NA      NA     NA     #>  4 DA000…  0.121  0.944  0.380 NA      0.335 NA     -0.215 -0.618  -0.122 -0.486 #>  5 DA000…  1.62   2.20  -0.746 -0.259 -1.86  -1.13  -1.29  -0.0569  0.903 -0.103 #>  6 DA000…  3.32  -0.705 -2.09  -1.05   0.341 -1.26  -0.507 -0.672  -1.05  NA     #>  7 DA000… NA     NA      2.02   0.140  1.78   2.01   0.618  1.01    0.186 -0.388 #>  8 DA000… -0.468 -0.983 -1.24   0.563 -1.12  -0.854 -0.828 -1.99   -0.300 -1.60  #>  9 DA000…  1.04   0.915 -1.16  -2.05  -0.671  1.12   0.636 -1.21   -1.61  -1.50  #> 10 DA000… -1.36  -0.681 -1.49  -2.30  -1.11  -0.855  0.903 -1.10    0.214  0.136 #> # ℹ 576 more rows #> # ℹ 90 more variables: ACY1 <dbl>, ADA <dbl>, ADA2 <dbl>, ADAM15 <dbl>, #> #   ADAM23 <dbl>, ADAM8 <dbl>, ADAMTS13 <dbl>, ADAMTS15 <dbl>, ADAMTS16 <dbl>, #> #   ADAMTS8 <dbl>, ADCYAP1R1 <dbl>, ADGRE2 <dbl>, ADGRE5 <dbl>, ADGRG1 <dbl>, #> #   ADGRG2 <dbl>, ADH4 <dbl>, ADM <dbl>, AGER <dbl>, AGR2 <dbl>, AGR3 <dbl>, #> #   AGRN <dbl>, AGRP <dbl>, AGXT <dbl>, AHCY <dbl>, AHSP <dbl>, AIF1 <dbl>, #> #   AIFM1 <dbl>, AK1 <dbl>, AKR1B1 <dbl>, AKR1C4 <dbl>, AKT1S1 <dbl>, … #>  #> $metadata #> # A tibble: 586 × 9 #>    DAid    Sample     Disease Stage   Grade Sex     Age   BMI Cohort #>    <chr>   <chr>      <chr>   <chr>   <chr> <chr> <dbl> <dbl> <chr>  #>  1 DA00001 AML_syn_1  AML     2       NA    F        42  22.7 UCAN   #>  2 DA00002 AML_syn_2  AML     Unknown NA    M        69  33.1 UCAN   #>  3 DA00003 AML_syn_3  AML     2       NA    F        61  26.2 UCAN   #>  4 DA00004 AML_syn_4  AML     Unknown NA    M        54  28.1 UCAN   #>  5 DA00005 AML_syn_5  AML     2       NA    F        57  21.4 UCAN   #>  6 DA00006 AML_syn_6  AML     Unknown NA    M        86  33.9 UCAN   #>  7 DA00007 AML_syn_7  AML     1       NA    F        85  28.7 UCAN   #>  8 DA00008 AML_syn_8  AML     3       NA    F        88  32.6 UCAN   #>  9 DA00009 AML_syn_9  AML     Unknown NA    M        80  26.1 UCAN   #> 10 DA00010 AML_syn_10 AML     3       NA    M        48  33.8 UCAN   #> # ℹ 576 more rows #>  #> $sample_id #> [1] \"DAid\" #>  #> $var_name #> [1] \"Assay\" #>  #> $value_name #> [1] \"NPX\" #>  #> attr(,\"class\") #> [1] \"HDAnalyzeR\""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_omit_na.html","id":null,"dir":"Reference","previous_headings":"","what":"Omit missing values — hd_omit_na","title":"Omit missing values — hd_omit_na","text":"hd_omit_na() removes rows missing values dataset. allows user specify columns consider removal missing values. columns provided, function removes rows missing values column.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_omit_na.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Omit missing values — hd_omit_na","text":"","code":"hd_omit_na(dat, columns = NULL)"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_omit_na.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Omit missing values — hd_omit_na","text":"dat HDAnalyzeR object dataset wide format sample_id first column. columns columns consider removal missing values.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_omit_na.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Omit missing values — hd_omit_na","text":"dataset without missing values.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_omit_na.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Omit missing values — hd_omit_na","text":"","code":"# Create the HDAnalyzeR object providing the data and metadata hd_object <- hd_initialize(example_data, example_metadata) hd_object$data #> # A tibble: 586 × 101 #>    DAid    AARSD1   ABL1  ACAA1    ACAN    ACE2  ACOX1   ACP5    ACP6  ACTA2 #>    <chr>    <dbl>  <dbl>  <dbl>   <dbl>   <dbl>  <dbl>  <dbl>   <dbl>  <dbl> #>  1 DA00001   3.39  2.76   1.71   0.0333  1.76   -0.919 1.54    2.15    2.81  #>  2 DA00002   1.42  1.25  -0.816 -0.459   0.826  -0.902 0.647   1.30    0.798 #>  3 DA00003  NA    NA     NA      0.989  NA       0.330 1.37   NA      NA     #>  4 DA00004   3.41  3.38   1.69  NA       1.52   NA     0.841   0.582   1.70  #>  5 DA00005   5.01  5.05   0.128  0.401  -0.933  -0.584 0.0265  1.16    2.73  #>  6 DA00006   6.83  1.18  -1.74  -0.156   1.53   -0.721 0.620   0.527   0.772 #>  7 DA00007  NA    NA      3.96   0.682   3.14    2.62  1.47    2.25    2.01  #>  8 DA00008   2.78  0.812 -0.552  0.982  -0.101  -0.304 0.376  -0.826   1.52  #>  9 DA00009   4.39  3.34  -0.452 -0.868   0.395   1.71  1.49   -0.0285  0.200 #> 10 DA00010   1.83  1.21  -0.912 -1.04   -0.0918 -0.304 1.69    0.0920  2.04  #> # ℹ 576 more rows #> # ℹ 91 more variables: ACTN4 <dbl>, ACY1 <dbl>, ADA <dbl>, ADA2 <dbl>, #> #   ADAM15 <dbl>, ADAM23 <dbl>, ADAM8 <dbl>, ADAMTS13 <dbl>, ADAMTS15 <dbl>, #> #   ADAMTS16 <dbl>, ADAMTS8 <dbl>, ADCYAP1R1 <dbl>, ADGRE2 <dbl>, ADGRE5 <dbl>, #> #   ADGRG1 <dbl>, ADGRG2 <dbl>, ADH4 <dbl>, ADM <dbl>, AGER <dbl>, AGR2 <dbl>, #> #   AGR3 <dbl>, AGRN <dbl>, AGRP <dbl>, AGXT <dbl>, AHCY <dbl>, AHSP <dbl>, #> #   AIF1 <dbl>, AIFM1 <dbl>, AK1 <dbl>, AKR1B1 <dbl>, AKR1C4 <dbl>, …  # Data after removing missing values res <- hd_omit_na(hd_object) res$data #> # A tibble: 442 × 101 #>    DAid    AARSD1  ABL1  ACAA1    ACAN    ACE2  ACOX1    ACP5    ACP6 ACTA2 #>    <chr>    <dbl> <dbl>  <dbl>   <dbl>   <dbl>  <dbl>   <dbl>   <dbl> <dbl> #>  1 DA00001   3.39 2.76   1.71   0.0333  1.76   -0.919  1.54    2.15   2.81  #>  2 DA00002   1.42 1.25  -0.816 -0.459   0.826  -0.902  0.647   1.30   0.798 #>  3 DA00005   5.01 5.05   0.128  0.401  -0.933  -0.584  0.0265  1.16   2.73  #>  4 DA00008   2.78 0.812 -0.552  0.982  -0.101  -0.304  0.376  -0.826  1.52  #>  5 DA00009   4.39 3.34  -0.452 -0.868   0.395   1.71   1.49   -0.0285 0.200 #>  6 DA00010   1.83 1.21  -0.912 -1.04   -0.0918 -0.304  1.69    0.0920 2.04  #>  7 DA00011   3.48 4.96   3.50  -0.338   4.48    1.26   2.18    1.62   1.79  #>  8 DA00012   4.31 0.710 -1.44  -0.218  -0.469  -0.361 -0.0714 -1.30   2.86  #>  9 DA00013   1.31 2.52   1.11   0.997   4.56   -1.35   0.833   2.33   3.57  #> 10 DA00014   6.34 7.25   5.12   0.0193  1.29    0.370 -0.382   0.830  3.89  #> # ℹ 432 more rows #> # ℹ 91 more variables: ACTN4 <dbl>, ACY1 <dbl>, ADA <dbl>, ADA2 <dbl>, #> #   ADAM15 <dbl>, ADAM23 <dbl>, ADAM8 <dbl>, ADAMTS13 <dbl>, ADAMTS15 <dbl>, #> #   ADAMTS16 <dbl>, ADAMTS8 <dbl>, ADCYAP1R1 <dbl>, ADGRE2 <dbl>, ADGRE5 <dbl>, #> #   ADGRG1 <dbl>, ADGRG2 <dbl>, ADH4 <dbl>, ADM <dbl>, AGER <dbl>, AGR2 <dbl>, #> #   AGR3 <dbl>, AGRN <dbl>, AGRP <dbl>, AGXT <dbl>, AHCY <dbl>, AHSP <dbl>, #> #   AIF1 <dbl>, AIFM1 <dbl>, AK1 <dbl>, AKR1B1 <dbl>, AKR1C4 <dbl>, …  # Data after removing missing values in specific columns res <- hd_omit_na(hd_object, columns = \"AARSD1\") res$data #> # A tibble: 552 × 101 #>    DAid    AARSD1  ABL1  ACAA1    ACAN    ACE2  ACOX1    ACP5    ACP6 ACTA2 #>    <chr>    <dbl> <dbl>  <dbl>   <dbl>   <dbl>  <dbl>   <dbl>   <dbl> <dbl> #>  1 DA00001   3.39 2.76   1.71   0.0333  1.76   -0.919  1.54    2.15   2.81  #>  2 DA00002   1.42 1.25  -0.816 -0.459   0.826  -0.902  0.647   1.30   0.798 #>  3 DA00004   3.41 3.38   1.69  NA       1.52   NA      0.841   0.582  1.70  #>  4 DA00005   5.01 5.05   0.128  0.401  -0.933  -0.584  0.0265  1.16   2.73  #>  5 DA00006   6.83 1.18  -1.74  -0.156   1.53   -0.721  0.620   0.527  0.772 #>  6 DA00008   2.78 0.812 -0.552  0.982  -0.101  -0.304  0.376  -0.826  1.52  #>  7 DA00009   4.39 3.34  -0.452 -0.868   0.395   1.71   1.49   -0.0285 0.200 #>  8 DA00010   1.83 1.21  -0.912 -1.04   -0.0918 -0.304  1.69    0.0920 2.04  #>  9 DA00011   3.48 4.96   3.50  -0.338   4.48    1.26   2.18    1.62   1.79  #> 10 DA00012   4.31 0.710 -1.44  -0.218  -0.469  -0.361 -0.0714 -1.30   2.86  #> # ℹ 542 more rows #> # ℹ 91 more variables: ACTN4 <dbl>, ACY1 <dbl>, ADA <dbl>, ADA2 <dbl>, #> #   ADAM15 <dbl>, ADAM23 <dbl>, ADAM8 <dbl>, ADAMTS13 <dbl>, ADAMTS15 <dbl>, #> #   ADAMTS16 <dbl>, ADAMTS8 <dbl>, ADCYAP1R1 <dbl>, ADGRE2 <dbl>, ADGRE5 <dbl>, #> #   ADGRG1 <dbl>, ADGRG2 <dbl>, ADH4 <dbl>, ADM <dbl>, AGER <dbl>, AGR2 <dbl>, #> #   AGR3 <dbl>, AGRN <dbl>, AGRP <dbl>, AGXT <dbl>, AHCY <dbl>, AHSP <dbl>, #> #   AIF1 <dbl>, AIFM1 <dbl>, AK1 <dbl>, AKR1B1 <dbl>, AKR1C4 <dbl>, …"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_ora.html","id":null,"dir":"Reference","previous_headings":"","what":"Run over-representation analysis — hd_ora","title":"Run over-representation analysis — hd_ora","text":"hd_ora() performs -representation analysis (ORA) using clusterProfiler package.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_ora.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run over-representation analysis — hd_ora","text":"","code":"hd_ora(   gene_list,   database = c(\"GO\", \"Reactome\", \"KEGG\"),   ontology = c(\"BP\", \"CC\", \"MF\", \"ALL\"),   background = NULL,   pval_lim_enrichment = 0.05 )"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_ora.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run over-representation analysis — hd_ora","text":"gene_list character vector containing gene names. can differentially expressed proteins selected protein features classification models. database database perform ORA. can either \"GO\", \"KEGG\", \"Reactome\". ontology ontology use database = \"GO\". can \"BP\" (Biological Process), \"CC\" (Cellular Component), \"MF\" (Molecular Function), \"\". case KEGG Reactome, parameter ignored. background character vector containing background genes. pval_lim_enrichment p-value threshold consider term significant enrichment analysis.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_ora.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run over-representation analysis — hd_ora","text":"list containing results ORA.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_ora.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Run over-representation analysis — hd_ora","text":"qvalueCutoff set 4 times pvalueCutoff.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_ora.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run over-representation analysis — hd_ora","text":"","code":"# Initialize an HDAnalyzeR object hd_object <- hd_initialize(example_data, example_metadata)  # Run differential expression analysis for AML vs all others de_results <- hd_de_limma(hd_object, case = \"AML\")  # Extract the up-regulated proteins for AML sig_up_proteins_aml <- de_results$de_res |>   dplyr::filter(adj.P.Val < 0.05 & logFC > 0) |>   dplyr::pull(Feature)  # Perform ORA with `GO` database and `BP` ontology hd_ora(sig_up_proteins_aml, database = \"GO\", ontology = \"BP\") #> 'select()' returned 1:1 mapping between keys and columns #> $gene_list #>  [1] \"100\"   \"566\"   \"328\"   \"54518\" \"9289\"  \"285\"   \"9048\"  \"181\"   \"51129\" #> [10] \"191\"   \"25\"    \"59\"    \"2683\"  \"51742\" \"9296\"  \"267\"   \"59272\" \"976\"   #> [19] \"199\"   \"405\"   \"30817\" \"1386\"  #>  #> $enrichment #> # #> # over-representation test #> # #> #...@organism \t Homo sapiens  #> #...@ontology \t BP  #> #...@keytype \t ENTREZID  #> #...@gene \t chr [1:22] \"100\" \"566\" \"328\" \"54518\" \"9289\" \"285\" \"9048\" \"181\" \"51129\" ... #> #...pvalues adjusted by 'BH' with cutoff <0.05  #> #...83 enriched terms found #> 'data.frame':\t83 obs. of  12 variables: #>  $ ID            : chr  \"GO:0050900\" \"GO:0050926\" \"GO:0071674\" \"GO:0045785\" ... #>  $ Description   : chr  \"leukocyte migration\" \"regulation of positive chemotaxis\" \"mononuclear cell migration\" \"positive regulation of cell adhesion\" ... #>  $ GeneRatio     : chr  \"7/22\" \"3/22\" \"5/22\" \"6/22\" ... #>  $ BgRatio       : chr  \"404/18986\" \"27/18986\" \"231/18986\" \"499/18986\" ... #>  $ RichFactor    : num  0.0173 0.1111 0.0216 0.012 0.0158 ... #>  $ FoldEnrichment: num  15 95.9 18.7 10.4 13.6 ... #>  $ zScore        : num  9.66 16.81 9.21 7.23 7.71 ... #>  $ pvalue        : num  2.43e-07 3.88e-06 5.68e-06 1.67e-05 2.62e-05 ... #>  $ p.adjust      : num  0.000285 0.002226 0.002226 0.004903 0.006166 ... #>  $ qvalue        : num  0.000173 0.001349 0.001349 0.002971 0.003737 ... #>  $ geneID        : chr  \"100/566/9048/25/2683/199/30817\" \"566/285/9048\" \"566/9048/25/2683/199\" \"100/566/54518/9289/25/199\" ... #>  $ Count         : int  7 3 5 6 5 5 3 5 5 3 ... #> #...Citation #> S Xu, E Hu, Y Cai, Z Xie, X Luo, L Zhan, W Tang, Q Wang, B Liu, R Wang, W Xie, T Wu, L Xie, G Yu. Using clusterProfiler to characterize multiomics data. Nature Protocols. 2024, doi:10.1038/s41596-024-01020-z  #>  #>  #> attr(,\"class\") #> [1] \"hd_enrichment\""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_palettes.html","id":null,"dir":"Reference","previous_headings":"","what":"HDAnalyzeR color palettes — hd_palettes","title":"HDAnalyzeR color palettes — hd_palettes","text":"hd_palettes() returns list color palettes used Human Protein Atlas (HPA) project.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_palettes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"HDAnalyzeR color palettes — hd_palettes","text":"","code":"hd_palettes()"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_palettes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"HDAnalyzeR color palettes — hd_palettes","text":"List HPA color palettes.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_palettes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"HDAnalyzeR color palettes — hd_palettes","text":"","code":"hd_palettes() #> $sex_basic #>         F         M  #> \"#C03830\" \"#317EC2\"  #>  #> $sex #>         F         M  #> \"#8a72be\" \"#A9D0EF\"  #>  #> $diff_exp #>  not significant significant down   significant up  #>           \"grey\"        \"#317EC2\"        \"#C03830\"  #>  #> $cancers12 #>       AML       CLL     LYMPH      MYEL       CRC     LUNGC     GLIOM       BRC  #> \"#A6CEE3\" \"#2271B5\" \"#08585A\" \"#66C2A5\" \"#B89B74\" \"#ADC74F\" \"#FFD321\" \"#E8A29A\"  #>       CVX      ENDC       OVC       PRC  #> \"#9E0142\" \"#B195AE\" \"#603479\" \"#E7662B\"  #>  #> $secreted #>                      Secreted to blood                      Secreted in brain  #>                              \"#B30000\"                              \"#FFDD00\"  #>           Secreted to digestive system   Secreted in male reproductive system  #>                              \"#1280C4\"                              \"#95D4F5\"  #> Secreted in female reproductive system       Secreted to extracellular matrix  #>                              \"#F8BDD7\"                              \"#7F6A9C\"  #>              Secreted in other tissues            Secreted - unknown location  #>                              \"#FFD480\"                              \"#A1A8AA\"  #>             Intracellular and membrane                                Unknown  #>                              \"#F9A266\"                               \"grey80\"  #>  #> $specificity #>        Tissue enriched         Group enriched        Tissue enhanced  #>              \"#e41a1c\"              \"#FF9D00\"              \"#984ea3\"  #> Low tissue specificity          not detected   #>               \"grey40\"                 \"grey\"  #>  #> $class #>        Healthy Cardiovascular      Metabolic         Cancer    Psychiatric  #>      \"#B3B3B3\"      \"#FC8D62\"      \"#E5C494\"      \"#8DA0CB\"      \"#66C2A5\"  #>     Autoimmune      Infection      Pediatric  #>      \"#E78AC3\"      \"#FFD92F\"      \"#A6D854\"  #>  #> $nrc #>       Cinnabar    Shakespeare   PersianGreen       Chambray        Apricot  #>      \"#E64B35\"      \"#4DBBD5\"      \"#00A087\"      \"#3C5488\"      \"#F39B7F\"  #> WildBlueYonder     MonteCarlo          Monza    RomanCoffee       Sandrift  #>      \"#8491B4\"      \"#91D1C2\"      \"#DC0000\"      \"#7E6148\"      \"#B09C85\"  #>  #> $aaas #>      Chambray           Red      FunGreen   HoneyFlower          Teal  #>     \"#3B4992\"     \"#EE0000\"     \"#008B45\"     \"#631879\"     \"#008280\"  #>         Monza ButterflyBush FreshEggplant         Stack       CodGray  #>     \"#BB0021\"     \"#5F559B\"     \"#A20056\"     \"#808180\"     \"#1B1919\"  #>  #> $nejm #>      TallPoppy   DeepCerulean           Zest     Eucalyptus WildBlueYonder  #>      \"#BC3C29\"      \"#0072B5\"      \"#E18727\"      \"#20854E\"      \"#7876B1\"  #>         Gothic        Salomie     FrenchRose  #>      \"#6F99AD\"      \"#FFDC91\"      \"#EE4C97\"  #>  #> $lancet #> CongressBlue          Red        Apple    BondiBlue   TrendyPink     MonaLisa  #>    \"#00468B\"    \"#ED0000\"    \"#42B540\"    \"#0099B4\"    \"#925E9F\"    \"#FDAF91\"  #>      Carmine       Edward      CodGray  #>    \"#AD002A\"    \"#ADB6B6\"    \"#1B1919\"  #>  #> $jama #>  Limed Spruce         Anzac      Cerulean Apple Blossom      Acapulco  #>     \"#374E55\"     \"#DF8F44\"     \"#00A1D5\"     \"#B24745\"     \"#79AF97\"  #>      Kimberly        Makara  #>     \"#6A6599\"     \"#80796B\"  #>  #> $bmj #>      Blue    Yellow      Pink    Purple    Orange     Green      Aqua       Red  #> \"#2A6EBB\" \"#F0AB00\" \"#C50084\" \"#7D5CC6\" \"#E37222\" \"#69BE28\" \"#00B2A9\" \"#CD202C\"  #>      Grey  #> \"#747678\"  #>  #> $jco #>     Lochmara         Corn         Gray ChestnutRose       Danube    RegalBlue  #>    \"#0073C2\"    \"#EFC000\"    \"#868686\"    \"#CD534C\"    \"#7AA6DC\"    \"#003C67\"  #>        Olive    MineShaft     WellRead  KashmirBlue  #>    \"#8F7700\"    \"#3B3B3B\"    \"#A73030\"    \"#4A6990\"  #>  #> $igv #>      chr1      chr2      chr3      chr4      chr5      chr6      chr7      chr8  #> \"#5050FF\" \"#CE3D32\" \"#749B58\" \"#F0E685\" \"#466983\" \"#BA6338\" \"#5DB1DD\" \"#802268\"  #>      chr9     chr10     chr11     chr12     chr13     chr14     chr15     chr16  #> \"#6BD76B\" \"#D595A7\" \"#924822\" \"#837B8D\" \"#C75127\" \"#D58F5C\" \"#7A65A5\" \"#E4AF69\"  #>     chr17     chr18     chr19     chr20     chr21     chr22      chrX      chrY  #> \"#3B1B53\" \"#CDDEB7\" \"#612A79\" \"#AE1F63\" \"#E7C76F\" \"#5A655E\" \"#CC9900\" \"#99CC00\"  #>     chrUn     chr23     chr24     chr25     chr26     chr27     chr28     chr29  #> \"#A9A9A9\" \"#CC9900\" \"#99CC00\" \"#33CC00\" \"#00CC33\" \"#00CC99\" \"#0099CC\" \"#0A47FF\"  #>     chr30     chr31     chr32     chr33     chr34     chr35     chr36     chr37  #> \"#4775FF\" \"#FFC20A\" \"#FFD147\" \"#990033\" \"#991A00\" \"#996600\" \"#809900\" \"#339900\"  #>     chr38     chr39     chr40     chr41     chr42     chr43     chr44     chr45  #> \"#00991A\" \"#009966\" \"#008099\" \"#003399\" \"#1A0099\" \"#660099\" \"#990080\" \"#D60047\"  #>     chr46     chr47     chr48  #> \"#FF1463\" \"#00D68F\" \"#14FFB1\"  #>  #> $uchicago #>     Maroon   DarkGray     Yellow LightGreen       Blue     Orange        Red  #>  \"#800000\"  \"#767676\"  \"#FFA319\"  \"#8A9045\"  \"#155F83\"  \"#C16622\"  \"#8F3931\"  #>  DarkGreen     Violet  #>  \"#58593F\"  \"#350E20\"  #>"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_pca.html","id":null,"dir":"Reference","previous_headings":"","what":"Run PCA analysis — hd_pca","title":"Run PCA analysis — hd_pca","text":"hd_pca() runs PCA analysis provided data. data contain missing values, function imputes using k-nearest neighbors algorithm (k = 5). number PCs calculated defined user. function returns tibble PCA results.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_pca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run PCA analysis — hd_pca","text":"","code":"hd_pca(dat, components = 10, by_sample = TRUE, seed = 123)"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_pca.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run PCA analysis — hd_pca","text":"dat HDAnalyzeR object dataset wide format sample_id first column. components number PCs calculated. Default 10. by_sample TRUE, points represent samples. FALSE, points represent features. Default TRUE. seed seed used PCA analysis. Default 123.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_pca.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run PCA analysis — hd_pca","text":"list PCA results, PCA loadings explained variance.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_pca.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run PCA analysis — hd_pca","text":"","code":"# Create the HDAnalyzeR object providing the data and metadata hd_object <- hd_initialize(example_data, example_metadata)  # Run the PCA analysis hd_pca(hd_object, components = 5, by_sample = TRUE, seed = 123) #> $pca_res #> # A tibble: 586 × 6 #>    DAid        PC1     PC2      PC3    PC4    PC5 #>    <fct>     <dbl>   <dbl>    <dbl>  <dbl>  <dbl> #>  1 DA00001  -3.67  -4.28   -2.34    -3.10  -2.65  #>  2 DA00002   4.11  -2.64    2.04    -0.441 -4.43  #>  3 DA00003  -3.34   4.72    1.41     0.881 -0.561 #>  4 DA00004  -4.78   0.443   1.41     0.107 -1.10  #>  5 DA00005  -4.98  -3.67    0.711   -5.70  -0.807 #>  6 DA00006   0.395  0.0572 -1.90    -7.75   0.707 #>  7 DA00007 -10.5   -2.91   -0.382   -0.841 -1.61  #>  8 DA00008   2.64  -2.01    2.75    -0.128 -0.852 #>  9 DA00009  -1.79  -0.461   2.79    -2.61  -2.71  #> 10 DA00010   3.57   0.821  -0.00756  1.50  -2.66  #> # ℹ 576 more rows #>  #> $pca_loadings #> # A tibble: 10,000 × 3 #>    terms    value component #>    <chr>    <dbl> <chr>     #>  1 AARSD1 -0.133  PC1       #>  2 ABL1   -0.198  PC1       #>  3 ACAA1  -0.163  PC1       #>  4 ACAN    0.0123 PC1       #>  5 ACE2   -0.0583 PC1       #>  6 ACOX1  -0.135  PC1       #>  7 ACP5   -0.0626 PC1       #>  8 ACP6   -0.0933 PC1       #>  9 ACTA2  -0.0751 PC1       #> 10 ACTN4  -0.0424 PC1       #> # ℹ 9,990 more rows #>  #> $pca_variance #> # A tibble: 5 × 3 #>   component percent_variance cumulative_percent_variance #>       <int>            <dbl>                       <dbl> #> 1         1            15.7                         15.7 #> 2         2             6.72                        22.4 #> 3         3             3.73                        26.2 #> 4         4             3.31                        29.5 #> 5         5             2.90                        32.4 #>  #> $by_sample #> [1] TRUE #>  #> attr(,\"class\") #> [1] \"hd_pca\"  # Run the PCA analysis by feature hd_pca(hd_object, components = 5, by_sample = FALSE, seed = 123) #> $pca_res #> # A tibble: 100 × 6 #>    Assay      PC1   PC2     PC3    PC4     PC5 #>    <fct>    <dbl> <dbl>   <dbl>  <dbl>   <dbl> #>  1 AARSD1 -39.5    6.28  0.0147 -2.84   6.05   #>  2 ABL1   -14.0   -7.20 -7.91   -5.03  -0.464  #>  3 ACAA1   -0.858 -7.96 -3.86   11.6   -1.02   #>  4 ACAN     6.40   4.48  1.87   -0.667 -1.10   #>  5 ACE2     1.22   3.49 -5.89    9.29  -1.86   #>  6 ACOX1    8.36  -7.34  1.39    1.88   0.806  #>  7 ACP5     0.214  2.36  0.0138  2.68  -0.182  #>  8 ACP6    -3.40   1.38 -0.348  -0.757 -1.98   #>  9 ACTA2  -11.3    5.26 -4.83   -1.78  -5.80   #> 10 ACTN4    9.90   1.23  0.842  -0.685 -0.0497 #> # ℹ 90 more rows #>  #> $pca_loadings #> # A tibble: 58,600 × 3 #>    terms     value component #>    <chr>     <dbl> <chr>     #>  1 DA00001 -0.0373 PC1       #>  2 DA00002 -0.0225 PC1       #>  3 DA00003 -0.0429 PC1       #>  4 DA00004 -0.0451 PC1       #>  5 DA00005 -0.0414 PC1       #>  6 DA00006 -0.0393 PC1       #>  7 DA00007 -0.0390 PC1       #>  8 DA00008 -0.0342 PC1       #>  9 DA00009 -0.0437 PC1       #> 10 DA00010 -0.0420 PC1       #> # ℹ 58,590 more rows #>  #> $pca_variance #> # A tibble: 5 × 3 #>   component percent_variance cumulative_percent_variance #>       <int>            <dbl>                       <dbl> #> 1         1            46.9                         46.9 #> 2         2             6.18                        53.1 #> 3         3             3.01                        56.1 #> 4         4             2.37                        58.5 #> 5         5             2.29                        60.8 #>  #> $by_sample #> [1] FALSE #>  #> attr(,\"class\") #> [1] \"hd_pca\""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_plot_cor_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot correlation heatmap — hd_plot_cor_heatmap","title":"Plot correlation heatmap — hd_plot_cor_heatmap","text":"hd_plot_cor_heatmap() calculates correlation matrix input dataset. creates heatmap correlation matrix. also filters feature pairs correlation values threshold returns tibble.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_plot_cor_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot correlation heatmap — hd_plot_cor_heatmap","text":"","code":"hd_plot_cor_heatmap(   x,   y = NULL,   use = \"pairwise.complete.obs\",   method = \"pearson\",   threshold = 0.8,   cluster_rows = TRUE,   cluster_cols = TRUE )"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_plot_cor_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot correlation heatmap — hd_plot_cor_heatmap","text":"x numeric vector, matrix data frame. y numeric vector, matrix data frame compatible dimensions x. Default NULL. use character string. method use computing correlations. Default \"pairwise.complete.obs\". options \"everything\", \".obs\", \" complete.obs\", \"na..complete\". method character string. correlation method use. Default \"pearson\". options \"kendall\" \"spearman\". threshold reporting protein-protein correlation threshold. Default 0.8. cluster_rows Whether cluster rows. Default TRUE. cluster_cols Whether cluster columns. Default TRUE.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_plot_cor_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot correlation heatmap — hd_plot_cor_heatmap","text":"list correlation matrix, filtered pairs correlation values, heatmap","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_plot_cor_heatmap.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot correlation heatmap — hd_plot_cor_heatmap","text":"can read method computing covariances presence missing values coefficient calculated documentation cor() function stats package.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_plot_cor_heatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot correlation heatmap — hd_plot_cor_heatmap","text":"","code":"# Prepare data dat <- example_data |>   dplyr::select(DAid, Assay, NPX) |>   tidyr::pivot_wider(names_from = \"Assay\", values_from = \"NPX\") |>   dplyr::select(-DAid)  # Correlate proteins results <- hd_plot_cor_heatmap(dat, threshold = 0.7)  # Print results results$cor_matrix[1:5, 1:5]  # Subset of the correlation matrix #>        AARSD1  ABL1 ACAA1  ACAN ACE2 #> AARSD1   1.00  0.47  0.19 -0.06 0.04 #> ABL1     0.47  1.00  0.46 -0.01 0.13 #> ACAA1    0.19  0.46  1.00  0.03 0.32 #> ACAN    -0.06 -0.01  0.03  1.00 0.07 #> ACE2     0.04  0.13  0.32  0.07 1.00  results$cor_results  # Filtered protein pairs exceeding correlation threshold #>   Protein1 Protein2 Correlation #> 1  ATP5IF1    AIFM1        0.76 #> 2    AXIN1 ARHGEF12        0.76 #> 3    AIFM1  ATP5IF1        0.76 #> 4 ARHGEF12    AXIN1        0.76 #> 5 ARHGEF12    AIFM1        0.71 #> 6    AIFM1 ARHGEF12        0.71  results$cor_heatmap  # Heatmap of protein-protein correlations"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_plot_de_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot summary visualizations for the differential expression results — hd_plot_de_summary","title":"Plot summary visualizations for the differential expression results — hd_plot_de_summary","text":"hd_plot_de_summary() creates summary visualizations differential expression results. plots barplot number significant proteins disease. also creates upset plots significant regulated proteins disease.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_plot_de_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot summary visualizations for the differential expression results — hd_plot_de_summary","text":"","code":"hd_plot_de_summary(   de_results,   variable = \"Disease\",   class_palette = NULL,   diff_exp_palette = \"diff_exp\",   pval_lim = 0.05,   logfc_lim = 0 )"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_plot_de_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot summary visualizations for the differential expression results — hd_plot_de_summary","text":"de_results list differential expression results. list objects created hd_de_limma() classes names. See examples details. variable name column containing case control groups. class_palette color palette classes. character, one palettes hd_palettes(). Default NULL. diff_exp_palette color palette differential expression. character, one palettes hd_palettes(). Default \"diff_exp\". pval_lim p-value limit significance. Default 0.05. logfc_lim logFC limit significance. Default 0.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_plot_de_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot summary visualizations for the differential expression results — hd_plot_de_summary","text":"list DE summary plots results","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_plot_de_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot summary visualizations for the differential expression results — hd_plot_de_summary","text":"","code":"# Initialize an HDAnalyzeR object hd_object <- hd_initialize(example_data, example_metadata)  # Run differential expression analysis for AML vs all others de_results_aml <- hd_de_limma(hd_object, case = \"AML\", control) de_results_lungc <- hd_de_limma(hd_object, case = \"LUNGC\") de_results_cll <- hd_de_limma(hd_object, case = \"CLL\") de_results_myel <- hd_de_limma(hd_object, case = \"MYEL\") de_results_gliom <- hd_de_limma(hd_object, case = \"GLIOM\")  res <- list(\"AML\" = de_results_aml,             \"LUNGC\" = de_results_lungc,             \"CLL\" = de_results_cll,             \"MYEL\" = de_results_myel,             \"GLIOM\" = de_results_gliom)  # Plot summary visualizations hd_plot_de_summary(res, class_palette = \"cancers12\") #> $de_barplot  #>  #> $upset_plot_up  #>  #> $upset_plot_down  #>  #> $proteins_df_up #> # A tibble: 65 × 3 #>    Shared_in      `up/down` Feature #>    <chr>          <chr>     <chr>   #>  1 CLL            up        AARSD1  #>  2 AML&CLL&MYEL   up        ABL1    #>  3 CLL            up        ACAN    #>  4 AML&MYEL&GLIOM up        ACE2    #>  5 MYEL           up        ACOX1   #>  6 GLIOM          up        ACP5    #>  7 CLL&MYEL       up        ACP6    #>  8 AML&MYEL       up        ACTA2   #>  9 GLIOM          up        ACY1    #> 10 AML            up        ADA     #> # ℹ 55 more rows #>  #> $proteins_df_down #> # A tibble: 29 × 3 #>    Shared_in   `up/down` Feature  #>    <chr>       <chr>     <chr>    #>  1 AML         up        ACAN     #>  2 GLIOM       up        ADAM15   #>  3 GLIOM       up        ADAM23   #>  4 GLIOM       up        ADAM8    #>  5 AML         up        ADAMTS13 #>  6 GLIOM       up        ADAMTS15 #>  7 AML         up        ADAMTS16 #>  8 GLIOM       up        ADAMTS8  #>  9 GLIOM       up        ADGRE2   #> 10 LUNGC&GLIOM up        ADGRE5   #> # ℹ 19 more rows #>  #> $proteins_list_up #> $proteins_list_up$AML #>  [1] \"ADA\"     \"AZU1\"    \"APEX1\"   \"APBB1IP\" \"ADGRG1\"  \"ANGPT2\"  \"ARTN\"    #>  [8] \"AGRP\"    \"ANGPTL4\" \"AHCY\"    \"ABL1\"    \"ACTA2\"   \"B4GALT1\" \"ARID4B\"  #> [15] \"ATP6V1F\" \"AMFR\"    \"ACE2\"    \"ADGRE5\"  \"AIF1\"    \"ARNT\"    \"ADGRE2\"  #> [22] \"ATF2\"    #>  #> $proteins_list_up$`AML&GLIOM` #> [1] \"AZU1\" \"ACE2\" #>  #> $proteins_list_up$`AML&CLL` #> [1] \"APEX1\"   \"APBB1IP\" \"ABL1\"    \"B4GALT1\" \"ARID4B\"  \"AMFR\"    \"ADGRE5\"  #> [8] \"ADGRE2\"  \"ATF2\"    #>  #> $proteins_list_up$`AML&CLL&MYEL` #> [1] \"APBB1IP\" \"ABL1\"    #>  #> $proteins_list_up$`AML&MYEL` #> [1] \"APBB1IP\" \"ADGRG1\"  \"ARTN\"    \"AGRP\"    \"ANGPTL4\" \"AHCY\"    \"ABL1\"    #> [8] \"ACTA2\"   \"ACE2\"    #>  #> $proteins_list_up$`AML&LUNGC&MYEL` #> [1] \"AHCY\" #>  #> $proteins_list_up$`AML&MYEL&GLIOM` #> [1] \"ACE2\" #>  #> $proteins_list_up$`LUNGC&MYEL` #> [1] \"AGR2\" \"AHCY\" #>  #> $proteins_list_up$LUNGC #> [1] \"AGR2\" \"ALPP\" \"AHCY\" #>  #> $proteins_list_up$CLL #>  [1] \"APEX1\"    \"ARID4B\"   \"ADAM8\"    \"ARHGAP25\" \"APBB1IP\"  \"AMFR\"     #>  [7] \"B4GALT1\"  \"ABL1\"     \"ALCAM\"    \"AARSD1\"   \"ADGRE2\"   \"ATF2\"     #> [13] \"ADA2\"     \"ADGRE5\"   \"ADAMTS8\"  \"ACP6\"     \"ACAN\"     \"ADAM15\"   #> [19] \"ATXN10\"   #>  #> $proteins_list_up$`CLL&MYEL` #> [1] \"APBB1IP\" \"ABL1\"    \"ADA2\"    \"ACP6\"    #>  #> $proteins_list_up$MYEL #>  [1] \"ARTN\"     \"ADAMTS15\" \"ACTA2\"    \"AREG\"     \"ADA2\"     \"ARSA\"     #>  [7] \"AIFM1\"    \"ATOX1\"    \"AGRN\"     \"ADGRG1\"   \"ANG\"      \"AGR3\"     #> [13] \"APOH\"     \"AGER\"     \"ABL1\"     \"ARSB\"     \"ANXA4\"    \"ACP6\"     #> [19] \"AGRP\"     \"ARHGEF12\" \"AGR2\"     \"ADM\"      \"ATP5IF1\"  \"ANGPTL1\"  #> [25] \"ACE2\"     \"AXIN1\"    \"AMBP\"     \"AKR1B1\"   \"APBB1IP\"  \"ANGPTL4\"  #> [31] \"ACOX1\"    \"ADAMTS16\" \"AMN\"      \"ANXA10\"   \"AHCY\"     #>  #> $proteins_list_up$GLIOM #>  [1] \"ACE2\"    \"ACY1\"    \"AGXT\"    \"ANGPTL7\" \"AZU1\"    \"ACP5\"    \"ART3\"    #>  [8] \"AMY2B\"   \"APLP1\"   \"ALDH1A1\" #>  #>  #> $proteins_list_down #> $proteins_list_down$AML #>  [1] \"ANGPT1\"   \"APP\"      \"ATG4A\"    \"ALPP\"     \"APOM\"     \"ACAN\"     #>  [7] \"ARHGEF12\" \"ADGRG2\"   \"ANXA3\"    \"AGR2\"     \"AMY2B\"    \"AK1\"      #> [13] \"ADAMTS13\" \"ADAMTS16\" \"ANXA11\"   #>  #> $proteins_list_down$`AML&MYEL` #> [1] \"ADGRG2\" #>  #> $proteins_list_down$`LUNGC&GLIOM` #> [1] \"ADGRE5\" #>  #> $proteins_list_down$LUNGC #> [1] \"ADGRE5\" \"APLP1\"  #>  #> $proteins_list_down$GLIOM #>  [1] \"ADAMTS8\"  \"AGER\"     \"ANGPT2\"   \"ADAM23\"   \"ATOX1\"    \"ADAMTS15\" #>  [7] \"ADGRG1\"   \"ANGPTL2\"  \"ADGRE5\"   \"ADAM15\"   \"AMIGO2\"   \"ADAM8\"    #> [13] \"ADGRE2\"   #>  #>"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_plot_dim.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot PCA or UMAP results on a 2D plane — hd_plot_dim","title":"Plot PCA or UMAP results on a 2D plane — hd_plot_dim","text":"hd_plot_dim() plots sample data points 2D plane. points can plotted PCx/PCy UMAP1/UMAP2 space.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_plot_dim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot PCA or UMAP results on a 2D plane — hd_plot_dim","text":"","code":"hd_plot_dim(   dim_object,   metadata,   x,   y,   color = NULL,   palette = NULL,   plot_loadings = NULL,   nloadings = 5,   axis_variance = TRUE )"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_plot_dim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot PCA or UMAP results on a 2D plane — hd_plot_dim","text":"dim_object PCA UMAP object containing results dimensionality reduction analysis. Created hd_pca() hd_umap(). metadata HDAnalyzeR object dataset wide format sample ID first column. x name column dim_res contains x-axis values. y name column dim_res contains y-axis values. color name column dim_res contains variable used plot points color. palette color palette plot. character, one palettes hd_palettes(). plot_loadings component plotted. Default NULL. nloadings number loadings plotted. Default 5. axis_variance TRUE, explained variance components added axis labels. Default TRUE.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_plot_dim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot PCA or UMAP results on a 2D plane — hd_plot_dim","text":"ggplot object","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_plot_dim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot PCA or UMAP results on a 2D plane — hd_plot_dim","text":"","code":"# Create the HDAnalyzeR object providing the data and metadata hd_object <- hd_initialize(example_data, example_metadata)  # Run the PCA analysis pca_object <- hd_pca(hd_object, components = 5, by_sample = TRUE, seed = 123) |>   hd_plot_dim(hd_object, x = \"PC1\", y = \"PC2\", color = \"Disease\", palette = \"cancers12\")"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_plot_feature_boxplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot feature boxplots — hd_plot_feature_boxplot","title":"Plot feature boxplots — hd_plot_feature_boxplot","text":"hd_plot_feature_boxplot() plots boxplots specified features dataset. annotates boxplot color selected case also possible add points boxplot.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_plot_feature_boxplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot feature boxplots — hd_plot_feature_boxplot","text":"","code":"hd_plot_feature_boxplot(   dat,   metadata = NULL,   variable = \"Disease\",   features,   case,   type = \"case_vs_all\",   points = TRUE,   x_labels = TRUE,   yaxis_title = \"NPX\",   palette = NULL )"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_plot_feature_boxplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot feature boxplots — hd_plot_feature_boxplot","text":"dat HDAnalyzeR object dataset wide format sample_id first column. metadata dataset containing metadata information sample ID first column. HDAnalyzeR object provided, parameter needed. variable name column containing case control groups. Default \"Disease\". features features include boxplot. columns data. case case class. type type boxplot plot. Default \"case_vs_all\". option \"case_vs_control\". points Whether add points boxplot. x_labels Whether show x-axis labels. yaxis_title title y-axis. Default \"NPX\". palette color palette classes. character, one palettes hd_palettes(). Default NULL.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_plot_feature_boxplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot feature boxplots — hd_plot_feature_boxplot","text":"boxplot panel selected features","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_plot_feature_boxplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot feature boxplots — hd_plot_feature_boxplot","text":"","code":"# Initialize an HDAnalyzeR object hd_object <- hd_initialize(example_data, example_metadata)  # Boxplots for AARSD1 and ABL1 in AML vs all other classes hd_plot_feature_boxplot(hd_object,                         variable = \"Disease\",                         features = c(\"AARSD1\", \"ABL1\"),                         case = \"AML\",                         palette = \"cancers12\") #> Warning: The features  are not present in the data and will be skipped. #> Warning: Removed 68 rows containing non-finite outside the scale range #> (`stat_boxplot()`). #> Warning: Removed 8 rows containing non-finite outside the scale range #> (`stat_boxplot()`). #> Warning: Removed 60 rows containing missing values or values outside the scale range #> (`geom_point()`). #> Warning: Removed 8 rows containing missing values or values outside the scale range #> (`geom_point()`).   # Boxplots for AARSD1 and ABL1 in AML vs joint control group hd_plot_feature_boxplot(hd_object,                         variable = \"Disease\",                         features = c(\"AARSD1\", \"ABL1\"),                         case = \"AML\",                         type = \"case_vs_control\",                         palette = \"cancers12\") #> Warning: The features  are not present in the data and will be skipped. #> Warning: Removed 68 rows containing non-finite outside the scale range #> (`stat_boxplot()`). #> Warning: Removed 8 rows containing non-finite outside the scale range #> (`stat_boxplot()`). #> Warning: Removed 60 rows containing missing values or values outside the scale range #> (`geom_point()`). #> Warning: Removed 8 rows containing missing values or values outside the scale range #> (`geom_point()`)."},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_plot_feature_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a summary heatmap of the combined differential expression and classification models results — hd_plot_feature_heatmap","title":"Plot a summary heatmap of the combined differential expression and classification models results — hd_plot_feature_heatmap","text":"hd_plot_feature_heatmap plots summary heatmap combined differential expression classification models results. heatmap shows log2 fold change adjusted p-value differential expression results, scaled importance sign classification models results. heatmap ordered selected assays based specified control group.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_plot_feature_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a summary heatmap of the combined differential expression and classification models results — hd_plot_feature_heatmap","text":"","code":"hd_plot_feature_heatmap(   de_results,   model_results,   order_by,   pval_lim = 0.05,   logfc_lim = 0 )"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_plot_feature_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a summary heatmap of the combined differential expression and classification models results — hd_plot_feature_heatmap","text":"de_results list differential expression results. model_results list classification models results. order_by control group order heatmap. pval_lim p-value limit filter differential expression results order_by group. logfc_lim log2 fold change limit filter differential expression results  order_by group.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_plot_feature_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a summary heatmap of the combined differential expression and classification models results — hd_plot_feature_heatmap","text":"summary heatmap combined differential expression classification models results.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_plot_feature_heatmap.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot a summary heatmap of the combined differential expression and classification models results — hd_plot_feature_heatmap","text":"important de_results model_results order right format (see examples).","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_plot_feature_heatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a summary heatmap of the combined differential expression and classification models results — hd_plot_feature_heatmap","text":"","code":"# Initialize an HDAnalyzeR object hd_object <- hd_initialize(example_data, example_metadata)  # Run differential expression analysis for AML vs all others de_results_myel <- hd_de_limma(hd_object, case = \"AML\", control = \"MYEL\") de_results_lungc <- hd_de_limma(hd_object, case = \"AML\", control = \"LUNGC\") de_results_gliom <- hd_de_limma(hd_object, case = \"AML\", control = \"GLIOM\")  res_de <- list(\"MYEL\" = de_results_myel,                \"LUNGC\" = de_results_lungc,                \"GLIOM\" = de_results_gliom)   # Run Classification models # Split the data into training and test sets hd_split <- hd_split_data(hd_object, variable = \"Disease\") #> Warning: Too little data to stratify. #> • Resampling will be unstratified.  # Run the regularized regression model pipeline model_results_myel <- hd_model_rreg(hd_split,                                     variable = \"Disease\",                                     case = \"AML\",                                     control = \"MYEL\",                                     grid_size = 2,                                     cv_sets = 2) #> Tuning regularized regression model... #> i Fold1: preprocessor 1/1 #> ✓ Fold1: preprocessor 1/1 #> i Fold1: preprocessor 1/1, model 1/2 #> ✓ Fold1: preprocessor 1/1, model 1/2 #> i Fold1: preprocessor 1/1, model 1/2 (extracts) #> i Fold1: preprocessor 1/1, model 1/2 (predictions) #> i Fold1: preprocessor 1/1 #> ✓ Fold1: preprocessor 1/1 #> i Fold1: preprocessor 1/1, model 2/2 #> ✓ Fold1: preprocessor 1/1, model 2/2 #> i Fold1: preprocessor 1/1, model 2/2 (extracts) #> i Fold1: preprocessor 1/1, model 2/2 (predictions) #> i Fold2: preprocessor 1/1 #> ✓ Fold2: preprocessor 1/1 #> i Fold2: preprocessor 1/1, model 1/2 #> ✓ Fold2: preprocessor 1/1, model 1/2 #> i Fold2: preprocessor 1/1, model 1/2 (extracts) #> i Fold2: preprocessor 1/1, model 1/2 (predictions) #> i Fold2: preprocessor 1/1 #> ✓ Fold2: preprocessor 1/1 #> i Fold2: preprocessor 1/1, model 2/2 #> ✓ Fold2: preprocessor 1/1, model 2/2 #> i Fold2: preprocessor 1/1, model 2/2 (extracts) #> i Fold2: preprocessor 1/1, model 2/2 (predictions) #> Evaluating the model... #> Generating visualizations...  model_results_lungc <- hd_model_rreg(hd_split,                                      variable = \"Disease\",                                      case = \"AML\",                                      control = \"LUNGC\",                                      grid_size = 2,                                      cv_sets = 2) #> Tuning regularized regression model... #> i Fold1: preprocessor 1/1 #> ✓ Fold1: preprocessor 1/1 #> i Fold1: preprocessor 1/1, model 1/2 #> ✓ Fold1: preprocessor 1/1, model 1/2 #> i Fold1: preprocessor 1/1, model 1/2 (extracts) #> i Fold1: preprocessor 1/1, model 1/2 (predictions) #> i Fold1: preprocessor 1/1 #> ✓ Fold1: preprocessor 1/1 #> i Fold1: preprocessor 1/1, model 2/2 #> ✓ Fold1: preprocessor 1/1, model 2/2 #> i Fold1: preprocessor 1/1, model 2/2 (extracts) #> i Fold1: preprocessor 1/1, model 2/2 (predictions) #> i Fold2: preprocessor 1/1 #> ✓ Fold2: preprocessor 1/1 #> i Fold2: preprocessor 1/1, model 1/2 #> ✓ Fold2: preprocessor 1/1, model 1/2 #> i Fold2: preprocessor 1/1, model 1/2 (extracts) #> i Fold2: preprocessor 1/1, model 1/2 (predictions) #> i Fold2: preprocessor 1/1 #> ✓ Fold2: preprocessor 1/1 #> i Fold2: preprocessor 1/1, model 2/2 #> ✓ Fold2: preprocessor 1/1, model 2/2 #> i Fold2: preprocessor 1/1, model 2/2 (extracts) #> i Fold2: preprocessor 1/1, model 2/2 (predictions) #> Evaluating the model... #> Generating visualizations...  model_results_gliom <- hd_model_rreg(hd_split,                                      variable = \"Disease\",                                      case = \"AML\",                                      control = \"GLIOM\",                                      grid_size = 2,                                      cv_sets = 2) #> Tuning regularized regression model... #> i Fold1: preprocessor 1/1 #> ✓ Fold1: preprocessor 1/1 #> i Fold1: preprocessor 1/1, model 1/2 #> ✓ Fold1: preprocessor 1/1, model 1/2 #> i Fold1: preprocessor 1/1, model 1/2 (extracts) #> i Fold1: preprocessor 1/1, model 1/2 (predictions) #> i Fold1: preprocessor 1/1 #> ✓ Fold1: preprocessor 1/1 #> i Fold1: preprocessor 1/1, model 2/2 #> ✓ Fold1: preprocessor 1/1, model 2/2 #> i Fold1: preprocessor 1/1, model 2/2 (extracts) #> i Fold1: preprocessor 1/1, model 2/2 (predictions) #> i Fold2: preprocessor 1/1 #> ✓ Fold2: preprocessor 1/1 #> i Fold2: preprocessor 1/1, model 1/2 #> ✓ Fold2: preprocessor 1/1, model 1/2 #> i Fold2: preprocessor 1/1, model 1/2 (extracts) #> i Fold2: preprocessor 1/1, model 1/2 (predictions) #> i Fold2: preprocessor 1/1 #> ✓ Fold2: preprocessor 1/1 #> i Fold2: preprocessor 1/1, model 2/2 #> ✓ Fold2: preprocessor 1/1, model 2/2 #> i Fold2: preprocessor 1/1, model 2/2 (extracts) #> i Fold2: preprocessor 1/1, model 2/2 (predictions) #> Evaluating the model... #> Generating visualizations...  # The models are in the same order as the DE results res_model <- list(\"MYEL\" = model_results_myel,                   \"LUNGC\" = model_results_lungc,                   \"GLIOM\" = model_results_gliom)   # Create the summary heatmap hd_plot_feature_heatmap(res_de, res_model, order_by = \"MYEL\") #> Warning: Removed 26 rows containing missing values or values outside the scale range #> (`geom_point()`). #> Warning: Removed 26 rows containing missing values or values outside the scale range #> (`geom_point()`)."},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_plot_feature_network.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot feature network — hd_plot_feature_network","title":"Plot feature network — hd_plot_feature_network","text":"hd_plot_feature_network plots network features. bigger nodes represent classes smaller nodes represent features. color nodes based color variable can either importance, logFC value can rank features.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_plot_feature_network.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot feature network — hd_plot_feature_network","text":"","code":"hd_plot_feature_network(   feature_panel,   plot_color = \"Scaled_Importance\",   class_palette = NULL,   seed = 123 )"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_plot_feature_network.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot feature network — hd_plot_feature_network","text":"feature_panel dataset containing features classes. dataframe must contain least 3 columns: Feature, Class color variable. See examples. plot_color color variable plot. Default \"Scaled_Importance\". class_palette color palette classes. character, one palettes hd_palettes(). Default NULL. seed seed Seed reproducibility. Default 123.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_plot_feature_network.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot feature network — hd_plot_feature_network","text":"feature network plot.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_plot_feature_network.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot feature network — hd_plot_feature_network","text":"","code":"if (FALSE) { # \\dontrun{ # Initialize an HDAnalyzeR object hd_object <- hd_initialize(example_data, example_metadata)  # Create a feature panel from classification models results # Split the data into training and test sets hd_split <- hd_split_data(hd_object, variable = \"Disease\")  # Run the regularized regression model pipeline model_results_aml <- hd_model_rreg(hd_split,                                    variable = \"Disease\",                                    case = \"AML\",                                    grid_size = 2,                                    cv_sets = 2)  model_results_cll <- hd_model_rreg(hd_split,                                    variable = \"Disease\",                                    case = \"CLL\",                                    grid_size = 2,                                    cv_sets = 2)  model_results_myel <- hd_model_rreg(hd_split,                                   variable = \"Disease\",                                   case = \"MYEL\",                                   grid_size = 2,                                   cv_sets = 2)  model_results_lungc <- hd_model_rreg(hd_split,                                      variable = \"Disease\",                                      case = \"LUNGC\",                                      grid_size = 2,                                      cv_sets = 2)  model_results_gliom <- hd_model_rreg(hd_split,                                      variable = \"Disease\",                                      case = \"GLIOM\",                                      grid_size = 2,                                      cv_sets = 2)  feature_panel <- model_results_aml[[\"features\"]] |>   dplyr::filter(Scaled_Importance > 0.5) |>   dplyr::mutate(Class = \"AML\") |>   dplyr::bind_rows(model_results_cll[[\"features\"]] |>                      dplyr::filter(Scaled_Importance > 0.5) |>                      dplyr::mutate(Class = \"CLL\"),                    model_results_myel[[\"features\"]] |>                      dplyr::filter(Scaled_Importance > 0.5) |>                      dplyr::mutate(Class = \"MYEL\"),                    model_results_lungc[[\"features\"]] |>                      dplyr::filter(Scaled_Importance > 0.5) |>                      dplyr::mutate(Class = \"LUNGC\"),                    model_results_gliom[[\"features\"]] |>                      dplyr::filter(Scaled_Importance > 0.5) |>                      dplyr::mutate(Class = \"GLIOM\"))  print(head(feature_panel, 5))  # Preview of the feature panel  hd_plot_feature_network(feature_panel,                         plot_color = \"Scaled_Importance\",                         class_palette = \"cancers12\")   # Create a feature panel from differential expression results de_results_aml <- hd_de_limma(hd_object, case = \"AML\") de_results_lungc <- hd_de_limma(hd_object, case = \"LUNGC\") de_results_cll <- hd_de_limma(hd_object, case = \"CLL\") de_results_myel <- hd_de_limma(hd_object, case = \"MYEL\") de_results_gliom <- hd_de_limma(hd_object, case = \"GLIOM\")  feature_panel <- de_results_aml[[\"de_res\"]] |>   dplyr::filter(adj.P.Val < 0.05 & abs(logFC) > 1) |>   dplyr::mutate(Class = \"AML\") |>   dplyr::bind_rows(de_results_cll[[\"de_res\"]] |>                      dplyr::filter(adj.P.Val < 0.05 & abs(logFC) > 1) |>                      dplyr::mutate(Class = \"CLL\"),                    de_results_myel[[\"de_res\"]] |>                      dplyr::filter(adj.P.Val < 0.05 & abs(logFC) > 1) |>                      dplyr::mutate(Class = \"MYEL\"),                    de_results_lungc[[\"de_res\"]] |>                      dplyr::filter(adj.P.Val < 0.05 & abs(logFC) > 1) |>                      dplyr::mutate(Class = \"LUNGC\"),                    de_results_gliom[[\"de_res\"]] |>                      dplyr::filter(adj.P.Val < 0.05 & abs(logFC) > 1) |>                      dplyr::mutate(Class = \"GLIOM\"))  print(head(feature_panel, 5))  hd_plot_feature_network(feature_panel,                         plot_color = \"logFC\",                         class_palette = \"cancers12\") } # }"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_plot_gsea.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the results of the gene set enrichment analysis — hd_plot_gsea","title":"Plot the results of the gene set enrichment analysis — hd_plot_gsea","text":"hd_plot_gsea() produces useful plots visualize results gene set enrichment analysis.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_plot_gsea.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the results of the gene set enrichment analysis — hd_plot_gsea","text":"","code":"hd_plot_gsea(enrichment, seed = 123)"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_plot_gsea.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the results of the gene set enrichment analysis — hd_plot_gsea","text":"enrichment enrichment results obtained hd_gsea(). seed Seed reproducibility. Default 123.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_plot_gsea.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the results of the gene set enrichment analysis — hd_plot_gsea","text":"input object enriched plots.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_plot_gsea.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot the results of the gene set enrichment analysis — hd_plot_gsea","text":"KEGG database used, cnetplot generated ENTREZIDs instead gene names. GO Reactome databases ENTREZIDs converted gene names.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_plot_gsea.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the results of the gene set enrichment analysis — hd_plot_gsea","text":"","code":"# Initialize an HDAnalyzeR object hd_object <- hd_initialize(example_data, example_metadata)  # Run differential expression analysis for AML vs all others de_results <- hd_de_limma(hd_object, case = \"AML\")  # Run GSEA with Reactome database enrichment <- hd_gsea(de_results,                       database = \"GO\",                       ontology = \"BP\",                       expression = \"both\",                       ranked_by = \"logFC\",                       pval_lim_enrichment = 0.9) #> 'select()' returned 1:1 mapping between keys and columns #> using 'fgsea' for GSEA analysis, please cite Korotkevich et al (2019). #> preparing geneSet collections... #> GSEA analysis... #> Warning: All values in the stats vector are greater than zero and scoreType is \"std\", maybe you should switch to scoreType = \"pos\". #> leading edge analysis... #> done... # Remember that the data is artificial, this is why we use an absurdly high p-value cutoff  # Plot the results hd_plot_gsea(enrichment) #> $gene_list #>       284       328       566       100      9289     54518       250      9048  #> 1.6960339 1.5595837 1.5329435 1.4623826 1.2318594 1.1730140 1.0367356 0.8287936  #>       351     23365       285       181        25       191     10551    115201  #> 0.8227446 0.8063775 0.7728365 0.7561717 0.7468307 0.7340411 0.7046557 0.6292262  #>       306     51129      9296        59       203     59272     51742     55937  #> 0.6196824 0.5226829 0.5198482 0.5046829 0.4815729 0.4660359 0.4581703 0.4408260  #>       199       267      2683       311       176       280     10149       976  #> 0.4324161 0.4288128 0.4217458 0.4048363 0.3834199 0.3761169 0.3758535 0.3654318  #>     30817      1386       405     11093    170690  #> 0.3594460 0.3385817 0.3378419 0.3141056 0.2980142  #>  #> $enrichment #> # #> # Gene Set Enrichment Analysis #> # #> #...@organism \t Homo sapiens  #> #...@setType \t BP  #> #...@keytype \t ENTREZID  #> #...@geneList \t Named num [1:37] 1.7 1.56 1.53 1.46 1.23 ... #>  - attr(*, \"names\")= chr [1:37] \"284\" \"328\" \"566\" \"100\" ... #> #...nPerm \t  #> #...pvalues adjusted by 'BH' with cutoff <0.9  #> #...90 enriched terms found #> 'data.frame':\t90 obs. of  11 variables: #>  $ ID             : chr  \"GO:0051716\" \"GO:0007186\" \"GO:0040012\" \"GO:0048584\" ... #>  $ Description    : chr  \"cellular response to stimulus\" \"G protein-coupled receptor signaling pathway\" \"regulation of locomotion\" \"positive regulation of response to stimulus\" ... #>  $ setSize        : int  25 10 12 11 18 22 13 10 16 16 ... #>  $ enrichmentScore: num  0.624 0.648 0.619 0.62 0.581 ... #>  $ NES            : num  1.66 1.63 1.6 1.59 1.56 ... #>  $ pvalue         : num  0.0305 0.0258 0.0271 0.0327 0.0325 ... #>  $ p.adjust       : num  0.396 0.396 0.396 0.396 0.396 ... #>  $ qvalue         : num  0.381 0.381 0.381 0.381 0.381 ... #>  $ rank           : num  13 13 13 9 6 13 13 5 15 5 ... #>  $ leading_edge   : chr  \"tags=48%, list=35%, signal=96%\" \"tags=70%, list=35%, signal=62%\" \"tags=67%, list=35%, signal=64%\" \"tags=55%, list=24%, signal=59%\" ... #>  $ core_enrichment: chr  \"284/328/566/100/9289/54518/9048/351/23365/285/181/25\" \"566/100/9289/351/23365/181/25\" \"284/566/100/9289/9048/351/285/25\" \"284/566/100/9289/9048/351\" ... #> #...Citation #> S Xu, E Hu, Y Cai, Z Xie, X Luo, L Zhan, W Tang, Q Wang, B Liu, R Wang, W Xie, T Wu, L Xie, G Yu. Using clusterProfiler to characterize multiomics data. Nature Protocols. 2024, doi:10.1038/s41596-024-01020-z  #>  #>  #> $dotplot  #>  #> $gseaplot  #>  #> $cnetplot  #>  #> $ridgeplot #> Picking joint bandwidth of 0.163  #>  #> attr(,\"class\") #> [1] \"hd_enrichment\""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_plot_model_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot features summary visualizations — hd_plot_model_summary","title":"Plot features summary visualizations — hd_plot_model_summary","text":"hd_plot_model_summary() plots number proteins number top proteins disease barplot. also plots upset plot top protein features, well summary line plot model performance metrics.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_plot_model_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot features summary visualizations — hd_plot_model_summary","text":"","code":"hd_plot_model_summary(   model_results,   importance = 0.5,   class_palette = NULL,   upset_top_features = FALSE )"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_plot_model_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot features summary visualizations — hd_plot_model_summary","text":"model_results list binary classification model results. list objects created hd_model_rreg(), hd_model_rf() hd_model_lr() classes names. See examples details. importance importance threshold consider feature top. Default 0.5. class_palette color palette classes. character, one palettes hd_palettes(). Default NULL. upset_top_features Whether plot upset plot top features features. Default FALSE (features).","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_plot_model_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot features summary visualizations — hd_plot_model_summary","text":"list binary classification model summary plots results","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_plot_model_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot features summary visualizations — hd_plot_model_summary","text":"","code":"# Initialize an HDAnalyzeR object with only a subset of the predictors hd_object <- hd_initialize(example_data, example_metadata)  # Split the data into training and test sets hd_split <- hd_split_data(hd_object, variable = \"Disease\") #> Warning: Too little data to stratify. #> • Resampling will be unstratified.  # Run the regularized regression model pipeline model_results_aml <- hd_model_rreg(hd_split,                                    variable = \"Disease\",                                    case = \"AML\",                                    grid_size = 2,                                    cv_sets = 2) #> Tuning regularized regression model... #> i Fold1: preprocessor 1/1 #> ✓ Fold1: preprocessor 1/1 #> i Fold1: preprocessor 1/1, model 1/2 #> ✓ Fold1: preprocessor 1/1, model 1/2 #> i Fold1: preprocessor 1/1, model 1/2 (extracts) #> i Fold1: preprocessor 1/1, model 1/2 (predictions) #> i Fold1: preprocessor 1/1 #> ✓ Fold1: preprocessor 1/1 #> i Fold1: preprocessor 1/1, model 2/2 #> ✓ Fold1: preprocessor 1/1, model 2/2 #> i Fold1: preprocessor 1/1, model 2/2 (extracts) #> i Fold1: preprocessor 1/1, model 2/2 (predictions) #> i Fold2: preprocessor 1/1 #> ✓ Fold2: preprocessor 1/1 #> i Fold2: preprocessor 1/1, model 1/2 #> ✓ Fold2: preprocessor 1/1, model 1/2 #> i Fold2: preprocessor 1/1, model 1/2 (extracts) #> i Fold2: preprocessor 1/1, model 1/2 (predictions) #> i Fold2: preprocessor 1/1 #> ✓ Fold2: preprocessor 1/1 #> i Fold2: preprocessor 1/1, model 2/2 #> ✓ Fold2: preprocessor 1/1, model 2/2 #> i Fold2: preprocessor 1/1, model 2/2 (extracts) #> i Fold2: preprocessor 1/1, model 2/2 (predictions) #> Evaluating the model... #> Generating visualizations...  model_results_cll <- hd_model_rreg(hd_split,                                    variable = \"Disease\",                                    case = \"CLL\",                                    grid_size = 2,                                    cv_sets = 2) #> Tuning regularized regression model... #> i Fold1: preprocessor 1/1 #> ✓ Fold1: preprocessor 1/1 #> i Fold1: preprocessor 1/1, model 1/2 #> ✓ Fold1: preprocessor 1/1, model 1/2 #> i Fold1: preprocessor 1/1, model 1/2 (extracts) #> i Fold1: preprocessor 1/1, model 1/2 (predictions) #> i Fold1: preprocessor 1/1 #> ✓ Fold1: preprocessor 1/1 #> i Fold1: preprocessor 1/1, model 2/2 #> ✓ Fold1: preprocessor 1/1, model 2/2 #> i Fold1: preprocessor 1/1, model 2/2 (extracts) #> i Fold1: preprocessor 1/1, model 2/2 (predictions) #> i Fold2: preprocessor 1/1 #> ✓ Fold2: preprocessor 1/1 #> i Fold2: preprocessor 1/1, model 1/2 #> ✓ Fold2: preprocessor 1/1, model 1/2 #> i Fold2: preprocessor 1/1, model 1/2 (extracts) #> i Fold2: preprocessor 1/1, model 1/2 (predictions) #> i Fold2: preprocessor 1/1 #> ✓ Fold2: preprocessor 1/1 #> i Fold2: preprocessor 1/1, model 2/2 #> ✓ Fold2: preprocessor 1/1, model 2/2 #> i Fold2: preprocessor 1/1, model 2/2 (extracts) #> i Fold2: preprocessor 1/1, model 2/2 (predictions) #> Evaluating the model... #> Generating visualizations...  model_results_myel <- hd_model_rreg(hd_split,                                   variable = \"Disease\",                                   case = \"MYEL\",                                   grid_size = 2,                                   cv_sets = 2) #> Tuning regularized regression model... #> i Fold1: preprocessor 1/1 #> ✓ Fold1: preprocessor 1/1 #> i Fold1: preprocessor 1/1, model 1/2 #> ✓ Fold1: preprocessor 1/1, model 1/2 #> i Fold1: preprocessor 1/1, model 1/2 (extracts) #> i Fold1: preprocessor 1/1, model 1/2 (predictions) #> i Fold1: preprocessor 1/1 #> ✓ Fold1: preprocessor 1/1 #> i Fold1: preprocessor 1/1, model 2/2 #> ✓ Fold1: preprocessor 1/1, model 2/2 #> i Fold1: preprocessor 1/1, model 2/2 (extracts) #> i Fold1: preprocessor 1/1, model 2/2 (predictions) #> i Fold2: preprocessor 1/1 #> ✓ Fold2: preprocessor 1/1 #> i Fold2: preprocessor 1/1, model 1/2 #> ✓ Fold2: preprocessor 1/1, model 1/2 #> i Fold2: preprocessor 1/1, model 1/2 (extracts) #> i Fold2: preprocessor 1/1, model 1/2 (predictions) #> i Fold2: preprocessor 1/1 #> ✓ Fold2: preprocessor 1/1 #> i Fold2: preprocessor 1/1, model 2/2 #> ✓ Fold2: preprocessor 1/1, model 2/2 #> i Fold2: preprocessor 1/1, model 2/2 (extracts) #> i Fold2: preprocessor 1/1, model 2/2 (predictions) #> Evaluating the model... #> Generating visualizations...  model_results_lungc <- hd_model_rreg(hd_split,                                      variable = \"Disease\",                                      case = \"LUNGC\",                                      grid_size = 2,                                      cv_sets = 2) #> Tuning regularized regression model... #> i Fold1: preprocessor 1/1 #> ✓ Fold1: preprocessor 1/1 #> i Fold1: preprocessor 1/1, model 1/2 #> ✓ Fold1: preprocessor 1/1, model 1/2 #> i Fold1: preprocessor 1/1, model 1/2 (extracts) #> i Fold1: preprocessor 1/1, model 1/2 (predictions) #> i Fold1: preprocessor 1/1 #> ✓ Fold1: preprocessor 1/1 #> i Fold1: preprocessor 1/1, model 2/2 #> ✓ Fold1: preprocessor 1/1, model 2/2 #> i Fold1: preprocessor 1/1, model 2/2 (extracts) #> i Fold1: preprocessor 1/1, model 2/2 (predictions) #> i Fold2: preprocessor 1/1 #> ✓ Fold2: preprocessor 1/1 #> i Fold2: preprocessor 1/1, model 1/2 #> ✓ Fold2: preprocessor 1/1, model 1/2 #> i Fold2: preprocessor 1/1, model 1/2 (extracts) #> i Fold2: preprocessor 1/1, model 1/2 (predictions) #> i Fold2: preprocessor 1/1 #> ✓ Fold2: preprocessor 1/1 #> i Fold2: preprocessor 1/1, model 2/2 #> ✓ Fold2: preprocessor 1/1, model 2/2 #> i Fold2: preprocessor 1/1, model 2/2 (extracts) #> i Fold2: preprocessor 1/1, model 2/2 (predictions) #> Evaluating the model... #> Generating visualizations...  model_results_gliom <- hd_model_rreg(hd_split,                                      variable = \"Disease\",                                      case = \"GLIOM\",                                      grid_size = 2,                                      cv_sets = 2) #> Tuning regularized regression model... #> i Fold1: preprocessor 1/1 #> ✓ Fold1: preprocessor 1/1 #> i Fold1: preprocessor 1/1, model 1/2 #> ✓ Fold1: preprocessor 1/1, model 1/2 #> i Fold1: preprocessor 1/1, model 1/2 (extracts) #> i Fold1: preprocessor 1/1, model 1/2 (predictions) #> i Fold1: preprocessor 1/1 #> ✓ Fold1: preprocessor 1/1 #> i Fold1: preprocessor 1/1, model 2/2 #> ✓ Fold1: preprocessor 1/1, model 2/2 #> i Fold1: preprocessor 1/1, model 2/2 (extracts) #> i Fold1: preprocessor 1/1, model 2/2 (predictions) #> i Fold2: preprocessor 1/1 #> ✓ Fold2: preprocessor 1/1 #> i Fold2: preprocessor 1/1, model 1/2 #> ✓ Fold2: preprocessor 1/1, model 1/2 #> i Fold2: preprocessor 1/1, model 1/2 (extracts) #> i Fold2: preprocessor 1/1, model 1/2 (predictions) #> i Fold2: preprocessor 1/1 #> ✓ Fold2: preprocessor 1/1 #> i Fold2: preprocessor 1/1, model 2/2 #> ✓ Fold2: preprocessor 1/1, model 2/2 #> i Fold2: preprocessor 1/1, model 2/2 (extracts) #> i Fold2: preprocessor 1/1, model 2/2 (predictions) #> Evaluating the model... #> Generating visualizations...  res <- list(\"AML\" = model_results_aml,             \"LUNGC\" = model_results_lungc,             \"CLL\" = model_results_cll,             \"MYEL\" = model_results_myel,             \"GLIOM\" = model_results_gliom)  # Plot summary visualizations hd_plot_model_summary(res, class_palette = \"cancers12\") #> $features_barplot  #>  #> $metrics_barplot  #>  #> $upset_plot_features  #>  #> $features_df #> # A tibble: 99 × 3 #>    Shared_in          `up/down` Feature #>    <chr>              <chr>     <chr>   #>  1 AML                up        AARSD1  #>  2 AML&GLIOM          up        ABL1    #>  3 LUNGC&CLL          up        ACAA1   #>  4 AML&MYEL&GLIOM     up        ACAN    #>  5 MYEL&GLIOM         up        ACE2    #>  6 AML&CLL&GLIOM      up        ACOX1   #>  7 AML&CLL&GLIOM      up        ACP5    #>  8 AML&CLL&MYEL&GLIOM up        ACP6    #>  9 AML&LUNGC&CLL&MYEL up        ACTA2   #> 10 LUNGC&MYEL&GLIOM   up        ACTN4   #> # ℹ 89 more rows #>  #> $features_list #> $features_list$`AML&LUNGC&MYEL&GLIOM` #>  [1] \"ANGPT1\"   \"ADGRG1\"   \"AMY2A\"    \"ADAMTS16\" \"ANGPTL2\"  \"ANPEP\"    #>  [7] \"ANXA11\"   \"ATXN10\"   \"AMBP\"     \"ARTN\"     \"ANGPT2\"   \"AZU1\"     #>  #> $features_list$`AML&LUNGC&CLL&MYEL&GLIOM` #> [1] \"ADGRG1\" \"ANPEP\"  \"ATXN10\" \"ANGPT2\" \"AZU1\"   #>  #> $features_list$`AML&GLIOM` #>  [1] \"ANGPT1\"    \"ADGRG1\"    \"AMY2A\"     \"ADAMTS16\"  \"ADA\"       \"AHCY\"      #>  [7] \"ANGPTL2\"   \"ALCAM\"     \"APEX1\"     \"ABL1\"      \"ANPEP\"     \"ANKRD54\"   #> [13] \"APOH\"      \"ADGRE2\"    \"ACP6\"      \"APOM\"      \"ACAN\"      \"ANXA11\"    #> [19] \"AGR3\"      \"ARHGAP1\"   \"ADGRG2\"    \"ATXN10\"    \"AMBN\"      \"AMBP\"      #> [25] \"ACP5\"      \"AGRN\"      \"ADAM15\"    \"ADAMTS13\"  \"ARTN\"      \"ATOX1\"     #> [31] \"APLP1\"     \"ACY1\"      \"ANG\"       \"ATF2\"      \"ANGPT2\"    \"ALDH3A1\"   #> [37] \"ANGPTL7\"   \"AZU1\"      \"B4GALT1\"   \"ADCYAP1R1\" \"AKT3\"      \"AGXT\"      #> [43] \"ARSB\"      \"ARHGEF12\"  \"ACOX1\"     \"ATP6V1F\"   \"ADAM23\"    #>  #> $features_list$`AML&LUNGC&GLIOM` #>  [1] \"ANGPT1\"    \"ADGRG1\"    \"AMY2A\"     \"ADAMTS16\"  \"AHCY\"      \"ANGPTL2\"   #>  [7] \"ANPEP\"     \"ANKRD54\"   \"APOM\"      \"ANXA11\"    \"ATXN10\"    \"AMBP\"      #> [13] \"AGRN\"      \"ARTN\"      \"ANGPT2\"    \"AZU1\"      \"ADCYAP1R1\" \"AGXT\"      #>  #> $features_list$`AML&CLL&MYEL` #>  [1] \"ADGRG1\"   \"ADAM8\"    \"ALCAM\"    \"APEX1\"    \"ANPEP\"    \"AXL\"      #>  [7] \"ACP6\"     \"ATXN10\"   \"AMBN\"     \"ACTA2\"    \"ANGPT2\"   \"AGRP\"     #> [13] \"AZU1\"     \"ATP6V1F\"  \"ARHGAP25\" #>  #> $features_list$`AML&LUNGC` #>  [1] \"ANGPT1\"    \"ADGRG1\"    \"AMY2A\"     \"ADAMTS16\"  \"AHCY\"      \"AMIGO2\"    #>  [7] \"ANGPTL2\"   \"AMFR\"      \"AK1\"       \"ANPEP\"     \"ANKRD54\"   \"ALDH1A1\"   #> [13] \"AXL\"       \"APBB1IP\"   \"APOM\"      \"ANXA11\"    \"ATXN10\"    \"AMBP\"      #> [19] \"AGRN\"      \"ARTN\"      \"ANXA5\"     \"ACTA2\"     \"ARNT\"      \"AMN\"       #> [25] \"ANGPT2\"    \"ANGPTL3\"   \"AOC3\"      \"AGRP\"      \"AZU1\"      \"ADCYAP1R1\" #> [31] \"AGXT\"      \"ARHGAP25\"  #>  #> $features_list$`AML&CLL&MYEL&GLIOM` #>  [1] \"ADGRG1\"  \"ALCAM\"   \"APEX1\"   \"ANPEP\"   \"ACP6\"    \"ATXN10\"  \"AMBN\"    #>  [8] \"ANGPT2\"  \"AZU1\"    \"ATP6V1F\" #>  #> $features_list$AML #>  [1] ANGPT1    ADGRG1    AMY2A     ADAMTS16  ADA       AHCY      ADAM8     #>  [8] AMIGO2    ANGPTL2   ALCAM     APEX1     ADH4      AMFR      AK1       #> [15] ABL1      ANPEP     ATP6V1D   AARSD1    ANKRD54   APOH      ALDH1A1   #> [22] AXL       APBB1IP   ADGRE2    ACP6      ATG4A     APOM      ACAN      #> [29] ANXA11    AGR3      ARHGAP1   ADGRG2    ATXN10    APP       AMBN      #> [36] AMBP      ACP5      AGRN      ADAM15    ADAMTS13  ARTN      ANXA5     #> [43] ACTA2     ATOX1     APLP1     ARNT      ACY1      ANXA4     ANG       #> [50] ATF2      AMN       ANGPT2    ALDH3A1   ANGPTL7   ANGPTL3   AKR1B1    #> [57] AOC3      AGRP      AZU1      ANXA3     B4GALT1   ADCYAP1R1 AKT3      #> [64] AGXT      ARSB      ATP5IF1   ARHGEF12  AKT1S1    ACOX1     ATP6V1F   #> [71] ADAM23    ARHGAP25  #> 100 Levels: ACAA1 ACE2 ACTN4 ADA2 ADAMTS15 ADAMTS8 ADGRE5 ADM AGER AGR2 ... ANGPT1 #>  #> $features_list$`AML&LUNGC&CLL` #>  [1] \"ADGRG1\"   \"AMFR\"     \"ANPEP\"    \"ANKRD54\"  \"AXL\"      \"ATXN10\"   #>  [7] \"ACTA2\"    \"ANGPT2\"   \"AGRP\"     \"AZU1\"     \"ARHGAP25\" #>  #> $features_list$`AML&LUNGC&MYEL` #>  [1] \"ANGPT1\"   \"ADGRG1\"   \"AMY2A\"    \"ADAMTS16\" \"ANGPTL2\"  \"AK1\"      #>  [7] \"ANPEP\"    \"AXL\"      \"APBB1IP\"  \"ANXA11\"   \"ATXN10\"   \"AMBP\"     #> [13] \"ARTN\"     \"ANXA5\"    \"ACTA2\"    \"ANGPT2\"   \"ANGPTL3\"  \"AOC3\"     #> [19] \"AGRP\"     \"AZU1\"     \"ARHGAP25\" #>  #> $features_list$`AML&LUNGC&CLL&GLIOM` #> [1] \"ADGRG1\"  \"ANPEP\"   \"ANKRD54\" \"ATXN10\"  \"ANGPT2\"  \"AZU1\"    #>  #> $features_list$`AML&MYEL&GLIOM` #>  [1] \"ANGPT1\"   \"ADGRG1\"   \"AMY2A\"    \"ADAMTS16\" \"ANGPTL2\"  \"ALCAM\"    #>  [7] \"APEX1\"    \"ANPEP\"    \"APOH\"     \"ACP6\"     \"ACAN\"     \"ANXA11\"   #> [13] \"AGR3\"     \"ADGRG2\"   \"ATXN10\"   \"AMBN\"     \"AMBP\"     \"ADAM15\"   #> [19] \"ARTN\"     \"ATOX1\"    \"ANG\"      \"ATF2\"     \"ANGPT2\"   \"ANGPTL7\"  #> [25] \"AZU1\"     \"ARSB\"     \"ARHGEF12\" \"ATP6V1F\"  #>  #> $features_list$`AML&LUNGC&CLL&MYEL` #> [1] \"ADGRG1\"   \"ANPEP\"    \"AXL\"      \"ATXN10\"   \"ACTA2\"    \"ANGPT2\"   \"AGRP\"     #> [8] \"AZU1\"     \"ARHGAP25\" #>  #> $features_list$`AML&CLL&GLIOM` #>  [1] \"ADGRG1\"   \"ALCAM\"    \"APEX1\"    \"ANPEP\"    \"ANKRD54\"  \"ACP6\"     #>  [7] \"ARHGAP1\"  \"ATXN10\"   \"AMBN\"     \"ACP5\"     \"ADAMTS13\" \"APLP1\"    #> [13] \"ACY1\"     \"ANGPT2\"   \"AZU1\"     \"ACOX1\"    \"ATP6V1F\"  #>  #> $features_list$`AML&CLL` #>  [1] \"ADGRG1\"   \"ADAM8\"    \"ALCAM\"    \"APEX1\"    \"AMFR\"     \"ANPEP\"    #>  [7] \"ANKRD54\"  \"AXL\"      \"ACP6\"     \"ARHGAP1\"  \"ATXN10\"   \"APP\"      #> [13] \"AMBN\"     \"ACP5\"     \"ADAMTS13\" \"ACTA2\"    \"APLP1\"    \"ACY1\"     #> [19] \"ANGPT2\"   \"AGRP\"     \"AZU1\"     \"ATP5IF1\"  \"ACOX1\"    \"ATP6V1F\"  #> [25] \"ARHGAP25\" #>  #> $features_list$`AML&MYEL` #>  [1] \"ANGPT1\"   \"ADGRG1\"   \"AMY2A\"    \"ADAMTS16\" \"ADAM8\"    \"ANGPTL2\"  #>  [7] \"ALCAM\"    \"APEX1\"    \"AK1\"      \"ANPEP\"    \"APOH\"     \"AXL\"      #> [13] \"APBB1IP\"  \"ACP6\"     \"ACAN\"     \"ANXA11\"   \"AGR3\"     \"ADGRG2\"   #> [19] \"ATXN10\"   \"AMBN\"     \"AMBP\"     \"ADAM15\"   \"ARTN\"     \"ANXA5\"    #> [25] \"ACTA2\"    \"ATOX1\"    \"ANG\"      \"ATF2\"     \"ANGPT2\"   \"ANGPTL7\"  #> [31] \"ANGPTL3\"  \"AOC3\"     \"AGRP\"     \"AZU1\"     \"ANXA3\"    \"ARSB\"     #> [37] \"ARHGEF12\" \"ATP6V1F\"  \"ARHGAP25\" #>  #> $features_list$`LUNGC&CLL&MYEL&GLIOM` #> [1] \"ATP5PO\" \"ATXN10\" \"ANPEP\"  \"ANGPT2\" \"ADGRG1\" \"AZU1\"   #>  #> $features_list$LUNGC #>  [1] APBB1IP   AOC3      ATP5PO    AMIGO2    ANXA10    ADM       AXL       #>  [8] AMY2B     ANGPTL3   AMFR      ANGPTL2   ACTA2     ATXN10    AGR2      #> [15] AGRP      AHCY      ADA2      ACTN4     ARG1      ANPEP     ANGPT2    #> [22] AKR1C4    ADGRG1    ARNT      ACAA1     ANXA5     AZU1      ALDH1A1   #> [29] AXIN1     ANXA11    AMY2A     APOM      ATP6AP2   AGRN      ADCYAP1R1 #> [36] ARTN      ART3      ANGPT1    ARID4B    ADAMTS16  AHSP      AMBP      #> [43] AK1       AGXT      ARHGAP25  AOC1      AMN       ANKRD54   #> 100 Levels: AARSD1 ABL1 ACAN ACE2 ACOX1 ACP5 ACP6 ACY1 ADA ADAM15 ... APBB1IP #>  #> $features_list$`LUNGC&MYEL&GLIOM` #>  [1] \"ATP5PO\"   \"ADM\"      \"AMY2B\"    \"ANGPTL2\"  \"ATXN10\"   \"ACTN4\"    #>  [7] \"ANPEP\"    \"ANGPT2\"   \"ADGRG1\"   \"AZU1\"     \"ANXA11\"   \"AMY2A\"    #> [13] \"ARTN\"     \"ANGPT1\"   \"ADAMTS16\" \"AHSP\"     \"AMBP\"     \"AOC1\"     #>  #> $features_list$`LUNGC&MYEL` #>  [1] \"APBB1IP\"  \"AOC3\"     \"ATP5PO\"   \"ADM\"      \"AXL\"      \"AMY2B\"    #>  [7] \"ANGPTL3\"  \"ANGPTL2\"  \"ACTA2\"    \"ATXN10\"   \"AGR2\"     \"AGRP\"     #> [13] \"ADA2\"     \"ACTN4\"    \"ARG1\"     \"ANPEP\"    \"ANGPT2\"   \"ADGRG1\"   #> [19] \"ANXA5\"    \"AZU1\"     \"ANXA11\"   \"AMY2A\"    \"ARTN\"     \"ANGPT1\"   #> [25] \"ADAMTS16\" \"AHSP\"     \"AMBP\"     \"AK1\"      \"ARHGAP25\" \"AOC1\"     #>  #> $features_list$`LUNGC&CLL` #>  [1] \"ATP5PO\"   \"AXL\"      \"AMFR\"     \"ACTA2\"    \"ATXN10\"   \"AGRP\"     #>  [7] \"ANPEP\"    \"ANGPT2\"   \"AKR1C4\"   \"ADGRG1\"   \"ACAA1\"    \"AZU1\"     #> [13] \"ATP6AP2\"  \"ARID4B\"   \"ARHGAP25\" \"ANKRD54\"  #>  #> $features_list$`LUNGC&GLIOM` #>  [1] \"ATP5PO\"    \"ADM\"       \"AMY2B\"     \"ANGPTL2\"   \"ATXN10\"    \"AHCY\"      #>  [7] \"ACTN4\"     \"ANPEP\"     \"ANGPT2\"    \"ADGRG1\"    \"AZU1\"      \"AXIN1\"     #> [13] \"ANXA11\"    \"AMY2A\"     \"APOM\"      \"ATP6AP2\"   \"AGRN\"      \"ADCYAP1R1\" #> [19] \"ARTN\"      \"ART3\"      \"ANGPT1\"    \"ARID4B\"    \"ADAMTS16\"  \"AHSP\"      #> [25] \"AMBP\"      \"AGXT\"      \"AOC1\"      \"ANKRD54\"   #>  #> $features_list$`LUNGC&CLL&GLIOM` #> [1] \"ATP5PO\"  \"ATXN10\"  \"ANPEP\"   \"ANGPT2\"  \"ADGRG1\"  \"AZU1\"    \"ATP6AP2\" #> [8] \"ARID4B\"  \"ANKRD54\" #>  #> $features_list$`CLL&GLIOM` #>  [1] \"ADAMTS8\"  \"ALCAM\"    \"ATP6V1F\"  \"APEX1\"    \"ARID4B\"   \"ATXN10\"   #>  [7] \"ADGRG1\"   \"ATP6AP2\"  \"ANKRD54\"  \"AZU1\"     \"ADAMTS13\" \"ARHGAP1\"  #> [13] \"AMBN\"     \"ACP6\"     \"ACOX1\"    \"ANPEP\"    \"APLP1\"    \"ANGPT2\"   #> [19] \"ACP5\"     \"ATP5PO\"   \"ACY1\"     #>  #> $features_list$`MYEL&GLIOM` #>  [1] \"ANPEP\"    \"ADAMTS15\" \"ARTN\"     \"APOH\"     \"ADM\"      \"AGR3\"     #>  [7] \"AIFM1\"    \"AMBP\"     \"ATOX1\"    \"AREG\"     \"ADGRG1\"   \"ATP5PO\"   #> [13] \"AMY2B\"    \"ALPP\"     \"AIF1\"     \"ACAN\"     \"ADGRE5\"   \"AMBN\"     #> [19] \"ANGPTL7\"  \"AOC1\"     \"ADAM15\"   \"ACE2\"     \"ANGPT1\"   \"ARSB\"     #> [25] \"ACTN4\"    \"ANXA11\"   \"ATF2\"     \"ATP6V1F\"  \"ADGRG2\"   \"ANGPT2\"   #> [31] \"ARHGEF12\" \"ATXN10\"   \"ALCAM\"    \"APEX1\"    \"ADAMTS16\" \"AMY2A\"    #> [37] \"AZU1\"     \"AHSP\"     \"ACP6\"     \"ANG\"      \"ANGPTL2\"  #>  #> $features_list$MYEL #>  [1] ANPEP    ADAMTS15 ARTN     APOH     ADM      ANGPTL3  ARHGAP25 AGR3     #>  [9] AIFM1    AMBP     ATOX1    AGRP     AGR2     ARSA     AREG     ADGRG1   #> [17] ATP5PO   ADA2     AMY2B    ALPP     ANGPTL1  AIF1     ACAN     ADGRE5   #> [25] AMBN     AK1      ADAM8    ANGPTL7  AOC1     ADAM15   ACE2     ANGPT1   #> [33] ARSB     APBB1IP  ACTA2    ACTN4    ANXA11   ATF2     AXL      ATP6V1F  #> [41] ADGRG2   ANGPT2   ARHGEF12 ATXN10   ALCAM    APEX1    ADAMTS16 AMY2A    #> [49] AZU1     AHSP     ACP6     ANG      ARG1     AOC3     ANXA3    ANGPTL2  #> [57] ANGPTL4  ANXA5    #> 100 Levels: AARSD1 ABL1 ACAA1 ACOX1 ACP5 ACY1 ADA ADAM23 ADAMTS13 ... ANPEP #>  #>"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_plot_ora.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate visualizations for the over-representation analysis — hd_plot_ora","title":"Generate visualizations for the over-representation analysis — hd_plot_ora","text":"hd_plot_ora() generates useful visualizations results -representation analysis.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_plot_ora.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate visualizations for the over-representation analysis — hd_plot_ora","text":"","code":"hd_plot_ora(enrichment, seed = 123)"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_plot_ora.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate visualizations for the over-representation analysis — hd_plot_ora","text":"enrichment enrichment results obtained hd_ora(). seed Seed reproducibility. Default 123.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_plot_ora.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate visualizations for the over-representation analysis — hd_plot_ora","text":"input object enriched plots.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_plot_ora.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate visualizations for the over-representation analysis — hd_plot_ora","text":"KEGG database used, cnetplot generated ENTREZIDs instead gene names. GO Reactome databases ENTREZIDs converted gene names.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_plot_ora.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate visualizations for the over-representation analysis — hd_plot_ora","text":"","code":"# Initialize an HDAnalyzeR object hd_object <- hd_initialize(example_data, example_metadata)  # Run differential expression analysis for AML vs all others de_results <- hd_de_limma(hd_object, case = \"AML\")  # Extract the up-regulated proteins for AML sig_up_proteins_aml <- de_results$de_res |>   dplyr::filter(adj.P.Val < 0.05 & logFC > 0.5) |>   dplyr::pull(Feature)  # Perform ORA with `GO` database and `BP` ontology enrichment <- hd_ora(sig_up_proteins_aml, database = \"GO\", ontology = \"BP\") #> 'select()' returned 1:1 mapping between keys and columns  # Plot the results hd_plot_ora(enrichment) #> ! # Invaild edge matrix for <phylo>. A <tbl_df> is returned. #> ! # Invaild edge matrix for <phylo>. A <tbl_df> is returned. #> ! # Invaild edge matrix for <phylo>. A <tbl_df> is returned. #> ! # Invaild edge matrix for <phylo>. A <tbl_df> is returned. #> ! # Invaild edge matrix for <phylo>. A <tbl_df> is returned. #> ! # Invaild edge matrix for <phylo>. A <tbl_df> is returned. #> ! # Invaild edge matrix for <phylo>. A <tbl_df> is returned. #> ! # Invaild edge matrix for <phylo>. A <tbl_df> is returned. #> ! # Invaild edge matrix for <phylo>. A <tbl_df> is returned. #> ! # Invaild edge matrix for <phylo>. A <tbl_df> is returned. #> ! # Invaild edge matrix for <phylo>. A <tbl_df> is returned. #> ! # Invaild edge matrix for <phylo>. A <tbl_df> is returned. #> ! # Invaild edge matrix for <phylo>. A <tbl_df> is returned. #> ! # Invaild edge matrix for <phylo>. A <tbl_df> is returned. #> ! # Invaild edge matrix for <phylo>. A <tbl_df> is returned. #> ! # Invaild edge matrix for <phylo>. A <tbl_df> is returned. #> ! # Invaild edge matrix for <phylo>. A <tbl_df> is returned. #> ! # Invaild edge matrix for <phylo>. A <tbl_df> is returned. #> ! # Invaild edge matrix for <phylo>. A <tbl_df> is returned. #> ! # Invaild edge matrix for <phylo>. A <tbl_df> is returned. #> ! # Invaild edge matrix for <phylo>. A <tbl_df> is returned. #> ! # Invaild edge matrix for <phylo>. A <tbl_df> is returned. #> ! # Invaild edge matrix for <phylo>. A <tbl_df> is returned. #> ! # Invaild edge matrix for <phylo>. A <tbl_df> is returned. #> ! # Invaild edge matrix for <phylo>. A <tbl_df> is returned. #> ! # Invaild edge matrix for <phylo>. A <tbl_df> is returned. #> ! # Invaild edge matrix for <phylo>. A <tbl_df> is returned. #> ! # Invaild edge matrix for <phylo>. A <tbl_df> is returned. #> ! # Invaild edge matrix for <phylo>. A <tbl_df> is returned. #> ! # Invaild edge matrix for <phylo>. A <tbl_df> is returned. #> ! # Invaild edge matrix for <phylo>. A <tbl_df> is returned. #> ! # Invaild edge matrix for <phylo>. A <tbl_df> is returned. #> ! # Invaild edge matrix for <phylo>. A <tbl_df> is returned. #> ! # Invaild edge matrix for <phylo>. A <tbl_df> is returned. #> ! # Invaild edge matrix for <phylo>. A <tbl_df> is returned. #> ! # Invaild edge matrix for <phylo>. A <tbl_df> is returned. #> ! # Invaild edge matrix for <phylo>. A <tbl_df> is returned. #> ! # Invaild edge matrix for <phylo>. A <tbl_df> is returned. #> ! # Invaild edge matrix for <phylo>. A <tbl_df> is returned. #> ! # Invaild edge matrix for <phylo>. A <tbl_df> is returned. #> ! # Invaild edge matrix for <phylo>. A <tbl_df> is returned. #> ! # Invaild edge matrix for <phylo>. A <tbl_df> is returned. #> ! # Invaild edge matrix for <phylo>. A <tbl_df> is returned. #> ! # Invaild edge matrix for <phylo>. A <tbl_df> is returned. #> ! # Invaild edge matrix for <phylo>. A <tbl_df> is returned. #> ! # Invaild edge matrix for <phylo>. A <tbl_df> is returned. #> $gene_list #>  [1] \"100\"   \"566\"   \"328\"   \"54518\" \"9289\"  \"285\"   \"9048\"  \"181\"   \"51129\" #> [10] \"191\"   \"25\"    \"59\"    \"9296\"  #>  #> $enrichment #> # #> # over-representation test #> # #> #...@organism \t Homo sapiens  #> #...@ontology \t BP  #> #...@keytype \t ENTREZID  #> #...@gene \t chr [1:13] \"100\" \"566\" \"328\" \"54518\" \"9289\" \"285\" \"9048\" \"181\" \"51129\" ... #> #...pvalues adjusted by 'BH' with cutoff <0.05  #> #...46 enriched terms found #> 'data.frame':\t46 obs. of  12 variables: #>  $ ID            : chr  \"GO:0050926\" \"GO:0045785\" \"GO:0050918\" \"GO:0048534\" ... #>  $ Description   : chr  \"regulation of positive chemotaxis\" \"positive regulation of cell adhesion\" \"positive chemotaxis\" \"hematopoietic or lymphoid organ development\" ... #>  $ GeneRatio     : chr  \"3/13\" \"5/13\" \"3/13\" \"3/13\" ... #>  $ BgRatio       : chr  \"27/18986\" \"499/18986\" \"72/18986\" \"102/18986\" ... #>  $ RichFactor    : num  0.1111 0.01 0.0417 0.0294 0.1333 ... #>  $ FoldEnrichment: num  162.3 14.6 60.9 43 194.7 ... #>  $ zScore        : num  21.95 8.08 13.32 11.12 19.65 ... #>  $ pvalue        : num  7.27e-07 1.33e-05 1.46e-05 4.14e-05 4.52e-05 ... #>  $ p.adjust      : num  0.000607 0.004051 0.004051 0.007551 0.007551 ... #>  $ qvalue        : num  0.000332 0.002216 0.002216 0.004131 0.004131 ... #>  $ geneID        : chr  \"566/285/9048\" \"100/566/54518/9289/25\" \"566/285/9048\" \"100/9048/25\" ... #>  $ Count         : int  3 5 3 3 2 4 2 2 2 2 ... #> #...Citation #> S Xu, E Hu, Y Cai, Z Xie, X Luo, L Zhan, W Tang, Q Wang, B Liu, R Wang, W Xie, T Wu, L Xie, G Yu. Using clusterProfiler to characterize multiomics data. Nature Protocols. 2024, doi:10.1038/s41596-024-01020-z  #>  #>  #> $dotplot  #>  #> $treeplot  #>  #> $cnetplot  #>  #> attr(,\"class\") #> [1] \"hd_enrichment\""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_plot_pca_loadings.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot PCA loadings — hd_plot_pca_loadings","title":"Plot PCA loadings — hd_plot_pca_loadings","text":"hd_plot_pca_loadings() plots PCA loadings top n features first m PCs. n m defined user. contribution direction features indicated color bars.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_plot_pca_loadings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot PCA loadings — hd_plot_pca_loadings","text":"","code":"hd_plot_pca_loadings(pca_object, displayed_pcs = 6, displayed_features = 15)"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_plot_pca_loadings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot PCA loadings — hd_plot_pca_loadings","text":"pca_object PCA object containing PCA loadings. Created hd_pca(). displayed_pcs number PCs displayed. Default 6. displayed_features number features displayed. Default 15.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_plot_pca_loadings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot PCA loadings — hd_plot_pca_loadings","text":"ggplot object","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_plot_pca_loadings.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot PCA loadings — hd_plot_pca_loadings","text":"","code":"# Create the HDAnalyzeR object providing the data and metadata hd_object <- hd_initialize(example_data, example_metadata)  # Run the PCA analysis and create the loadings plot pca_object <- hd_pca(hd_object, components = 5, by_sample = TRUE, seed = 123) |>   hd_plot_pca_loadings() pca_object$pca_loadings_plot"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_plot_pca_variance.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot PCA variance — hd_plot_pca_variance","title":"Plot PCA variance — hd_plot_pca_variance","text":"hd_plot_pca_variance() plots explained variance cumulative explained variance PCs.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_plot_pca_variance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot PCA variance — hd_plot_pca_variance","text":"","code":"hd_plot_pca_variance(pca_object)"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_plot_pca_variance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot PCA variance — hd_plot_pca_variance","text":"pca_object PCA object containing PCA variance. Created hd_pca().","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_plot_pca_variance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot PCA variance — hd_plot_pca_variance","text":"ggplot object","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_plot_pca_variance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot PCA variance — hd_plot_pca_variance","text":"","code":"# Create the HDAnalyzeR object providing the data and metadata hd_object <- hd_initialize(example_data, example_metadata)  # Run the PCA analysis and create the variance plot pca_object <- hd_pca(hd_object, components = 5, by_sample = TRUE, seed = 123) |>   hd_plot_pca_variance() pca_object$pca_variance_plot"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_plot_regression.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize scatter plot with regression line — hd_plot_regression","title":"Visualize scatter plot with regression line — hd_plot_regression","text":"hd_plot_regression plots scatter plot linear regression line. possible add standard error regression line, well R-squared p-value.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_plot_regression.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize scatter plot with regression line — hd_plot_regression","text":"","code":"hd_plot_regression(   dat,   metadata = NULL,   metadata_cols = NULL,   x,   y,   se = FALSE,   line_color = \"black\",   r_2 = TRUE )"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_plot_regression.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize scatter plot with regression line — hd_plot_regression","text":"dat HDAnalyzeR object dataset wide format sample_id first column. metadata dataset containing metadata information sample ID first column. HDAnalyzeR object provided, parameter needed. metadata_cols metadata columns plot. Default NULL. x column name x-axis variable. y column name y-axis variable. se Whether add standard error regression line. Default FALSE. line_color color regression line. r_2 Whether add R-squared p-value plot. Default TRUE.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_plot_regression.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize scatter plot with regression line — hd_plot_regression","text":"scatter plot regression line.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_plot_regression.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize scatter plot with regression line — hd_plot_regression","text":"","code":"# Initialize an HDAnalyzeR object hd_object <- hd_initialize(example_data, example_metadata)  # Scatter plot for AARSD1 and ABL1 hd_plot_regression(hd_object,                    x = \"AARSD1\",                    y = \"ABL1\",                    se = TRUE,                    line_color = \"red3\") #> `geom_smooth()` using formula = 'y ~ x' #> Warning: Removed 34 rows containing non-finite outside the scale range #> (`stat_smooth()`). #> Warning: Removed 34 rows containing missing values or values outside the scale range #> (`geom_point()`).   # Scatter plot for AARSD1 and Age (metadata variable) hd_plot_regression(hd_object,                    metadata_cols = \"Age\",                    x = \"AARSD1\",                    y = \"Age\",                    line_color = \"red3\",                    r_2 = FALSE) #> `geom_smooth()` using formula = 'y ~ x' #> Warning: Removed 34 rows containing non-finite outside the scale range #> (`stat_smooth()`). #> Warning: Removed 34 rows containing missing values or values outside the scale range #> (`geom_point()`)."},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_plot_volcano.html","id":null,"dir":"Reference","previous_headings":"","what":"Create volcano plots — hd_plot_volcano","title":"Create volcano plots — hd_plot_volcano","text":"hd_plot_volcano() creates volcano plots differential expression results. colors labels top regulated proteins.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_plot_volcano.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create volcano plots — hd_plot_volcano","text":"","code":"hd_plot_volcano(   de_object,   pval_lim = 0.05,   logfc_lim = 0,   top_up_prot = 10,   top_down_prot = 5,   palette = \"diff_exp\",   title = NULL,   report_nproteins = TRUE,   user_defined_proteins = NULL )"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_plot_volcano.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create volcano plots — hd_plot_volcano","text":"de_object differential expression object. Created hd_de_limma(). pval_lim p-value limit significance. Default 0.05. logfc_lim logFC limit significance. Default 0. top_up_prot number top regulated proteins label plot. Default 10. top_down_prot number top regulated proteins label plot. Default 5. palette color palette plot. one palettes hd_palettes() custom palette. Default \"diff_exp\". title title plot NULL title. report_nproteins number significant proteins reported subtitle. Default TRUE. user_defined_proteins vector protein names label plot. Default NULL.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_plot_volcano.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create volcano plots — hd_plot_volcano","text":"object DE results volcano plot.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_plot_volcano.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create volcano plots — hd_plot_volcano","text":"","code":"# Initialize an HDAnalyzeR object hd_object <- hd_initialize(example_data, example_metadata)  # Run differential expression analysis for AML vs all others de_results <- hd_de_limma(hd_object, case = \"AML\")  # Create a volcano plot hd_plot_volcano(de_results) #> $de_res #> # A tibble: 100 × 10 #>    Feature  logFC   CI.L   CI.R AveExpr     t  P.Value adj.P.Val     B Disease #>    <chr>    <dbl>  <dbl>  <dbl>   <dbl> <dbl>    <dbl>     <dbl> <dbl> <chr>   #>  1 ADA      1.46   1.17   1.75   0.924   9.83 3.29e-21  3.29e-19 37.3  AML     #>  2 AZU1     1.53   1.20   1.86   0.226   9.10 1.32e-18  6.62e-17 31.4  AML     #>  3 APEX1    1.56   1.17   1.95   0.517   7.90 1.40e-14  4.67e-13 22.3  AML     #>  4 APBB1IP  1.17   0.855  1.49  -0.237   7.24 1.48e-12  3.69e-11 17.8  AML     #>  5 ANGPT1  -1.70  -2.18  -1.21   1.72   -6.92 1.24e-11  2.48e-10 15.6  AML     #>  6 ADGRG1   1.23   0.837  1.63   1.54    6.12 1.75e- 9  2.92e- 8 10.8  AML     #>  7 ANGPT2   0.773  0.522  1.02   0.920   6.04 2.70e- 9  3.86e- 8 10.3  AML     #>  8 ARTN     0.829  0.552  1.11   0.429   5.88 6.95e- 9  8.69e- 8  9.47 AML     #>  9 APP     -0.823 -1.15  -0.493  1.17   -4.90 1.24e- 6  1.35e- 5  4.42 AML     #> 10 AGRP     0.756  0.452  1.06   0.0229  4.88 1.35e- 6  1.35e- 5  4.35 AML     #> # ℹ 90 more rows #>  #> $volcano_plot  #>  #> attr(,\"class\") #> [1] \"hd_de\""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_qc_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize the quality control results of the input dataset — hd_qc_summary","title":"Summarize the quality control results of the input dataset — hd_qc_summary","text":"hd_qc_summary() summarizes quality control results input dataset. returns general information datasets, missing value information, protein-protein correlations, metadata summary visualizations.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_qc_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize the quality control results of the input dataset — hd_qc_summary","text":"","code":"hd_qc_summary(   dat,   metadata = NULL,   variable,   palette = NULL,   unique_threshold = 5,   cor_threshold = 0.8,   cor_method = \"pearson\",   verbose = TRUE )"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_qc_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize the quality control results of the input dataset — hd_qc_summary","text":"dat HDAnalyzeR object dataset wide format sample_id first column. metadata dataset containing metadata information sample ID first column. HDAnalyzeR object provided, parameter needed. variable name column containing different classes (example column contains case control groups). palette list color palettes plots. names list match column names metadata. Default NULL. unique_threshold threshold consider numeric variable categorical. Default 5. cor_threshold threshold consider protein-protein correlation high. Default 0.8. cor_method method calculate correlation. Default \"pearson\". verbose Whether print summary. Default TRUE.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_qc_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize the quality control results of the input dataset — hd_qc_summary","text":"list containing qc summary data metadata.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_qc_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize the quality control results of the input dataset — hd_qc_summary","text":"","code":"# Create the HDAnalyzeR object providing the data and metadata hd_object <- hd_initialize(example_data,                            example_metadata |> dplyr::select(-Sample))  # Run the quality control summary hd_qc_summary(hd_object,               variable = \"Disease\",               palette = list(Disease = \"cancers12\", Sex = \"sex\"),               cor_threshold = 0.7,               verbose = FALSE) #> $data_summary #> $data_summary$na_percentage_col #> # A tibble: 91 × 2 #>    column   na_percentage #>    <chr>            <dbl> #>  1 ACE2               6.1 #>  2 ACTA2              6.1 #>  3 ACTN4              6.1 #>  4 ADAM15             6.1 #>  5 ADAMTS16           6.1 #>  6 ADH4               6.1 #>  7 AKR1C4             6.1 #>  8 AMBN               6.1 #>  9 AMN                6.1 #> 10 AOC1               6.1 #> # ℹ 81 more rows #>  #> $data_summary$na_col_hist #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.  #>  #> $data_summary$na_percentage_row #> # A tibble: 144 × 2 #>    DAid    na_percentage #>    <chr>           <dbl> #>  1 DA00450          57.4 #>  2 DA00482          53.5 #>  3 DA00542          53.5 #>  4 DA00003          50.5 #>  5 DA00463          46.5 #>  6 DA00116          43.6 #>  7 DA00475          42.6 #>  8 DA00578          42.6 #>  9 DA00443          41.6 #> 10 DA00476          35.6 #> # ℹ 134 more rows #>  #> $data_summary$na_row_hist #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.  #>  #> $data_summary$cor_matrix #>           AARSD1  ABL1 ACAA1  ACAN  ACE2 ACOX1  ACP5  ACP6 ACTA2 ACTN4  ACY1 #> AARSD1      1.00  0.47  0.19 -0.06  0.04  0.19  0.07  0.19  0.08  0.07  0.08 #> ABL1        0.47  1.00  0.46 -0.01  0.13  0.33  0.17  0.28  0.26  0.17  0.20 #> ACAA1       0.19  0.46  1.00  0.03  0.32  0.35  0.20  0.21  0.17  0.12  0.40 #> ACAN       -0.06 -0.01  0.03  1.00  0.07 -0.04  0.10  0.09  0.17  0.03  0.09 #> ACE2        0.04  0.13  0.32  0.07  1.00  0.02  0.24  0.13  0.28  0.08  0.49 #> ACOX1       0.19  0.33  0.35 -0.04  0.02  1.00  0.15  0.15  0.04  0.04  0.13 #> ACP5        0.07  0.17  0.20  0.10  0.24  0.15  1.00  0.12  0.16  0.00  0.30 #> ACP6        0.19  0.28  0.21  0.09  0.13  0.15  0.12  1.00  0.17  0.07  0.15 #> ACTA2       0.08  0.26  0.17  0.17  0.28  0.04  0.16  0.17  1.00  0.20  0.15 #> ACTN4       0.07  0.17  0.12  0.03  0.08  0.04  0.00  0.07  0.20  1.00  0.05 #> ACY1        0.08  0.20  0.40  0.09  0.49  0.13  0.30  0.15  0.15  0.05  1.00 #> ADA         0.32  0.43  0.30 -0.05  0.21  0.19  0.15  0.14  0.25  0.09  0.25 #> ADA2        0.12  0.21  0.08  0.11  0.13 -0.04  0.09  0.14  0.19  0.04  0.09 #> ADAM15      0.08  0.18  0.06  0.07  0.14  0.01  0.08  0.14  0.15  0.05  0.08 #> ADAM23      0.02  0.10 -0.10  0.10 -0.03 -0.03 -0.04  0.11  0.00  0.06 -0.06 #> ADAM8       0.16  0.30  0.11  0.09  0.05  0.04  0.04  0.23  0.16  0.06  0.11 #> ADAMTS13   -0.05 -0.10 -0.06  0.06 -0.07  0.01 -0.03  0.00 -0.19 -0.03  0.00 #> ADAMTS15    0.04  0.09  0.05  0.03  0.07  0.00  0.07  0.14  0.21  0.05  0.08 #> ADAMTS16    0.09  0.09  0.05  0.04  0.06  0.00 -0.02  0.09  0.18  0.04 -0.03 #> ADAMTS8    -0.08 -0.08 -0.24  0.09 -0.25 -0.13 -0.19 -0.10 -0.18 -0.02 -0.30 #> ADCYAP1R1   0.03 -0.04  0.00  0.02 -0.01  0.00 -0.08  0.07 -0.04  0.01  0.00 #> ADGRE2      0.18  0.32  0.04  0.13  0.11  0.01  0.01  0.11  0.15  0.09  0.12 #> ADGRE5      0.16  0.29  0.02  0.08  0.07 -0.05  0.01  0.06  0.12  0.11  0.10 #> ADGRG1      0.16  0.19  0.13 -0.05  0.20  0.05  0.08  0.08  0.19  0.07  0.20 #> ADGRG2     -0.01 -0.03 -0.08  0.11 -0.10 -0.06 -0.04  0.01 -0.18 -0.03 -0.13 #> ADH4       -0.02  0.04  0.29  0.08  0.28 -0.03  0.11  0.08 -0.02  0.03  0.50 #> ADM         0.11  0.24  0.13  0.12  0.16  0.01  0.16  0.15  0.33  0.06  0.11 #> AGER       -0.02  0.09 -0.03  0.10 -0.07  0.00 -0.08  0.09  0.12  0.02 -0.18 #> AGR2        0.02  0.07  0.05  0.16  0.08  0.03  0.05  0.15  0.18  0.05  0.00 #> AGR3        0.08  0.05  0.05  0.17  0.07  0.04  0.02  0.11  0.05  0.03  0.07 #> AGRN        0.04  0.28  0.15  0.16  0.20  0.07  0.11  0.20  0.34  0.14  0.19 #> AGRP        0.14  0.33  0.15 -0.05  0.22  0.03  0.12  0.13  0.23  0.12  0.11 #> AGXT       -0.04  0.02  0.41  0.13  0.46  0.05  0.21  0.11  0.11  0.05  0.53 #> AHCY        0.32  0.60  0.53 -0.06  0.19  0.46  0.18  0.27  0.24  0.16  0.23 #> AHSP        0.34 -0.03 -0.10 -0.04  0.08 -0.10  0.06 -0.05 -0.04 -0.01  0.08 #> AIF1        0.28  0.43  0.33 -0.10  0.09  0.29  0.08  0.16  0.08  0.10  0.11 #> AIFM1       0.29  0.53  0.56 -0.10  0.16  0.56  0.22  0.22  0.14  0.09  0.26 #> AK1         0.44  0.28  0.34 -0.06  0.03  0.26  0.07  0.13  0.04  0.06  0.08 #> AKR1B1      0.32  0.46  0.40 -0.07  0.06  0.32  0.08  0.19  0.16  0.04  0.05 #> AKR1C4     -0.01  0.03  0.18  0.07  0.17  0.10  0.08  0.04  0.14  0.05  0.18 #> AKT1S1      0.51  0.56  0.43 -0.12  0.06  0.35  0.15  0.20  0.10  0.07  0.12 #> AKT3        0.22  0.43  0.41 -0.08  0.00  0.43  0.07  0.23  0.08  0.16  0.04 #> ALCAM       0.02  0.15  0.00  0.13  0.09  0.01  0.11  0.06  0.08  0.02  0.09 #> ALDH1A1     0.26  0.12  0.34  0.04  0.33  0.07  0.18  0.08  0.05  0.02  0.42 #> ALDH3A1     0.13  0.15  0.21  0.10  0.28  0.05  0.13  0.07  0.09  0.02  0.24 #> ALPP       -0.04 -0.11  0.01 -0.01 -0.01 -0.07  0.04 -0.01 -0.06  0.01 -0.02 #> AMBN       -0.01  0.00 -0.06 -0.02 -0.07 -0.06 -0.03  0.05  0.04  0.05 -0.04 #> AMBP        0.00  0.13  0.00  0.05 -0.02  0.02  0.08  0.09  0.15  0.04  0.02 #> AMFR        0.29  0.52  0.28  0.07  0.21  0.18  0.18  0.24  0.25  0.20  0.24 #> AMIGO2      0.12  0.16  0.07  0.04  0.00  0.02 -0.01  0.09  0.08  0.04  0.03 #> AMN         0.02  0.05  0.12 -0.05  0.11  0.09  0.10  0.14  0.07  0.06  0.04 #> AMY2A       0.07 -0.02 -0.06  0.07 -0.01 -0.01  0.01  0.05  0.04  0.04 -0.02 #> AMY2B       0.03 -0.01 -0.02  0.06 -0.04  0.01  0.07  0.07  0.03  0.06  0.02 #> ANG         0.16  0.20  0.12  0.08  0.01  0.11  0.06  0.09  0.12  0.09  0.09 #> ANGPT1      0.25  0.18  0.26 -0.02 -0.04  0.33  0.08  0.15 -0.01  0.04  0.08 #> ANGPT2      0.13  0.29  0.11  0.00  0.10  0.03  0.05  0.06  0.22  0.06  0.05 #> ANGPTL1    -0.01  0.12  0.17  0.11  0.28  0.00  0.18  0.09  0.29  0.10  0.19 #> ANGPTL2     0.10  0.20  0.21 -0.02  0.18  0.11  0.17  0.15  0.11  0.05  0.20 #> ANGPTL3    -0.02  0.04  0.00  0.18  0.01 -0.02  0.06  0.09  0.11  0.09 -0.06 #> ANGPTL4     0.06  0.31  0.19  0.09  0.19  0.12  0.14  0.11  0.32  0.10  0.24 #> ANGPTL7    -0.04 -0.09  0.00  0.24  0.11 -0.07  0.05  0.04  0.12  0.10  0.05 #> ANKRD54     0.46  0.36  0.21 -0.09  0.08  0.23  0.06  0.18  0.08  0.07  0.07 #> ANPEP      -0.01  0.00  0.15  0.10  0.31  0.02  0.14  0.08  0.14  0.10  0.25 #> ANXA10     -0.05  0.04  0.01  0.13  0.07  0.03  0.08  0.10  0.18  0.10  0.03 #> ANXA11      0.24  0.39  0.28 -0.02 -0.03  0.32  0.08  0.19  0.00  0.04  0.00 #> ANXA3       0.25  0.35  0.42 -0.08 -0.02  0.42  0.13  0.14  0.02  0.04  0.05 #> ANXA4       0.34  0.49  0.39 -0.02 -0.03  0.47  0.09  0.17  0.06  0.08  0.07 #> ANXA5       0.03  0.15  0.11  0.02  0.18  0.08  0.11  0.10  0.16  0.15  0.18 #> AOC1        0.03  0.00  0.06 -0.02  0.03  0.09  0.07  0.04  0.03  0.06  0.04 #> AOC3        0.09 -0.08 -0.10  0.15 -0.03 -0.09 -0.06 -0.01 -0.08 -0.06 -0.10 #> APBB1IP     0.38  0.64  0.31 -0.01  0.19  0.13  0.13  0.20  0.25  0.11  0.27 #> APEX1       0.46  0.63  0.32 -0.01  0.13  0.21  0.07  0.22  0.19  0.10  0.21 #> APLP1      -0.24 -0.24 -0.16  0.20 -0.06 -0.17 -0.08 -0.09 -0.06 -0.01 -0.06 #> APOH        0.08  0.16  0.04  0.05  0.04  0.04  0.04  0.11  0.12  0.07 -0.01 #> APOM       -0.07 -0.18 -0.13  0.05 -0.20 -0.09 -0.13 -0.08 -0.18 -0.07 -0.12 #> APP         0.24  0.30  0.27 -0.06 -0.03  0.39  0.09  0.18  0.07  0.02  0.02 #> AREG        0.06  0.18  0.25  0.02  0.31  0.05  0.15  0.19  0.41  0.11  0.25 #> ARG1        0.27 -0.05 -0.02  0.03 -0.01 -0.12 -0.01 -0.05 -0.02 -0.02  0.06 #> ARHGAP1     0.19  0.36  0.36 -0.04  0.02  0.26  0.05  0.17  0.06  0.07  0.05 #> ARHGAP25    0.37  0.59  0.31  0.00  0.10  0.24  0.06  0.15  0.19  0.15  0.15 #> ARHGEF12    0.35  0.51  0.44 -0.07  0.07  0.50  0.13  0.26  0.06  0.06  0.11 #> ARID4B      0.39  0.52  0.14  0.05  0.16  0.01  0.07  0.19  0.21  0.12  0.20 #> ARNT        0.07  0.21  0.08  0.05  0.05  0.00  0.00  0.09  0.10  0.08  0.12 #> ARSA        0.15  0.33  0.28 -0.01  0.23  0.30  0.17  0.21  0.24  0.05  0.24 #> ARSB        0.35  0.50  0.43 -0.13  0.05  0.48  0.16  0.25  0.10  0.07  0.18 #> ART3       -0.06  0.09  0.00  0.18  0.12  0.01  0.09  0.15  0.19  0.09  0.02 #> ARTN        0.18  0.23  0.11 -0.04  0.08  0.09  0.09  0.14  0.15  0.05  0.04 #> ATF2        0.22  0.31  0.17 -0.03  0.07  0.03  0.05  0.08  0.14  0.06  0.15 #> ATG4A       0.51  0.28  0.29 -0.04  0.05  0.23  0.07  0.10  0.02  0.04  0.07 #> ATOX1       0.31  0.52  0.42 -0.03  0.09  0.35  0.14  0.27  0.23  0.11  0.13 #> ATP5IF1     0.25  0.48  0.44 -0.11  0.07  0.49  0.15  0.24  0.10  0.02  0.11 #> ATP5PO      0.04  0.12  0.22  0.00  0.05  0.21  0.03  0.09  0.05  0.02  0.07 #> ATP6AP2     0.09  0.22  0.16  0.15  0.13  0.16  0.10  0.13  0.23  0.06  0.09 #> ATP6V1D     0.07  0.12  0.17 -0.04  0.00  0.07  0.03  0.03  0.00 -0.03  0.06 #> ATP6V1F     0.39  0.47  0.39 -0.08  0.09  0.33  0.12  0.14  0.23  0.09  0.07 #> ATXN10      0.31  0.56  0.39 -0.08  0.10  0.31  0.10  0.23  0.14  0.15  0.15 #> AXIN1       0.38  0.62  0.44 -0.08  0.07  0.48  0.17  0.25  0.09  0.08  0.15 #> AXL         0.01  0.18  0.07  0.15  0.16  0.06  0.19  0.11  0.12  0.05  0.15 #> AZU1        0.16  0.24  0.19 -0.07  0.24  0.07  0.12 -0.01  0.19  0.06  0.21 #> B4GALT1     0.16  0.32  0.15  0.10  0.26  0.07  0.14  0.21  0.31  0.12  0.19 #>             ADA  ADA2 ADAM15 ADAM23 ADAM8 ADAMTS13 ADAMTS15 ADAMTS16 ADAMTS8 #> AARSD1     0.32  0.12   0.08   0.02  0.16    -0.05     0.04     0.09   -0.08 #> ABL1       0.43  0.21   0.18   0.10  0.30    -0.10     0.09     0.09   -0.08 #> ACAA1      0.30  0.08   0.06  -0.10  0.11    -0.06     0.05     0.05   -0.24 #> ACAN      -0.05  0.11   0.07   0.10  0.09     0.06     0.03     0.04    0.09 #> ACE2       0.21  0.13   0.14  -0.03  0.05    -0.07     0.07     0.06   -0.25 #> ACOX1      0.19 -0.04   0.01  -0.03  0.04     0.01     0.00     0.00   -0.13 #> ACP5       0.15  0.09   0.08  -0.04  0.04    -0.03     0.07    -0.02   -0.19 #> ACP6       0.14  0.14   0.14   0.11  0.23     0.00     0.14     0.09   -0.10 #> ACTA2      0.25  0.19   0.15   0.00  0.16    -0.19     0.21     0.18   -0.18 #> ACTN4      0.09  0.04   0.05   0.06  0.06    -0.03     0.05     0.04   -0.02 #> ACY1       0.25  0.09   0.08  -0.06  0.11     0.00     0.08    -0.03   -0.30 #> ADA        1.00  0.21   0.12   0.04  0.19    -0.07     0.08    -0.02   -0.20 #> ADA2       0.21  1.00   0.24   0.12  0.21    -0.02     0.24     0.11    0.02 #> ADAM15     0.12  0.24   1.00   0.12  0.26     0.03     0.08     0.10    0.02 #> ADAM23     0.04  0.12   0.12   1.00  0.09     0.01     0.13     0.01    0.22 #> ADAM8      0.19  0.21   0.26   0.09  1.00     0.02     0.08     0.04   -0.09 #> ADAMTS13  -0.07 -0.02   0.03   0.01  0.02     1.00    -0.06    -0.12    0.13 #> ADAMTS15   0.08  0.24   0.08   0.13  0.08    -0.06     1.00     0.24    0.05 #> ADAMTS16  -0.02  0.11   0.10   0.01  0.04    -0.12     0.24     1.00    0.05 #> ADAMTS8   -0.20  0.02   0.02   0.22 -0.09     0.13     0.05     0.05    1.00 #> ADCYAP1R1 -0.07 -0.07   0.08   0.05 -0.05     0.09     0.03    -0.05    0.01 #> ADGRE2     0.21  0.33   0.21   0.20  0.28     0.04     0.11     0.06    0.10 #> ADGRE5     0.25  0.34   0.26   0.22  0.26     0.04     0.10     0.06    0.12 #> ADGRG1     0.22  0.40   0.20   0.08  0.12    -0.09     0.21     0.13   -0.04 #> ADGRG2    -0.06  0.02   0.09   0.17  0.09     0.14     0.05    -0.06    0.28 #> ADH4       0.07  0.08   0.02   0.07  0.00     0.08     0.14     0.04   -0.03 #> ADM        0.13  0.16   0.12   0.08  0.21    -0.11     0.21     0.13   -0.11 #> AGER       0.02  0.11   0.09   0.20  0.11     0.02     0.18     0.06    0.29 #> AGR2      -0.16  0.05   0.08   0.06  0.05    -0.04     0.05     0.10   -0.06 #> AGR3       0.02  0.11   0.08   0.10  0.00     0.03     0.13     0.06    0.10 #> AGRN       0.15  0.25   0.19   0.10  0.24    -0.04     0.31     0.14   -0.03 #> AGRP       0.27  0.21   0.16   0.08  0.16    -0.05     0.31     0.07   -0.10 #> AGXT       0.15  0.03   0.02   0.01  0.05     0.08     0.04    -0.06   -0.15 #> AHCY       0.38  0.09   0.08  -0.07  0.16    -0.14     0.00     0.15   -0.25 #> AHSP       0.13 -0.04  -0.02   0.00 -0.03     0.00    -0.01    -0.08   -0.04 #> AIF1       0.28  0.14   0.05   0.00  0.14    -0.03     0.01     0.07   -0.09 #> AIFM1      0.30  0.08   0.04  -0.09  0.06    -0.01     0.12     0.11   -0.15 #> AK1        0.20 -0.02  -0.01  -0.13  0.02    -0.08     0.01     0.06   -0.15 #> AKR1B1     0.22  0.09   0.11  -0.05  0.11    -0.08    -0.02     0.09   -0.18 #> AKR1C4    -0.03  0.05   0.09   0.04  0.03     0.02     0.11     0.09    0.03 #> AKT1S1     0.33  0.08   0.09  -0.02  0.16    -0.01    -0.02     0.03   -0.14 #> AKT3       0.11  0.06   0.08  -0.04  0.10     0.04    -0.02     0.11   -0.12 #> ALCAM      0.11  0.17   0.21   0.10  0.23     0.12     0.01     0.06    0.01 #> ALDH1A1    0.22  0.06   0.02   0.00  0.05     0.02     0.09     0.00   -0.11 #> ALDH3A1    0.11  0.13   0.02   0.02  0.09    -0.10     0.10    -0.02   -0.06 #> ALPP      -0.16  0.01   0.01   0.02 -0.02    -0.10     0.06     0.18    0.10 #> AMBN       0.02  0.03  -0.01   0.10 -0.01     0.09    -0.07    -0.07    0.01 #> AMBP       0.01  0.05   0.00   0.07  0.07    -0.02     0.13     0.13    0.02 #> AMFR       0.35  0.15   0.18   0.06  0.30    -0.06     0.08     0.06   -0.11 #> AMIGO2     0.08  0.18   0.12   0.18  0.15     0.06     0.21     0.03    0.12 #> AMN        0.13  0.08   0.06   0.00  0.01     0.05     0.21     0.12    0.04 #> AMY2A     -0.05 -0.06   0.05   0.01  0.03     0.04    -0.02    -0.03    0.04 #> AMY2B     -0.05 -0.03   0.00   0.04  0.06     0.06    -0.01    -0.01   -0.01 #> ANG        0.09  0.12   0.10  -0.01  0.11     0.01     0.15     0.05   -0.01 #> ANGPT1     0.02 -0.07  -0.05  -0.08  0.01     0.05    -0.01     0.07   -0.11 #> ANGPT2     0.27  0.19   0.15   0.13  0.21    -0.09     0.17     0.13    0.04 #> ANGPTL1    0.19  0.14   0.08   0.02  0.09    -0.03     0.21     0.12   -0.06 #> ANGPTL2    0.19  0.24   0.19   0.09  0.13     0.02     0.25     0.12   -0.04 #> ANGPTL3    0.04  0.08   0.02   0.03  0.06     0.01     0.15     0.12    0.06 #> ANGPTL4    0.22  0.21   0.17   0.02  0.21    -0.11     0.19     0.20   -0.16 #> ANGPTL7   -0.04  0.02  -0.01   0.04 -0.06     0.03     0.01    -0.06    0.08 #> ANKRD54    0.26  0.07   0.05  -0.02  0.08     0.03     0.03    -0.02   -0.06 #> ANPEP      0.11  0.06   0.12   0.03  0.16     0.03     0.06    -0.03   -0.13 #> ANXA10    -0.07  0.04   0.03   0.06  0.01    -0.04     0.04     0.01    0.00 #> ANXA11     0.07  0.03   0.03   0.03  0.08    -0.04     0.04     0.10   -0.08 #> ANXA3      0.10 -0.02   0.03  -0.09  0.02    -0.02    -0.01     0.10   -0.15 #> ANXA4      0.21  0.03   0.06  -0.07  0.09    -0.06    -0.01     0.08   -0.08 #> ANXA5      0.12  0.04   0.06   0.10  0.09    -0.07    -0.02     0.02   -0.09 #> AOC1       0.01 -0.04   0.00   0.05 -0.03    -0.01     0.00    -0.06   -0.07 #> AOC3      -0.06  0.14   0.00   0.19  0.01     0.06     0.06     0.07    0.20 #> APBB1IP    0.49  0.24   0.20   0.08  0.33    -0.10     0.08    -0.01   -0.13 #> APEX1      0.40  0.27   0.21   0.05  0.34    -0.06     0.04     0.04   -0.09 #> APLP1     -0.13 -0.09  -0.03   0.04 -0.06     0.15    -0.10    -0.09    0.13 #> APOH       0.05  0.04   0.08   0.14  0.03     0.05     0.19     0.10    0.14 #> APOM      -0.11 -0.17  -0.11   0.01 -0.16     0.16    -0.06     0.00    0.15 #> APP        0.03 -0.10   0.01  -0.08  0.03     0.00    -0.01     0.08   -0.13 #> AREG       0.15  0.16   0.12  -0.05  0.12    -0.14     0.12     0.05   -0.27 #> ARG1       0.09 -0.06  -0.06  -0.01 -0.06     0.03     0.02    -0.05   -0.03 #> ARHGAP1    0.18  0.04   0.08   0.01  0.09     0.01    -0.01     0.08   -0.05 #> ARHGAP25   0.33  0.16   0.19   0.07  0.32    -0.02    -0.01     0.01   -0.02 #> ARHGEF12   0.14  0.00   0.03  -0.04  0.04     0.04     0.01     0.09   -0.10 #> ARID4B     0.28  0.24   0.18   0.09  0.37    -0.03    -0.01     0.02   -0.04 #> ARNT       0.18  0.13   0.08   0.06  0.10     0.00     0.04    -0.06    0.01 #> ARSA       0.25  0.20   0.12   0.04  0.10    -0.07     0.11     0.12   -0.15 #> ARSB       0.29  0.02   0.10  -0.04  0.03    -0.06     0.05     0.10   -0.15 #> ART3      -0.01  0.03   0.07   0.06  0.09     0.04     0.07     0.01   -0.01 #> ARTN       0.23  0.19   0.07   0.02  0.09    -0.07     0.18     0.02   -0.06 #> ATF2       0.17  0.17   0.18   0.07  0.15    -0.04    -0.05     0.03   -0.09 #> ATG4A      0.20 -0.03  -0.03  -0.05 -0.01    -0.04    -0.01     0.05   -0.12 #> ATOX1      0.22  0.15   0.18   0.03  0.23    -0.10     0.09     0.12   -0.08 #> ATP5IF1    0.23  0.05   0.05  -0.04  0.08    -0.02     0.06     0.07   -0.11 #> ATP5PO     0.02 -0.03   0.07  -0.04 -0.02    -0.01     0.04     0.03    0.04 #> ATP6AP2    0.16  0.10   0.08  -0.05  0.12    -0.08     0.12     0.09   -0.07 #> ATP6V1D    0.07  0.00  -0.01  -0.04 -0.04     0.01    -0.02     0.04    0.01 #> ATP6V1F    0.32  0.00   0.06  -0.03  0.08    -0.11    -0.01     0.11   -0.17 #> ATXN10     0.30  0.04   0.14   0.02  0.23    -0.05    -0.01     0.07   -0.11 #> AXIN1      0.23  0.04   0.12  -0.02  0.13     0.00    -0.01     0.04   -0.10 #> AXL        0.12  0.14   0.15   0.15  0.25    -0.01     0.16     0.07    0.00 #> AZU1       0.36  0.10  -0.01  -0.01  0.08    -0.15     0.08    -0.05   -0.29 #> B4GALT1    0.30  0.22   0.20   0.06  0.32    -0.08     0.19     0.11   -0.11 #>           ADCYAP1R1 ADGRE2 ADGRE5 ADGRG1 ADGRG2  ADH4   ADM  AGER  AGR2  AGR3 #> AARSD1         0.03   0.18   0.16   0.16  -0.01 -0.02  0.11 -0.02  0.02  0.08 #> ABL1          -0.04   0.32   0.29   0.19  -0.03  0.04  0.24  0.09  0.07  0.05 #> ACAA1          0.00   0.04   0.02   0.13  -0.08  0.29  0.13 -0.03  0.05  0.05 #> ACAN           0.02   0.13   0.08  -0.05   0.11  0.08  0.12  0.10  0.16  0.17 #> ACE2          -0.01   0.11   0.07   0.20  -0.10  0.28  0.16 -0.07  0.08  0.07 #> ACOX1          0.00   0.01  -0.05   0.05  -0.06 -0.03  0.01  0.00  0.03  0.04 #> ACP5          -0.08   0.01   0.01   0.08  -0.04  0.11  0.16 -0.08  0.05  0.02 #> ACP6           0.07   0.11   0.06   0.08   0.01  0.08  0.15  0.09  0.15  0.11 #> ACTA2         -0.04   0.15   0.12   0.19  -0.18 -0.02  0.33  0.12  0.18  0.05 #> ACTN4          0.01   0.09   0.11   0.07  -0.03  0.03  0.06  0.02  0.05  0.03 #> ACY1           0.00   0.12   0.10   0.20  -0.13  0.50  0.11 -0.18  0.00  0.07 #> ADA           -0.07   0.21   0.25   0.22  -0.06  0.07  0.13  0.02 -0.16  0.02 #> ADA2          -0.07   0.33   0.34   0.40   0.02  0.08  0.16  0.11  0.05  0.11 #> ADAM15         0.08   0.21   0.26   0.20   0.09  0.02  0.12  0.09  0.08  0.08 #> ADAM23         0.05   0.20   0.22   0.08   0.17  0.07  0.08  0.20  0.06  0.10 #> ADAM8         -0.05   0.28   0.26   0.12   0.09  0.00  0.21  0.11  0.05  0.00 #> ADAMTS13       0.09   0.04   0.04  -0.09   0.14  0.08 -0.11  0.02 -0.04  0.03 #> ADAMTS15       0.03   0.11   0.10   0.21   0.05  0.14  0.21  0.18  0.05  0.13 #> ADAMTS16      -0.05   0.06   0.06   0.13  -0.06  0.04  0.13  0.06  0.10  0.06 #> ADAMTS8        0.01   0.10   0.12  -0.04   0.28 -0.03 -0.11  0.29 -0.06  0.10 #> ADCYAP1R1      1.00  -0.01  -0.05  -0.07   0.01  0.03  0.00 -0.06 -0.01  0.00 #> ADGRE2        -0.01   1.00   0.49   0.24   0.11  0.15  0.09  0.14 -0.02  0.11 #> ADGRE5        -0.05   0.49   1.00   0.29   0.09  0.16  0.10  0.15 -0.04  0.14 #> ADGRG1        -0.07   0.24   0.29   1.00  -0.14  0.09  0.14  0.01  0.03  0.08 #> ADGRG2         0.01   0.11   0.09  -0.14   1.00 -0.04 -0.15  0.15 -0.01  0.03 #> ADH4           0.03   0.15   0.16   0.09  -0.04  1.00  0.00 -0.01  0.00  0.12 #> ADM            0.00   0.09   0.10   0.14  -0.15  0.00  1.00  0.11  0.16  0.16 #> AGER          -0.06   0.14   0.15   0.01   0.15 -0.01  0.11  1.00  0.04  0.08 #> AGR2          -0.01  -0.02  -0.04   0.03  -0.01  0.00  0.16  0.04  1.00  0.19 #> AGR3           0.00   0.11   0.14   0.08   0.03  0.12  0.16  0.08  0.19  1.00 #> AGRN          -0.06   0.23   0.20   0.24  -0.06  0.11  0.32  0.24  0.14  0.16 #> AGRP          -0.05   0.16   0.13   0.15  -0.04  0.01  0.21  0.09  0.08  0.11 #> AGXT           0.05   0.06   0.07   0.03  -0.08  0.57  0.07 -0.05  0.03  0.06 #> AHCY          -0.07   0.09   0.05   0.14  -0.17  0.02  0.21  0.00  0.06 -0.01 #> AHSP           0.04   0.04   0.05   0.03   0.03  0.03 -0.01 -0.09 -0.11  0.07 #> AIF1           0.02   0.15   0.15   0.14   0.00 -0.03  0.15  0.06 -0.01  0.08 #> AIFM1         -0.01   0.01  -0.03   0.13  -0.15  0.06  0.18  0.04  0.06  0.04 #> AK1            0.01  -0.10  -0.06   0.03  -0.07  0.00  0.05 -0.07  0.07 -0.01 #> AKR1B1         0.03   0.03   0.07   0.07  -0.06 -0.02  0.13  0.03  0.11  0.03 #> AKR1C4         0.03   0.06   0.09   0.07  -0.02  0.22  0.05  0.04  0.06  0.08 #> AKT1S1         0.01   0.10   0.07   0.11  -0.07 -0.04  0.14 -0.02  0.02 -0.01 #> AKT3          -0.06   0.00   0.01   0.01  -0.03 -0.01  0.04  0.03 -0.01  0.04 #> ALCAM         -0.02   0.19   0.31   0.14   0.13  0.07  0.06  0.08 -0.03  0.02 #> ALDH1A1        0.04   0.08   0.11   0.14  -0.04  0.41  0.07 -0.02  0.03  0.03 #> ALDH3A1       -0.03   0.10   0.13   0.11  -0.01  0.21  0.16 -0.04  0.06  0.11 #> ALPP           0.03  -0.07  -0.07   0.08   0.13 -0.01 -0.03 -0.02  0.10 -0.03 #> AMBN           0.09  -0.03   0.03  -0.02   0.02 -0.05  0.00  0.04  0.02  0.05 #> AMBP          -0.01  -0.01   0.01   0.09   0.01  0.02  0.21  0.11  0.04  0.06 #> AMFR           0.01   0.19   0.25   0.10  -0.02  0.10  0.17  0.06  0.03  0.04 #> AMIGO2         0.00   0.19   0.22   0.18   0.13  0.05  0.06  0.18  0.04  0.09 #> AMN            0.02   0.12   0.09   0.08  -0.01  0.12  0.09  0.06  0.05  0.11 #> AMY2A         -0.01  -0.01   0.00  -0.07   0.07 -0.01 -0.11  0.05  0.06  0.00 #> AMY2B         -0.04   0.05  -0.04  -0.09   0.08 -0.02 -0.04  0.05  0.02  0.04 #> ANG            0.00   0.09   0.07   0.08  -0.06  0.04  0.17  0.06  0.06  0.12 #> ANGPT1         0.05  -0.09  -0.17  -0.10  -0.01  0.03  0.08 -0.08  0.07  0.03 #> ANGPT2        -0.06   0.20   0.18   0.25   0.04  0.00  0.17  0.14  0.04  0.04 #> ANGPTL1       -0.04   0.06   0.12   0.07  -0.03  0.06  0.16  0.11  0.05  0.06 #> ANGPTL2       -0.07   0.14   0.17   0.23  -0.05  0.13  0.16  0.02  0.02  0.11 #> ANGPTL3        0.01   0.10   0.12  -0.05   0.16  0.01  0.10  0.11  0.09  0.05 #> ANGPTL4       -0.04   0.15   0.14   0.22  -0.11  0.07  0.24  0.05  0.10 -0.01 #> ANGPTL7       -0.04   0.07   0.03   0.00   0.06  0.01 -0.05  0.03  0.10  0.06 #> ANKRD54        0.08   0.07   0.10   0.04  -0.03  0.02  0.06 -0.02  0.02  0.02 #> ANPEP         -0.04   0.09   0.13  -0.01   0.07  0.14  0.07 -0.01 -0.01  0.02 #> ANXA10        -0.02   0.07   0.04   0.02  -0.01 -0.05  0.17  0.02  0.27  0.10 #> ANXA11         0.00   0.07   0.02   0.02  -0.02 -0.04  0.14  0.02  0.04  0.06 #> ANXA3          0.00  -0.05  -0.05  -0.02  -0.07 -0.02  0.03 -0.06  0.09  0.01 #> ANXA4          0.01   0.04   0.03   0.03  -0.01 -0.02  0.07  0.05  0.05  0.03 #> ANXA5          0.01   0.05   0.06   0.08   0.02  0.03  0.15  0.08  0.01 -0.02 #> AOC1           0.15  -0.01  -0.03  -0.02   0.00  0.05 -0.03 -0.03 -0.02  0.10 #> AOC3           0.06   0.11   0.11   0.11   0.21  0.04  0.03  0.16  0.00  0.11 #> APBB1IP       -0.06   0.37   0.37   0.19  -0.04  0.09  0.21  0.08 -0.02  0.08 #> APEX1         -0.01   0.33   0.29   0.22  -0.03  0.07  0.20  0.09  0.03  0.07 #> APLP1          0.04  -0.02   0.00  -0.08   0.09  0.00 -0.15  0.07 -0.04  0.01 #> APOH           0.00   0.13   0.12   0.07   0.11  0.05  0.13  0.16  0.06  0.06 #> APOM           0.09  -0.07  -0.07  -0.19   0.13  0.00 -0.14  0.02  0.03 -0.01 #> APP            0.01  -0.08  -0.18  -0.06  -0.05 -0.07  0.09 -0.03  0.16 -0.03 #> AREG          -0.02   0.05   0.01   0.17  -0.15  0.06  0.28  0.02  0.31  0.14 #> ARG1           0.05   0.02   0.01   0.03   0.06  0.08 -0.02 -0.05 -0.06  0.03 #> ARHGAP1        0.05   0.12   0.09   0.03   0.02  0.04  0.10  0.04 -0.01  0.07 #> ARHGAP25      -0.05   0.28   0.26   0.12   0.02  0.07  0.09  0.00  0.02  0.05 #> ARHGEF12       0.01  -0.01  -0.04  -0.01  -0.10 -0.01  0.14 -0.01  0.08  0.07 #> ARID4B        -0.02   0.35   0.37   0.15   0.03  0.06  0.14  0.02  0.07  0.05 #> ARNT           0.00   0.11   0.18   0.03  -0.01  0.07  0.00 -0.01 -0.01  0.00 #> ARSA           0.01   0.18   0.17   0.19  -0.13  0.06  0.12 -0.02  0.08  0.06 #> ARSB           0.01   0.07   0.01   0.11  -0.11  0.05  0.15  0.00  0.01  0.10 #> ART3          -0.05   0.06   0.02  -0.05  -0.03 -0.02  0.08  0.13  0.07  0.06 #> ARTN           0.04   0.20   0.16   0.12  -0.11  0.02  0.13  0.10  0.00  0.04 #> ATF2          -0.02   0.18   0.19   0.11   0.03  0.06  0.03  0.01  0.06 -0.02 #> ATG4A          0.02  -0.05  -0.05  -0.01  -0.07  0.04  0.07 -0.07  0.03  0.03 #> ATOX1          0.00   0.16   0.15   0.16  -0.01  0.02  0.22  0.07  0.09  0.06 #> ATP5IF1        0.03   0.00  -0.01   0.03  -0.05 -0.02  0.14  0.02  0.02  0.04 #> ATP5PO         0.13  -0.02  -0.01   0.04  -0.02 -0.01  0.08  0.05  0.07 -0.01 #> ATP6AP2       -0.02   0.14   0.09   0.11  -0.09  0.00  0.14  0.07  0.05  0.05 #> ATP6V1D       -0.04  -0.02   0.05   0.05   0.01  0.01  0.02  0.02 -0.03  0.09 #> ATP6V1F        0.00   0.08   0.02   0.14  -0.05 -0.05  0.15  0.05  0.07  0.01 #> ATXN10         0.01   0.16   0.11   0.11  -0.11  0.05  0.13 -0.01  0.03  0.00 #> AXIN1          0.00   0.10   0.09   0.06  -0.06  0.00  0.14 -0.01  0.04  0.05 #> AXL           -0.07   0.23   0.21   0.11   0.08  0.02  0.12  0.14  0.00  0.08 #> AZU1          -0.08   0.13   0.16   0.09  -0.11  0.03  0.10 -0.07 -0.02 -0.01 #> B4GALT1        0.01   0.23   0.22   0.15  -0.09  0.04  0.25  0.08 -0.05  0.06 #>            AGRN  AGRP  AGXT  AHCY  AHSP  AIF1 AIFM1   AK1 AKR1B1 AKR1C4 AKT1S1 #> AARSD1     0.04  0.14 -0.04  0.32  0.34  0.28  0.29  0.44   0.32  -0.01   0.51 #> ABL1       0.28  0.33  0.02  0.60 -0.03  0.43  0.53  0.28   0.46   0.03   0.56 #> ACAA1      0.15  0.15  0.41  0.53 -0.10  0.33  0.56  0.34   0.40   0.18   0.43 #> ACAN       0.16 -0.05  0.13 -0.06 -0.04 -0.10 -0.10 -0.06  -0.07   0.07  -0.12 #> ACE2       0.20  0.22  0.46  0.19  0.08  0.09  0.16  0.03   0.06   0.17   0.06 #> ACOX1      0.07  0.03  0.05  0.46 -0.10  0.29  0.56  0.26   0.32   0.10   0.35 #> ACP5       0.11  0.12  0.21  0.18  0.06  0.08  0.22  0.07   0.08   0.08   0.15 #> ACP6       0.20  0.13  0.11  0.27 -0.05  0.16  0.22  0.13   0.19   0.04   0.20 #> ACTA2      0.34  0.23  0.11  0.24 -0.04  0.08  0.14  0.04   0.16   0.14   0.10 #> ACTN4      0.14  0.12  0.05  0.16 -0.01  0.10  0.09  0.06   0.04   0.05   0.07 #> ACY1       0.19  0.11  0.53  0.23  0.08  0.11  0.26  0.08   0.05   0.18   0.12 #> ADA        0.15  0.27  0.15  0.38  0.13  0.28  0.30  0.20   0.22  -0.03   0.33 #> ADA2       0.25  0.21  0.03  0.09 -0.04  0.14  0.08 -0.02   0.09   0.05   0.08 #> ADAM15     0.19  0.16  0.02  0.08 -0.02  0.05  0.04 -0.01   0.11   0.09   0.09 #> ADAM23     0.10  0.08  0.01 -0.07  0.00  0.00 -0.09 -0.13  -0.05   0.04  -0.02 #> ADAM8      0.24  0.16  0.05  0.16 -0.03  0.14  0.06  0.02   0.11   0.03   0.16 #> ADAMTS13  -0.04 -0.05  0.08 -0.14  0.00 -0.03 -0.01 -0.08  -0.08   0.02  -0.01 #> ADAMTS15   0.31  0.31  0.04  0.00 -0.01  0.01  0.12  0.01  -0.02   0.11  -0.02 #> ADAMTS16   0.14  0.07 -0.06  0.15 -0.08  0.07  0.11  0.06   0.09   0.09   0.03 #> ADAMTS8   -0.03 -0.10 -0.15 -0.25 -0.04 -0.09 -0.15 -0.15  -0.18   0.03  -0.14 #> ADCYAP1R1 -0.06 -0.05  0.05 -0.07  0.04  0.02 -0.01  0.01   0.03   0.03   0.01 #> ADGRE2     0.23  0.16  0.06  0.09  0.04  0.15  0.01 -0.10   0.03   0.06   0.10 #> ADGRE5     0.20  0.13  0.07  0.05  0.05  0.15 -0.03 -0.06   0.07   0.09   0.07 #> ADGRG1     0.24  0.15  0.03  0.14  0.03  0.14  0.13  0.03   0.07   0.07   0.11 #> ADGRG2    -0.06 -0.04 -0.08 -0.17  0.03  0.00 -0.15 -0.07  -0.06  -0.02  -0.07 #> ADH4       0.11  0.01  0.57  0.02  0.03 -0.03  0.06  0.00  -0.02   0.22  -0.04 #> ADM        0.32  0.21  0.07  0.21 -0.01  0.15  0.18  0.05   0.13   0.05   0.14 #> AGER       0.24  0.09 -0.05  0.00 -0.09  0.06  0.04 -0.07   0.03   0.04  -0.02 #> AGR2       0.14  0.08  0.03  0.06 -0.11 -0.01  0.06  0.07   0.11   0.06   0.02 #> AGR3       0.16  0.11  0.06 -0.01  0.07  0.08  0.04 -0.01   0.03   0.08  -0.01 #> AGRN       1.00  0.25  0.15  0.16 -0.02  0.09  0.17 -0.03   0.10   0.13   0.08 #> AGRP       0.25  1.00  0.06  0.19  0.04  0.21  0.18  0.07   0.17   0.02   0.17 #> AGXT       0.15  0.06  1.00  0.07  0.10 -0.07  0.09 -0.01  -0.08   0.31  -0.09 #> AHCY       0.16  0.19  0.07  1.00 -0.20  0.44  0.64  0.35   0.57   0.06   0.56 #> AHSP      -0.02  0.04  0.10 -0.20  1.00 -0.07 -0.14  0.24  -0.15   0.00   0.10 #> AIF1       0.09  0.21 -0.07  0.44 -0.07  1.00  0.46  0.24   0.42  -0.04   0.43 #> AIFM1      0.17  0.18  0.09  0.64 -0.14  0.46  1.00  0.38   0.49   0.05   0.61 #> AK1       -0.03  0.07 -0.01  0.35  0.24  0.24  0.38  1.00   0.36   0.04   0.51 #> AKR1B1     0.10  0.17 -0.08  0.57 -0.15  0.42  0.49  0.36   1.00   0.00   0.55 #> AKR1C4     0.13  0.02  0.31  0.06  0.00 -0.04  0.05  0.04   0.00   1.00  -0.06 #> AKT1S1     0.08  0.17 -0.09  0.56  0.10  0.43  0.61  0.51   0.55  -0.06   1.00 #> AKT3       0.08  0.09 -0.08  0.48 -0.18  0.39  0.52  0.31   0.47   0.04   0.50 #> ALCAM      0.18  0.03  0.03  0.01  0.02  0.05 -0.04 -0.06   0.05   0.07   0.07 #> ALDH1A1    0.14  0.06  0.42  0.12  0.39  0.04  0.18  0.28   0.05   0.20   0.17 #> ALDH3A1    0.17  0.06  0.25  0.10  0.06  0.05  0.11  0.02   0.03   0.17   0.04 #> ALPP       0.05 -0.04 -0.08 -0.08  0.01 -0.06 -0.02  0.07   0.00  -0.01  -0.01 #> AMBN      -0.05  0.04 -0.07 -0.04 -0.01  0.02 -0.07 -0.05   0.03   0.01  -0.02 #> AMBP       0.20  0.09 -0.04  0.08 -0.07  0.05  0.12  0.04   0.05  -0.03   0.02 #> AMFR       0.18  0.20  0.10  0.36 -0.06  0.26  0.32  0.12   0.24   0.07   0.31 #> AMIGO2     0.21  0.06  0.02  0.07  0.02  0.08  0.08  0.02   0.10   0.03   0.11 #> AMN        0.12  0.09  0.06  0.07 -0.01  0.10  0.10  0.07   0.13   0.03   0.05 #> AMY2A      0.01  0.07  0.04 -0.07  0.05 -0.01 -0.05  0.02  -0.06   0.09  -0.05 #> AMY2B      0.03  0.01  0.06 -0.05  0.07 -0.01 -0.01  0.03  -0.09   0.05  -0.04 #> ANG        0.21  0.14  0.04  0.12  0.02  0.14  0.18  0.03   0.10  -0.04   0.14 #> ANGPT1    -0.03  0.01 -0.05  0.28 -0.02  0.24  0.42  0.43   0.34  -0.08   0.39 #> ANGPT2     0.21  0.26  0.00  0.22 -0.01  0.15  0.12 -0.01   0.15   0.04   0.14 #> ANGPTL1    0.30  0.16  0.22  0.18 -0.01  0.05  0.10  0.00   0.06   0.10   0.05 #> ANGPTL2    0.19  0.17  0.08  0.24 -0.05  0.14  0.32  0.08   0.16   0.03   0.19 #> ANGPTL3    0.16  0.06  0.01 -0.03 -0.07  0.03  0.01 -0.02   0.01   0.05  -0.03 #> ANGPTL4    0.32  0.22  0.12  0.29 -0.09  0.11  0.23  0.05   0.17   0.09   0.15 #> ANGPTL7    0.12 -0.02  0.08 -0.11  0.10 -0.10 -0.14 -0.09  -0.16   0.05  -0.12 #> ANKRD54    0.03  0.12 -0.01  0.25  0.26  0.26  0.30  0.39   0.27   0.04   0.39 #> ANPEP      0.12  0.02  0.25  0.07 -0.01 -0.02  0.03  0.01  -0.02   0.17  -0.02 #> ANXA10     0.09  0.03  0.02  0.04 -0.01 -0.02  0.00  0.04   0.01   0.05  -0.01 #> ANXA11     0.03  0.13 -0.12  0.47 -0.17  0.31  0.42  0.31   0.49  -0.01   0.47 #> ANXA3      0.00  0.08 -0.08  0.53 -0.18  0.42  0.59  0.47   0.58  -0.01   0.55 #> ANXA4      0.02  0.13 -0.05  0.56 -0.14  0.43  0.56  0.47   0.57   0.00   0.57 #> ANXA5      0.17  0.12  0.10  0.14  0.02  0.04  0.12  0.01   0.06   0.02   0.11 #> AOC1       0.04  0.02  0.07  0.03  0.00  0.10  0.07  0.04   0.10   0.04   0.07 #> AOC3      -0.01 -0.05 -0.01 -0.17  0.09  0.02 -0.12  0.01  -0.05   0.06  -0.12 #> APBB1IP    0.27  0.32  0.16  0.39  0.10  0.28  0.30  0.18   0.23   0.04   0.35 #> APEX1      0.19  0.23  0.10  0.44  0.02  0.39  0.35  0.22   0.38   0.05   0.42 #> APLP1      0.01 -0.16  0.11 -0.31  0.04 -0.20 -0.28 -0.25  -0.30   0.04  -0.30 #> APOH       0.13  0.14  0.02  0.05 -0.03  0.12  0.09  0.02   0.07   0.08   0.08 #> APOM      -0.14 -0.16 -0.07 -0.21  0.07 -0.03 -0.18  0.01  -0.13  -0.07  -0.09 #> APP        0.01  0.03 -0.11  0.38 -0.07  0.24  0.51  0.39   0.35  -0.07   0.44 #> AREG       0.23  0.20  0.19  0.20 -0.03  0.06  0.14  0.06   0.13   0.11   0.05 #> ARG1      -0.01 -0.03  0.09 -0.18  0.54 -0.03 -0.13  0.22  -0.14   0.08   0.03 #> ARHGAP1    0.06  0.14 -0.02  0.43 -0.05  0.33  0.41  0.29   0.43  -0.04   0.43 #> ARHGAP25   0.13  0.23  0.02  0.42 -0.10  0.38  0.36  0.18   0.37   0.01   0.43 #> ARHGEF12   0.07  0.10 -0.03  0.58 -0.13  0.41  0.71  0.46   0.58   0.00   0.65 #> ARID4B     0.12  0.16  0.08  0.26  0.10  0.18  0.15  0.07   0.20   0.01   0.30 #> ARNT       0.05  0.12  0.06  0.13 -0.02  0.05  0.05 -0.04   0.09   0.07   0.05 #> ARSA       0.25  0.18  0.15  0.34 -0.06  0.24  0.36  0.20   0.20   0.09   0.26 #> ARSB       0.14  0.17 -0.01  0.56 -0.10  0.45  0.69  0.38   0.47   0.00   0.56 #> ART3       0.20  0.12  0.06 -0.01  0.04  0.00 -0.03 -0.04  -0.05   0.03   0.00 #> ARTN       0.17  0.22  0.04  0.20 -0.03  0.17  0.11  0.03   0.13   0.08   0.11 #> ATF2       0.00  0.12  0.06  0.18  0.06  0.10  0.09  0.07   0.12   0.02   0.12 #> ATG4A     -0.05  0.07  0.00  0.29  0.31  0.26  0.33  0.57   0.40   0.02   0.55 #> ATOX1      0.21  0.16 -0.03  0.56 -0.16  0.36  0.52  0.36   0.54   0.00   0.55 #> ATP5IF1    0.07  0.12 -0.06  0.54 -0.10  0.44  0.76  0.39   0.57   0.00   0.61 #> ATP5PO     0.05 -0.01  0.05  0.14 -0.07  0.06  0.24  0.16   0.18   0.10   0.21 #> ATP6AP2    0.18  0.14  0.10  0.22 -0.05  0.11  0.15  0.05   0.17   0.09   0.07 #> ATP6V1D   -0.01 -0.03  0.00  0.08 -0.01  0.14  0.16  0.12   0.11  -0.03   0.10 #> ATP6V1F    0.06  0.16 -0.04  0.52  0.04  0.41  0.48  0.41   0.44   0.01   0.55 #> ATXN10     0.09  0.13  0.05  0.60 -0.16  0.45  0.50  0.25   0.49   0.01   0.49 #> AXIN1      0.09  0.17  0.01  0.60 -0.12  0.47  0.63  0.38   0.61  -0.02   0.66 #> AXL        0.25  0.19  0.08  0.07  0.05  0.01  0.05 -0.09   0.02   0.10   0.05 #> AZU1       0.14  0.30  0.14  0.23  0.19  0.18  0.12  0.16   0.10  -0.03   0.17 #> B4GALT1    0.35  0.26  0.18  0.25 -0.02  0.09  0.16 -0.01   0.14   0.08   0.13 #>            AKT3 ALCAM ALDH1A1 ALDH3A1  ALPP  AMBN  AMBP  AMFR AMIGO2   AMN #> AARSD1     0.22  0.02    0.26    0.13 -0.04 -0.01  0.00  0.29   0.12  0.02 #> ABL1       0.43  0.15    0.12    0.15 -0.11  0.00  0.13  0.52   0.16  0.05 #> ACAA1      0.41  0.00    0.34    0.21  0.01 -0.06  0.00  0.28   0.07  0.12 #> ACAN      -0.08  0.13    0.04    0.10 -0.01 -0.02  0.05  0.07   0.04 -0.05 #> ACE2       0.00  0.09    0.33    0.28 -0.01 -0.07 -0.02  0.21   0.00  0.11 #> ACOX1      0.43  0.01    0.07    0.05 -0.07 -0.06  0.02  0.18   0.02  0.09 #> ACP5       0.07  0.11    0.18    0.13  0.04 -0.03  0.08  0.18  -0.01  0.10 #> ACP6       0.23  0.06    0.08    0.07 -0.01  0.05  0.09  0.24   0.09  0.14 #> ACTA2      0.08  0.08    0.05    0.09 -0.06  0.04  0.15  0.25   0.08  0.07 #> ACTN4      0.16  0.02    0.02    0.02  0.01  0.05  0.04  0.20   0.04  0.06 #> ACY1       0.04  0.09    0.42    0.24 -0.02 -0.04  0.02  0.24   0.03  0.04 #> ADA        0.11  0.11    0.22    0.11 -0.16  0.02  0.01  0.35   0.08  0.13 #> ADA2       0.06  0.17    0.06    0.13  0.01  0.03  0.05  0.15   0.18  0.08 #> ADAM15     0.08  0.21    0.02    0.02  0.01 -0.01  0.00  0.18   0.12  0.06 #> ADAM23    -0.04  0.10    0.00    0.02  0.02  0.10  0.07  0.06   0.18  0.00 #> ADAM8      0.10  0.23    0.05    0.09 -0.02 -0.01  0.07  0.30   0.15  0.01 #> ADAMTS13   0.04  0.12    0.02   -0.10 -0.10  0.09 -0.02 -0.06   0.06  0.05 #> ADAMTS15  -0.02  0.01    0.09    0.10  0.06 -0.07  0.13  0.08   0.21  0.21 #> ADAMTS16   0.11  0.06    0.00   -0.02  0.18 -0.07  0.13  0.06   0.03  0.12 #> ADAMTS8   -0.12  0.01   -0.11   -0.06  0.10  0.01  0.02 -0.11   0.12  0.04 #> ADCYAP1R1 -0.06 -0.02    0.04   -0.03  0.03  0.09 -0.01  0.01   0.00  0.02 #> ADGRE2     0.00  0.19    0.08    0.10 -0.07 -0.03 -0.01  0.19   0.19  0.12 #> ADGRE5     0.01  0.31    0.11    0.13 -0.07  0.03  0.01  0.25   0.22  0.09 #> ADGRG1     0.01  0.14    0.14    0.11  0.08 -0.02  0.09  0.10   0.18  0.08 #> ADGRG2    -0.03  0.13   -0.04   -0.01  0.13  0.02  0.01 -0.02   0.13 -0.01 #> ADH4      -0.01  0.07    0.41    0.21 -0.01 -0.05  0.02  0.10   0.05  0.12 #> ADM        0.04  0.06    0.07    0.16 -0.03  0.00  0.21  0.17   0.06  0.09 #> AGER       0.03  0.08   -0.02   -0.04 -0.02  0.04  0.11  0.06   0.18  0.06 #> AGR2      -0.01 -0.03    0.03    0.06  0.10  0.02  0.04  0.03   0.04  0.05 #> AGR3       0.04  0.02    0.03    0.11 -0.03  0.05  0.06  0.04   0.09  0.11 #> AGRN       0.08  0.18    0.14    0.17  0.05 -0.05  0.20  0.18   0.21  0.12 #> AGRP       0.09  0.03    0.06    0.06 -0.04  0.04  0.09  0.20   0.06  0.09 #> AGXT      -0.08  0.03    0.42    0.25 -0.08 -0.07 -0.04  0.10   0.02  0.06 #> AHCY       0.48  0.01    0.12    0.10 -0.08 -0.04  0.08  0.36   0.07  0.07 #> AHSP      -0.18  0.02    0.39    0.06  0.01 -0.01 -0.07 -0.06   0.02 -0.01 #> AIF1       0.39  0.05    0.04    0.05 -0.06  0.02  0.05  0.26   0.08  0.10 #> AIFM1      0.52 -0.04    0.18    0.11 -0.02 -0.07  0.12  0.32   0.08  0.10 #> AK1        0.31 -0.06    0.28    0.02  0.07 -0.05  0.04  0.12   0.02  0.07 #> AKR1B1     0.47  0.05    0.05    0.03  0.00  0.03  0.05  0.24   0.10  0.13 #> AKR1C4     0.04  0.07    0.20    0.17 -0.01  0.01 -0.03  0.07   0.03  0.03 #> AKT1S1     0.50  0.07    0.17    0.04 -0.01 -0.02  0.02  0.31   0.11  0.05 #> AKT3       1.00  0.07   -0.01   -0.02 -0.07  0.04  0.05  0.22   0.03  0.04 #> ALCAM      0.07  1.00    0.07    0.04  0.04  0.01  0.05  0.13   0.18  0.07 #> ALDH1A1   -0.01  0.07    1.00    0.29  0.08 -0.04  0.01  0.11   0.06  0.04 #> ALDH3A1   -0.02  0.04    0.29    1.00  0.04  0.03  0.09  0.12   0.01  0.11 #> ALPP      -0.07  0.04    0.08    0.04  1.00 -0.01  0.14 -0.09   0.04 -0.03 #> AMBN       0.04  0.01   -0.04    0.03 -0.01  1.00  0.05 -0.01   0.03  0.04 #> AMBP       0.05  0.05    0.01    0.09  0.14  0.05  1.00  0.05   0.10  0.10 #> AMFR       0.22  0.13    0.11    0.12 -0.09 -0.01  0.05  1.00   0.08  0.10 #> AMIGO2     0.03  0.18    0.06    0.01  0.04  0.03  0.10  0.08   1.00  0.07 #> AMN        0.04  0.07    0.04    0.11 -0.03  0.04  0.10  0.10   0.07  1.00 #> AMY2A      0.03  0.03   -0.01   -0.06 -0.04 -0.03 -0.04  0.02  -0.01 -0.02 #> AMY2B     -0.01 -0.01   -0.02   -0.12  0.03 -0.01  0.07 -0.01   0.04 -0.07 #> ANG        0.10  0.00    0.01    0.10 -0.05 -0.01  0.13  0.06   0.05  0.06 #> ANGPT1     0.39 -0.07    0.09   -0.01  0.01  0.02  0.15  0.10   0.03  0.12 #> ANGPT2     0.05  0.12    0.06    0.07  0.09  0.02  0.16  0.19   0.13  0.09 #> ANGPTL1    0.02  0.12    0.15    0.09  0.03 -0.04  0.14  0.15  -0.01  0.10 #> ANGPTL2    0.15  0.07    0.13    0.12  0.08 -0.05  0.01  0.19   0.13  0.07 #> ANGPTL3   -0.01  0.05   -0.03   -0.01  0.10 -0.04  0.02  0.10   0.06  0.10 #> ANGPTL4    0.08  0.14    0.14    0.12 -0.03 -0.05  0.16  0.27   0.06  0.09 #> ANGPTL7   -0.06 -0.01    0.05    0.08 -0.04 -0.05  0.05  0.01  -0.02  0.00 #> ANKRD54    0.22  0.02    0.25    0.07 -0.06  0.01  0.01  0.27   0.05  0.07 #> ANPEP     -0.05  0.15    0.17    0.15 -0.02  0.01 -0.01  0.15   0.09  0.13 #> ANXA10    -0.05  0.06    0.06    0.04  0.01 -0.02  0.03  0.04  -0.01  0.03 #> ANXA11     0.44  0.04   -0.04    0.00 -0.06  0.04  0.14  0.19   0.10  0.10 #> ANXA3      0.52 -0.03    0.00   -0.06  0.06 -0.01  0.08  0.19   0.06  0.10 #> ANXA4      0.52  0.01    0.01    0.01 -0.01 -0.01  0.10  0.25   0.12  0.03 #> ANXA5      0.05  0.13    0.14    0.00  0.01  0.02  0.11  0.18  -0.04  0.01 #> AOC1       0.03 -0.04    0.07   -0.02 -0.02  0.13 -0.01  0.04   0.03  0.05 #> AOC3      -0.11  0.04    0.03    0.02  0.05  0.03  0.02 -0.06   0.13  0.05 #> APBB1IP    0.21  0.17    0.20    0.17 -0.17 -0.01  0.06  0.43   0.18  0.14 #> APEX1      0.28  0.19    0.10    0.17 -0.15  0.01  0.01  0.43   0.18  0.09 #> APLP1     -0.20  0.04   -0.09   -0.07 -0.11 -0.03 -0.10 -0.10  -0.03 -0.02 #> APOH       0.05  0.03    0.02    0.00  0.02  0.07  0.13  0.13   0.12  0.13 #> APOM      -0.07 -0.01   -0.04   -0.11  0.06  0.05  0.04 -0.20   0.04  0.04 #> APP        0.37 -0.10    0.06    0.03  0.06 -0.01  0.11  0.16   0.03  0.10 #> AREG       0.01  0.02    0.08    0.13 -0.01  0.02  0.05  0.11   0.07  0.04 #> ARG1      -0.16 -0.03    0.36    0.08  0.02  0.02 -0.04 -0.04   0.04  0.04 #> ARHGAP1    0.31  0.02    0.07    0.00 -0.06  0.00  0.04  0.18   0.15  0.16 #> ARHGAP25   0.33  0.12    0.05    0.06 -0.08 -0.02 -0.03  0.43   0.21  0.02 #> ARHGEF12   0.59  0.01    0.07    0.06 -0.02 -0.06  0.11  0.29   0.09  0.10 #> ARID4B     0.11  0.18    0.11    0.15 -0.12  0.01  0.03  0.46   0.13  0.01 #> ARNT       0.03  0.11    0.05    0.09 -0.09  0.07  0.00  0.18  -0.01  0.06 #> ARSA       0.22  0.03    0.13    0.16  0.04 -0.07  0.07  0.19   0.07  0.11 #> ARSB       0.51 -0.05    0.10    0.07 -0.04 -0.07  0.04  0.28   0.05  0.12 #> ART3       0.10  0.04    0.01    0.02 -0.14 -0.05  0.16  0.13   0.03  0.06 #> ARTN       0.05  0.05    0.01    0.08 -0.09  0.03  0.01  0.18   0.03  0.09 #> ATF2       0.10  0.14    0.06    0.05 -0.05  0.00  0.02  0.33   0.02 -0.03 #> ATG4A      0.31 -0.08    0.31    0.03 -0.01 -0.06 -0.03  0.16   0.06  0.04 #> ATOX1      0.44  0.09    0.08    0.12 -0.01  0.03  0.15  0.32   0.15  0.10 #> ATP5IF1    0.52  0.03    0.05   -0.03 -0.01 -0.05  0.10  0.29   0.08  0.10 #> ATP5PO     0.16  0.05    0.03    0.01  0.06  0.01  0.00  0.14   0.04  0.12 #> ATP6AP2    0.15  0.09    0.03    0.10 -0.05  0.00  0.11  0.16   0.12  0.07 #> ATP6V1D    0.11  0.01    0.04   -0.01  0.04 -0.01  0.10  0.02   0.08  0.02 #> ATP6V1F    0.42  0.05    0.14    0.03 -0.04 -0.07  0.03  0.34   0.04  0.07 #> ATXN10     0.44  0.08    0.03    0.07 -0.06  0.01  0.03  0.39   0.07  0.10 #> AXIN1      0.58  0.06    0.05    0.04 -0.10  0.00  0.10  0.32   0.13  0.09 #> AXL       -0.02  0.20    0.09    0.13 -0.01  0.05  0.02  0.15   0.05  0.08 #> AZU1       0.03  0.05    0.16    0.06 -0.07  0.00 -0.03  0.22  -0.07  0.11 #> B4GALT1    0.12  0.17    0.06    0.15 -0.09 -0.05  0.12  0.36   0.08  0.09 #>           AMY2A AMY2B   ANG ANGPT1 ANGPT2 ANGPTL1 ANGPTL2 ANGPTL3 ANGPTL4 #> AARSD1     0.07  0.03  0.16   0.25   0.13   -0.01    0.10   -0.02    0.06 #> ABL1      -0.02 -0.01  0.20   0.18   0.29    0.12    0.20    0.04    0.31 #> ACAA1     -0.06 -0.02  0.12   0.26   0.11    0.17    0.21    0.00    0.19 #> ACAN       0.07  0.06  0.08  -0.02   0.00    0.11   -0.02    0.18    0.09 #> ACE2      -0.01 -0.04  0.01  -0.04   0.10    0.28    0.18    0.01    0.19 #> ACOX1     -0.01  0.01  0.11   0.33   0.03    0.00    0.11   -0.02    0.12 #> ACP5       0.01  0.07  0.06   0.08   0.05    0.18    0.17    0.06    0.14 #> ACP6       0.05  0.07  0.09   0.15   0.06    0.09    0.15    0.09    0.11 #> ACTA2      0.04  0.03  0.12  -0.01   0.22    0.29    0.11    0.11    0.32 #> ACTN4      0.04  0.06  0.09   0.04   0.06    0.10    0.05    0.09    0.10 #> ACY1      -0.02  0.02  0.09   0.08   0.05    0.19    0.20   -0.06    0.24 #> ADA       -0.05 -0.05  0.09   0.02   0.27    0.19    0.19    0.04    0.22 #> ADA2      -0.06 -0.03  0.12  -0.07   0.19    0.14    0.24    0.08    0.21 #> ADAM15     0.05  0.00  0.10  -0.05   0.15    0.08    0.19    0.02    0.17 #> ADAM23     0.01  0.04 -0.01  -0.08   0.13    0.02    0.09    0.03    0.02 #> ADAM8      0.03  0.06  0.11   0.01   0.21    0.09    0.13    0.06    0.21 #> ADAMTS13   0.04  0.06  0.01   0.05  -0.09   -0.03    0.02    0.01   -0.11 #> ADAMTS15  -0.02 -0.01  0.15  -0.01   0.17    0.21    0.25    0.15    0.19 #> ADAMTS16  -0.03 -0.01  0.05   0.07   0.13    0.12    0.12    0.12    0.20 #> ADAMTS8    0.04 -0.01 -0.01  -0.11   0.04   -0.06   -0.04    0.06   -0.16 #> ADCYAP1R1 -0.01 -0.04  0.00   0.05  -0.06   -0.04   -0.07    0.01   -0.04 #> ADGRE2    -0.01  0.05  0.09  -0.09   0.20    0.06    0.14    0.10    0.15 #> ADGRE5     0.00 -0.04  0.07  -0.17   0.18    0.12    0.17    0.12    0.14 #> ADGRG1    -0.07 -0.09  0.08  -0.10   0.25    0.07    0.23   -0.05    0.22 #> ADGRG2     0.07  0.08 -0.06  -0.01   0.04   -0.03   -0.05    0.16   -0.11 #> ADH4      -0.01 -0.02  0.04   0.03   0.00    0.06    0.13    0.01    0.07 #> ADM       -0.11 -0.04  0.17   0.08   0.17    0.16    0.16    0.10    0.24 #> AGER       0.05  0.05  0.06  -0.08   0.14    0.11    0.02    0.11    0.05 #> AGR2       0.06  0.02  0.06   0.07   0.04    0.05    0.02    0.09    0.10 #> AGR3       0.00  0.04  0.12   0.03   0.04    0.06    0.11    0.05   -0.01 #> AGRN       0.01  0.03  0.21  -0.03   0.21    0.30    0.19    0.16    0.32 #> AGRP       0.07  0.01  0.14   0.01   0.26    0.16    0.17    0.06    0.22 #> AGXT       0.04  0.06  0.04  -0.05   0.00    0.22    0.08    0.01    0.12 #> AHCY      -0.07 -0.05  0.12   0.28   0.22    0.18    0.24   -0.03    0.29 #> AHSP       0.05  0.07  0.02  -0.02  -0.01   -0.01   -0.05   -0.07   -0.09 #> AIF1      -0.01 -0.01  0.14   0.24   0.15    0.05    0.14    0.03    0.11 #> AIFM1     -0.05 -0.01  0.18   0.42   0.12    0.10    0.32    0.01    0.23 #> AK1        0.02  0.03  0.03   0.43  -0.01    0.00    0.08   -0.02    0.05 #> AKR1B1    -0.06 -0.09  0.10   0.34   0.15    0.06    0.16    0.01    0.17 #> AKR1C4     0.09  0.05 -0.04  -0.08   0.04    0.10    0.03    0.05    0.09 #> AKT1S1    -0.05 -0.04  0.14   0.39   0.14    0.05    0.19   -0.03    0.15 #> AKT3       0.03 -0.01  0.10   0.39   0.05    0.02    0.15   -0.01    0.08 #> ALCAM      0.03 -0.01  0.00  -0.07   0.12    0.12    0.07    0.05    0.14 #> ALDH1A1   -0.01 -0.02  0.01   0.09   0.06    0.15    0.13   -0.03    0.14 #> ALDH3A1   -0.06 -0.12  0.10  -0.01   0.07    0.09    0.12   -0.01    0.12 #> ALPP      -0.04  0.03 -0.05   0.01   0.09    0.03    0.08    0.10   -0.03 #> AMBN      -0.03 -0.01 -0.01   0.02   0.02   -0.04   -0.05   -0.04   -0.05 #> AMBP      -0.04  0.07  0.13   0.15   0.16    0.14    0.01    0.02    0.16 #> AMFR       0.02 -0.01  0.06   0.10   0.19    0.15    0.19    0.10    0.27 #> AMIGO2    -0.01  0.04  0.05   0.03   0.13   -0.01    0.13    0.06    0.06 #> AMN       -0.02 -0.07  0.06   0.12   0.09    0.10    0.07    0.10    0.09 #> AMY2A      1.00  0.58  0.01   0.02  -0.08    0.02   -0.07    0.01   -0.04 #> AMY2B      0.58  1.00  0.08   0.06  -0.07    0.07   -0.08    0.04   -0.04 #> ANG        0.01  0.08  1.00   0.11   0.04    0.09    0.09    0.11    0.17 #> ANGPT1     0.02  0.06  0.11   1.00  -0.09   -0.04    0.12   -0.02    0.00 #> ANGPT2    -0.08 -0.07  0.04  -0.09   1.00    0.13    0.19    0.04    0.27 #> ANGPTL1    0.02  0.07  0.09  -0.04   0.13    1.00    0.11    0.08    0.20 #> ANGPTL2   -0.07 -0.08  0.09   0.12   0.19    0.11    1.00    0.06    0.16 #> ANGPTL3    0.01  0.04  0.11  -0.02   0.04    0.08    0.06    1.00    0.00 #> ANGPTL4   -0.04 -0.04  0.17   0.00   0.27    0.20    0.16    0.00    1.00 #> ANGPTL7    0.15  0.11  0.04  -0.10  -0.12    0.13   -0.10    0.11   -0.08 #> ANKRD54    0.00  0.01  0.13   0.15   0.06    0.07    0.10    0.02    0.10 #> ANPEP      0.00  0.01  0.02  -0.09   0.07    0.20    0.10    0.08    0.12 #> ANXA10     0.01  0.00  0.03   0.06  -0.01    0.11   -0.03    0.06    0.11 #> ANXA11    -0.02  0.02  0.09   0.41   0.12    0.00    0.12   -0.05    0.09 #> ANXA3      0.03  0.03  0.07   0.57  -0.02    0.00    0.18   -0.02    0.07 #> ANXA4      0.01  0.04  0.08   0.49   0.11   -0.01    0.17   -0.01    0.13 #> ANXA5     -0.08 -0.03  0.03  -0.02   0.09    0.10    0.06    0.01    0.16 #> AOC1      -0.01 -0.02  0.02   0.09  -0.02    0.03   -0.04    0.03   -0.01 #> AOC3       0.08  0.07  0.01  -0.05   0.03   -0.04   -0.05    0.09   -0.06 #> APBB1IP   -0.03 -0.02  0.14  -0.01   0.32    0.11    0.21    0.04    0.29 #> APEX1      0.03 -0.01  0.12   0.13   0.30    0.07    0.17    0.01    0.25 #> APLP1      0.07  0.05 -0.09  -0.42  -0.08   -0.02   -0.15    0.07   -0.15 #> APOH       0.04  0.07  0.12   0.04   0.15    0.13    0.03    0.12    0.14 #> APOM       0.06  0.07  0.00   0.04  -0.07   -0.10   -0.13    0.04   -0.12 #> APP        0.03  0.08  0.11   0.67  -0.04    0.00    0.09    0.05    0.09 #> AREG       0.07  0.08  0.11  -0.04   0.12    0.27    0.03   -0.02    0.24 #> ARG1       0.07  0.03 -0.03  -0.01   0.00   -0.04   -0.03    0.11   -0.07 #> ARHGAP1   -0.03  0.01  0.04   0.23   0.10    0.06    0.15    0.03    0.10 #> ARHGAP25   0.01 -0.04  0.11   0.13   0.25    0.06    0.20    0.06    0.16 #> ARHGEF12  -0.03  0.01  0.13   0.52   0.05    0.07    0.21   -0.06    0.13 #> ARID4B     0.01  0.02  0.05   0.02   0.24    0.11    0.13    0.02    0.22 #> ARNT       0.00 -0.04  0.03  -0.04   0.09    0.07    0.09    0.01    0.07 #> ARSA       0.01  0.01  0.14   0.18   0.11    0.16    0.14    0.04    0.19 #> ARSB       0.00 -0.01  0.17   0.46   0.11   -0.01    0.25   -0.01    0.15 #> ART3       0.07  0.18  0.10  -0.01  -0.02    0.15   -0.08    0.05    0.09 #> ARTN       0.02  0.00  0.15  -0.02   0.17    0.07    0.10   -0.03    0.17 #> ATF2       0.04  0.02  0.06   0.03   0.13    0.05    0.10    0.02    0.05 #> ATG4A      0.05  0.01  0.10   0.39  -0.03    0.00    0.09    0.00   -0.05 #> ATOX1     -0.04 -0.02  0.14   0.37   0.13    0.10    0.21   -0.01    0.20 #> ATP5IF1    0.00 -0.02  0.13   0.47   0.10    0.04    0.24   -0.02    0.18 #> ATP5PO    -0.02 -0.07  0.00   0.10   0.05    0.00    0.03    0.02    0.05 #> ATP6AP2   -0.02  0.00  0.14   0.08   0.12    0.07    0.09    0.09    0.17 #> ATP6V1D    0.00  0.03 -0.01   0.05  -0.02    0.00    0.01   -0.08    0.01 #> ATP6V1F   -0.02 -0.03  0.06   0.30   0.19    0.11    0.14   -0.01    0.20 #> ATXN10    -0.07 -0.03  0.10   0.28   0.15    0.05    0.20   -0.07    0.19 #> AXIN1      0.01  0.02  0.16   0.47   0.09    0.05    0.23   -0.04    0.12 #> AXL       -0.03  0.04 -0.03  -0.12   0.19    0.15    0.13    0.07    0.15 #> AZU1       0.01 -0.03  0.05   0.00   0.13    0.14    0.10   -0.01    0.24 #> B4GALT1   -0.03  0.03  0.18   0.00   0.23    0.21    0.21    0.08    0.28 #>           ANGPTL7 ANKRD54 ANPEP ANXA10 ANXA11 ANXA3 ANXA4 ANXA5  AOC1  AOC3 #> AARSD1      -0.04    0.46 -0.01  -0.05   0.24  0.25  0.34  0.03  0.03  0.09 #> ABL1        -0.09    0.36  0.00   0.04   0.39  0.35  0.49  0.15  0.00 -0.08 #> ACAA1        0.00    0.21  0.15   0.01   0.28  0.42  0.39  0.11  0.06 -0.10 #> ACAN         0.24   -0.09  0.10   0.13  -0.02 -0.08 -0.02  0.02 -0.02  0.15 #> ACE2         0.11    0.08  0.31   0.07  -0.03 -0.02 -0.03  0.18  0.03 -0.03 #> ACOX1       -0.07    0.23  0.02   0.03   0.32  0.42  0.47  0.08  0.09 -0.09 #> ACP5         0.05    0.06  0.14   0.08   0.08  0.13  0.09  0.11  0.07 -0.06 #> ACP6         0.04    0.18  0.08   0.10   0.19  0.14  0.17  0.10  0.04 -0.01 #> ACTA2        0.12    0.08  0.14   0.18   0.00  0.02  0.06  0.16  0.03 -0.08 #> ACTN4        0.10    0.07  0.10   0.10   0.04  0.04  0.08  0.15  0.06 -0.06 #> ACY1         0.05    0.07  0.25   0.03   0.00  0.05  0.07  0.18  0.04 -0.10 #> ADA         -0.04    0.26  0.11  -0.07   0.07  0.10  0.21  0.12  0.01 -0.06 #> ADA2         0.02    0.07  0.06   0.04   0.03 -0.02  0.03  0.04 -0.04  0.14 #> ADAM15      -0.01    0.05  0.12   0.03   0.03  0.03  0.06  0.06  0.00  0.00 #> ADAM23       0.04   -0.02  0.03   0.06   0.03 -0.09 -0.07  0.10  0.05  0.19 #> ADAM8       -0.06    0.08  0.16   0.01   0.08  0.02  0.09  0.09 -0.03  0.01 #> ADAMTS13     0.03    0.03  0.03  -0.04  -0.04 -0.02 -0.06 -0.07 -0.01  0.06 #> ADAMTS15     0.01    0.03  0.06   0.04   0.04 -0.01 -0.01 -0.02  0.00  0.06 #> ADAMTS16    -0.06   -0.02 -0.03   0.01   0.10  0.10  0.08  0.02 -0.06  0.07 #> ADAMTS8      0.08   -0.06 -0.13   0.00  -0.08 -0.15 -0.08 -0.09 -0.07  0.20 #> ADCYAP1R1   -0.04    0.08 -0.04  -0.02   0.00  0.00  0.01  0.01  0.15  0.06 #> ADGRE2       0.07    0.07  0.09   0.07   0.07 -0.05  0.04  0.05 -0.01  0.11 #> ADGRE5       0.03    0.10  0.13   0.04   0.02 -0.05  0.03  0.06 -0.03  0.11 #> ADGRG1       0.00    0.04 -0.01   0.02   0.02 -0.02  0.03  0.08 -0.02  0.11 #> ADGRG2       0.06   -0.03  0.07  -0.01  -0.02 -0.07 -0.01  0.02  0.00  0.21 #> ADH4         0.01    0.02  0.14  -0.05  -0.04 -0.02 -0.02  0.03  0.05  0.04 #> ADM         -0.05    0.06  0.07   0.17   0.14  0.03  0.07  0.15 -0.03  0.03 #> AGER         0.03   -0.02 -0.01   0.02   0.02 -0.06  0.05  0.08 -0.03  0.16 #> AGR2         0.10    0.02 -0.01   0.27   0.04  0.09  0.05  0.01 -0.02  0.00 #> AGR3         0.06    0.02  0.02   0.10   0.06  0.01  0.03 -0.02  0.10  0.11 #> AGRN         0.12    0.03  0.12   0.09   0.03  0.00  0.02  0.17  0.04 -0.01 #> AGRP        -0.02    0.12  0.02   0.03   0.13  0.08  0.13  0.12  0.02 -0.05 #> AGXT         0.08   -0.01  0.25   0.02  -0.12 -0.08 -0.05  0.10  0.07 -0.01 #> AHCY        -0.11    0.25  0.07   0.04   0.47  0.53  0.56  0.14  0.03 -0.17 #> AHSP         0.10    0.26 -0.01  -0.01  -0.17 -0.18 -0.14  0.02  0.00  0.09 #> AIF1        -0.10    0.26 -0.02  -0.02   0.31  0.42  0.43  0.04  0.10  0.02 #> AIFM1       -0.14    0.30  0.03   0.00   0.42  0.59  0.56  0.12  0.07 -0.12 #> AK1         -0.09    0.39  0.01   0.04   0.31  0.47  0.47  0.01  0.04  0.01 #> AKR1B1      -0.16    0.27 -0.02   0.01   0.49  0.58  0.57  0.06  0.10 -0.05 #> AKR1C4       0.05    0.04  0.17   0.05  -0.01 -0.01  0.00  0.02  0.04  0.06 #> AKT1S1      -0.12    0.39 -0.02  -0.01   0.47  0.55  0.57  0.11  0.07 -0.12 #> AKT3        -0.06    0.22 -0.05  -0.05   0.44  0.52  0.52  0.05  0.03 -0.11 #> ALCAM       -0.01    0.02  0.15   0.06   0.04 -0.03  0.01  0.13 -0.04  0.04 #> ALDH1A1      0.05    0.25  0.17   0.06  -0.04  0.00  0.01  0.14  0.07  0.03 #> ALDH3A1      0.08    0.07  0.15   0.04   0.00 -0.06  0.01  0.00 -0.02  0.02 #> ALPP        -0.04   -0.06 -0.02   0.01  -0.06  0.06 -0.01  0.01 -0.02  0.05 #> AMBN        -0.05    0.01  0.01  -0.02   0.04 -0.01 -0.01  0.02  0.13  0.03 #> AMBP         0.05    0.01 -0.01   0.03   0.14  0.08  0.10  0.11 -0.01  0.02 #> AMFR         0.01    0.27  0.15   0.04   0.19  0.19  0.25  0.18  0.04 -0.06 #> AMIGO2      -0.02    0.05  0.09  -0.01   0.10  0.06  0.12 -0.04  0.03  0.13 #> AMN          0.00    0.07  0.13   0.03   0.10  0.10  0.03  0.01  0.05  0.05 #> AMY2A        0.15    0.00  0.00   0.01  -0.02  0.03  0.01 -0.08 -0.01  0.08 #> AMY2B        0.11    0.01  0.01   0.00   0.02  0.03  0.04 -0.03 -0.02  0.07 #> ANG          0.04    0.13  0.02   0.03   0.09  0.07  0.08  0.03  0.02  0.01 #> ANGPT1      -0.10    0.15 -0.09   0.06   0.41  0.57  0.49 -0.02  0.09 -0.05 #> ANGPT2      -0.12    0.06  0.07  -0.01   0.12 -0.02  0.11  0.09 -0.02  0.03 #> ANGPTL1      0.13    0.07  0.20   0.11   0.00  0.00 -0.01  0.10  0.03 -0.04 #> ANGPTL2     -0.10    0.10  0.10  -0.03   0.12  0.18  0.17  0.06 -0.04 -0.05 #> ANGPTL3      0.11    0.02  0.08   0.06  -0.05 -0.02 -0.01  0.01  0.03  0.09 #> ANGPTL4     -0.08    0.10  0.12   0.11   0.09  0.07  0.13  0.16 -0.01 -0.06 #> ANGPTL7      1.00   -0.08  0.02   0.13  -0.13 -0.11 -0.16  0.09 -0.07  0.13 #> ANKRD54     -0.08    1.00 -0.03  -0.03   0.21  0.22  0.23  0.01  0.10 -0.02 #> ANPEP        0.02   -0.03  1.00   0.08  -0.11 -0.03 -0.07  0.09  0.02 -0.01 #> ANXA10       0.13   -0.03  0.08   1.00   0.05 -0.02 -0.02  0.09 -0.02  0.06 #> ANXA11      -0.13    0.21 -0.11   0.05   1.00  0.59  0.59  0.00  0.08  0.03 #> ANXA3       -0.11    0.22 -0.03  -0.02   0.59  1.00  0.69 -0.01  0.05 -0.08 #> ANXA4       -0.16    0.23 -0.07  -0.02   0.59  0.69  1.00  0.02 -0.03 -0.07 #> ANXA5        0.09    0.01  0.09   0.09   0.00 -0.01  0.02  1.00  0.07 -0.04 #> AOC1        -0.07    0.10  0.02  -0.02   0.08  0.05 -0.03  0.07  1.00  0.01 #> AOC3         0.13   -0.02 -0.01   0.06   0.03 -0.08 -0.07 -0.04  0.01  1.00 #> APBB1IP     -0.04    0.29  0.11   0.03   0.16  0.12  0.27  0.11 -0.05 -0.10 #> APEX1       -0.08    0.33  0.04   0.02   0.29  0.25  0.38  0.05  0.00 -0.01 #> APLP1        0.19   -0.14  0.05  -0.02  -0.30 -0.33 -0.30 -0.01  0.03  0.06 #> APOH         0.10    0.07  0.00   0.07   0.10  0.06  0.13  0.06 -0.09  0.02 #> APOM         0.06   -0.07 -0.05  -0.04  -0.03 -0.03  0.01 -0.11 -0.06  0.15 #> APP         -0.10    0.20 -0.04   0.09   0.38  0.55  0.50  0.02  0.06 -0.12 #> AREG         0.07    0.06  0.07   0.25   0.03  0.01  0.02  0.08  0.07 -0.08 #> ARG1         0.11    0.22  0.04  -0.02  -0.17 -0.16 -0.16 -0.01  0.03  0.10 #> ARHGAP1     -0.10    0.20  0.02   0.00   0.44  0.45  0.47  0.02  0.13 -0.03 #> ARHGAP25    -0.07    0.30  0.02   0.05   0.27  0.23  0.33  0.03  0.04 -0.03 #> ARHGEF12    -0.13    0.34 -0.03   0.01   0.62  0.70  0.68  0.04  0.05 -0.09 #> ARID4B      -0.01    0.24  0.02   0.06   0.16  0.03  0.15  0.13  0.00  0.01 #> ARNT        -0.05    0.09  0.07   0.02   0.05 -0.03  0.09  0.13 -0.02 -0.08 #> ARSA         0.04    0.11  0.08   0.11   0.13  0.27  0.25  0.12 -0.02 -0.11 #> ARSB        -0.17    0.29 -0.02   0.05   0.41  0.58  0.59  0.03  0.00 -0.09 #> ART3         0.24    0.00  0.07   0.05   0.05 -0.02 -0.07  0.05 -0.01 -0.01 #> ARTN        -0.02    0.05  0.01   0.06   0.07  0.06  0.15  0.00 -0.08  0.01 #> ATF2        -0.04    0.14 -0.01  -0.02   0.08  0.02  0.09  0.09 -0.01 -0.06 #> ATG4A        0.00    0.44 -0.08  -0.01   0.30  0.41  0.39 -0.01  0.09  0.01 #> ATOX1       -0.11    0.24  0.01   0.04   0.52  0.54  0.55  0.11  0.02 -0.05 #> ATP5IF1     -0.14    0.26 -0.01  -0.04   0.60  0.66  0.64  0.07  0.10 -0.11 #> ATP5PO      -0.01    0.14  0.01   0.02   0.17  0.18  0.20  0.03  0.05  0.05 #> ATP6AP2     -0.06    0.09  0.12   0.06   0.12  0.07  0.10  0.11  0.03 -0.02 #> ATP6V1D     -0.01    0.04 -0.05   0.01   0.04  0.11  0.09  0.00  0.03 -0.02 #> ATP6V1F     -0.08    0.34  0.03   0.02   0.30  0.44  0.45  0.10  0.04 -0.08 #> ATXN10      -0.16    0.24  0.01   0.02   0.38  0.41  0.46  0.10 -0.01 -0.10 #> AXIN1       -0.10    0.29 -0.04   0.01   0.61  0.67  0.69  0.04  0.05 -0.13 #> AXL          0.03   -0.08  0.14   0.01   0.07 -0.04 -0.01  0.10  0.00  0.04 #> AZU1         0.01    0.20  0.05  -0.01   0.04  0.12  0.07  0.10 -0.01 -0.11 #> B4GALT1      0.03    0.08  0.13   0.01   0.07  0.00  0.04  0.13 -0.01 -0.03 #>           APBB1IP APEX1 APLP1  APOH  APOM   APP  AREG  ARG1 ARHGAP1 ARHGAP25 #> AARSD1       0.38  0.46 -0.24  0.08 -0.07  0.24  0.06  0.27    0.19     0.37 #> ABL1         0.64  0.63 -0.24  0.16 -0.18  0.30  0.18 -0.05    0.36     0.59 #> ACAA1        0.31  0.32 -0.16  0.04 -0.13  0.27  0.25 -0.02    0.36     0.31 #> ACAN        -0.01 -0.01  0.20  0.05  0.05 -0.06  0.02  0.03   -0.04     0.00 #> ACE2         0.19  0.13 -0.06  0.04 -0.20 -0.03  0.31 -0.01    0.02     0.10 #> ACOX1        0.13  0.21 -0.17  0.04 -0.09  0.39  0.05 -0.12    0.26     0.24 #> ACP5         0.13  0.07 -0.08  0.04 -0.13  0.09  0.15 -0.01    0.05     0.06 #> ACP6         0.20  0.22 -0.09  0.11 -0.08  0.18  0.19 -0.05    0.17     0.15 #> ACTA2        0.25  0.19 -0.06  0.12 -0.18  0.07  0.41 -0.02    0.06     0.19 #> ACTN4        0.11  0.10 -0.01  0.07 -0.07  0.02  0.11 -0.02    0.07     0.15 #> ACY1         0.27  0.21 -0.06 -0.01 -0.12  0.02  0.25  0.06    0.05     0.15 #> ADA          0.49  0.40 -0.13  0.05 -0.11  0.03  0.15  0.09    0.18     0.33 #> ADA2         0.24  0.27 -0.09  0.04 -0.17 -0.10  0.16 -0.06    0.04     0.16 #> ADAM15       0.20  0.21 -0.03  0.08 -0.11  0.01  0.12 -0.06    0.08     0.19 #> ADAM23       0.08  0.05  0.04  0.14  0.01 -0.08 -0.05 -0.01    0.01     0.07 #> ADAM8        0.33  0.34 -0.06  0.03 -0.16  0.03  0.12 -0.06    0.09     0.32 #> ADAMTS13    -0.10 -0.06  0.15  0.05  0.16  0.00 -0.14  0.03    0.01    -0.02 #> ADAMTS15     0.08  0.04 -0.10  0.19 -0.06 -0.01  0.12  0.02   -0.01    -0.01 #> ADAMTS16    -0.01  0.04 -0.09  0.10  0.00  0.08  0.05 -0.05    0.08     0.01 #> ADAMTS8     -0.13 -0.09  0.13  0.14  0.15 -0.13 -0.27 -0.03   -0.05    -0.02 #> ADCYAP1R1   -0.06 -0.01  0.04  0.00  0.09  0.01 -0.02  0.05    0.05    -0.05 #> ADGRE2       0.37  0.33 -0.02  0.13 -0.07 -0.08  0.05  0.02    0.12     0.28 #> ADGRE5       0.37  0.29  0.00  0.12 -0.07 -0.18  0.01  0.01    0.09     0.26 #> ADGRG1       0.19  0.22 -0.08  0.07 -0.19 -0.06  0.17  0.03    0.03     0.12 #> ADGRG2      -0.04 -0.03  0.09  0.11  0.13 -0.05 -0.15  0.06    0.02     0.02 #> ADH4         0.09  0.07  0.00  0.05  0.00 -0.07  0.06  0.08    0.04     0.07 #> ADM          0.21  0.20 -0.15  0.13 -0.14  0.09  0.28 -0.02    0.10     0.09 #> AGER         0.08  0.09  0.07  0.16  0.02 -0.03  0.02 -0.05    0.04     0.00 #> AGR2        -0.02  0.03 -0.04  0.06  0.03  0.16  0.31 -0.06   -0.01     0.02 #> AGR3         0.08  0.07  0.01  0.06 -0.01 -0.03  0.14  0.03    0.07     0.05 #> AGRN         0.27  0.19  0.01  0.13 -0.14  0.01  0.23 -0.01    0.06     0.13 #> AGRP         0.32  0.23 -0.16  0.14 -0.16  0.03  0.20 -0.03    0.14     0.23 #> AGXT         0.16  0.10  0.11  0.02 -0.07 -0.11  0.19  0.09   -0.02     0.02 #> AHCY         0.39  0.44 -0.31  0.05 -0.21  0.38  0.20 -0.18    0.43     0.42 #> AHSP         0.10  0.02  0.04 -0.03  0.07 -0.07 -0.03  0.54   -0.05    -0.10 #> AIF1         0.28  0.39 -0.20  0.12 -0.03  0.24  0.06 -0.03    0.33     0.38 #> AIFM1        0.30  0.35 -0.28  0.09 -0.18  0.51  0.14 -0.13    0.41     0.36 #> AK1          0.18  0.22 -0.25  0.02  0.01  0.39  0.06  0.22    0.29     0.18 #> AKR1B1       0.23  0.38 -0.30  0.07 -0.13  0.35  0.13 -0.14    0.43     0.37 #> AKR1C4       0.04  0.05  0.04  0.08 -0.07 -0.07  0.11  0.08   -0.04     0.01 #> AKT1S1       0.35  0.42 -0.30  0.08 -0.09  0.44  0.05  0.03    0.43     0.43 #> AKT3         0.21  0.28 -0.20  0.05 -0.07  0.37  0.01 -0.16    0.31     0.33 #> ALCAM        0.17  0.19  0.04  0.03 -0.01 -0.10  0.02 -0.03    0.02     0.12 #> ALDH1A1      0.20  0.10 -0.09  0.02 -0.04  0.06  0.08  0.36    0.07     0.05 #> ALDH3A1      0.17  0.17 -0.07  0.00 -0.11  0.03  0.13  0.08    0.00     0.06 #> ALPP        -0.17 -0.15 -0.11  0.02  0.06  0.06 -0.01  0.02   -0.06    -0.08 #> AMBN        -0.01  0.01 -0.03  0.07  0.05 -0.01  0.02  0.02    0.00    -0.02 #> AMBP         0.06  0.01 -0.10  0.13  0.04  0.11  0.05 -0.04    0.04    -0.03 #> AMFR         0.43  0.43 -0.10  0.13 -0.20  0.16  0.11 -0.04    0.18     0.43 #> AMIGO2       0.18  0.18 -0.03  0.12  0.04  0.03  0.07  0.04    0.15     0.21 #> AMN          0.14  0.09 -0.02  0.13  0.04  0.10  0.04  0.04    0.16     0.02 #> AMY2A       -0.03  0.03  0.07  0.04  0.06  0.03  0.07  0.07   -0.03     0.01 #> AMY2B       -0.02 -0.01  0.05  0.07  0.07  0.08  0.08  0.03    0.01    -0.04 #> ANG          0.14  0.12 -0.09  0.12  0.00  0.11  0.11 -0.03    0.04     0.11 #> ANGPT1      -0.01  0.13 -0.42  0.04  0.04  0.67 -0.04 -0.01    0.23     0.13 #> ANGPT2       0.32  0.30 -0.08  0.15 -0.07 -0.04  0.12  0.00    0.10     0.25 #> ANGPTL1      0.11  0.07 -0.02  0.13 -0.10  0.00  0.27 -0.04    0.06     0.06 #> ANGPTL2      0.21  0.17 -0.15  0.03 -0.13  0.09  0.03 -0.03    0.15     0.20 #> ANGPTL3      0.04  0.01  0.07  0.12  0.04  0.05 -0.02  0.11    0.03     0.06 #> ANGPTL4      0.29  0.25 -0.15  0.14 -0.12  0.09  0.24 -0.07    0.10     0.16 #> ANGPTL7     -0.04 -0.08  0.19  0.10  0.06 -0.10  0.07  0.11   -0.10    -0.07 #> ANKRD54      0.29  0.33 -0.14  0.07 -0.07  0.20  0.06  0.22    0.20     0.30 #> ANPEP        0.11  0.04  0.05  0.00 -0.05 -0.04  0.07  0.04    0.02     0.02 #> ANXA10       0.03  0.02 -0.02  0.07 -0.04  0.09  0.25 -0.02    0.00     0.05 #> ANXA11       0.16  0.29 -0.30  0.10 -0.03  0.38  0.03 -0.17    0.44     0.27 #> ANXA3        0.12  0.25 -0.33  0.06 -0.03  0.55  0.01 -0.16    0.45     0.23 #> ANXA4        0.27  0.38 -0.30  0.13  0.01  0.50  0.02 -0.16    0.47     0.33 #> ANXA5        0.11  0.05 -0.01  0.06 -0.11  0.02  0.08 -0.01    0.02     0.03 #> AOC1        -0.05  0.00  0.03 -0.09 -0.06  0.06  0.07  0.03    0.13     0.04 #> AOC3        -0.10 -0.01  0.06  0.02  0.15 -0.12 -0.08  0.10   -0.03    -0.03 #> APBB1IP      1.00  0.61 -0.12  0.08 -0.19  0.07  0.16  0.08    0.25     0.52 #> APEX1        0.61  1.00 -0.17  0.12 -0.15  0.17  0.15  0.03    0.24     0.59 #> APLP1       -0.12 -0.17  1.00 -0.01  0.18 -0.42 -0.08  0.02   -0.17    -0.12 #> APOH         0.08  0.12 -0.01  1.00  0.01  0.07  0.08 -0.05    0.12     0.08 #> APOM        -0.19 -0.15  0.18  0.01  1.00 -0.03 -0.18  0.03   -0.06    -0.09 #> APP          0.07  0.17 -0.42  0.07 -0.03  1.00  0.08 -0.04    0.28     0.18 #> AREG         0.16  0.15 -0.08  0.08 -0.18  0.08  1.00 -0.04    0.07     0.12 #> ARG1         0.08  0.03  0.02 -0.05  0.03 -0.04 -0.04  1.00   -0.05    -0.07 #> ARHGAP1      0.25  0.24 -0.17  0.12 -0.06  0.28  0.07 -0.05    1.00     0.29 #> ARHGAP25     0.52  0.59 -0.12  0.08 -0.09  0.18  0.12 -0.07    0.29     1.00 #> ARHGEF12     0.20  0.34 -0.33  0.10 -0.11  0.52  0.06 -0.15    0.47     0.32 #> ARID4B       0.53  0.62 -0.08  0.10 -0.08  0.07  0.11  0.05    0.08     0.53 #> ARNT         0.21  0.16 -0.01  0.05 -0.08 -0.02  0.03  0.04    0.12     0.16 #> ARSA         0.28  0.22 -0.18  0.11 -0.09  0.20  0.18 -0.09    0.14     0.22 #> ARSB         0.32  0.37 -0.36  0.06 -0.13  0.52  0.08 -0.10    0.39     0.38 #> ART3         0.10  0.07  0.11  0.13 -0.03  0.03  0.09 -0.05    0.00     0.02 #> ARTN         0.20  0.19 -0.17  0.09 -0.14 -0.03  0.15  0.02    0.03     0.07 #> ATF2         0.32  0.26 -0.11 -0.01 -0.11  0.01  0.04  0.06    0.06     0.27 #> ATG4A        0.16  0.21 -0.25  0.02  0.00  0.34  0.01  0.31    0.31     0.18 #> ATOX1        0.28  0.37 -0.23  0.14 -0.10  0.38  0.12 -0.18    0.41     0.35 #> ATP5IF1      0.25  0.35 -0.30  0.07 -0.10  0.48  0.04 -0.13    0.47     0.36 #> ATP5PO      -0.01  0.10 -0.02  0.04  0.03  0.13  0.05  0.00    0.12     0.09 #> ATP6AP2      0.19  0.25 -0.01  0.00 -0.05  0.09  0.19 -0.04    0.06     0.13 #> ATP6V1D      0.11  0.03 -0.04  0.01  0.01  0.09  0.06  0.02    0.16     0.07 #> ATP6V1F      0.32  0.37 -0.27  0.09 -0.09  0.35  0.10  0.00    0.36     0.34 #> ATXN10       0.38  0.39 -0.25  0.01 -0.13  0.30  0.11 -0.18    0.40     0.45 #> AXIN1        0.36  0.45 -0.30  0.11 -0.10  0.47  0.08 -0.15    0.47     0.44 #> AXL          0.16  0.12  0.08  0.11 -0.12 -0.05  0.04 -0.03    0.07     0.06 #> AZU1         0.39  0.30 -0.15  0.00 -0.16  0.03  0.20  0.13    0.09     0.17 #> B4GALT1      0.34  0.32 -0.07  0.04 -0.21  0.05  0.18 -0.10    0.08     0.30 #>           ARHGEF12 ARID4B  ARNT  ARSA  ARSB  ART3  ARTN  ATF2 ATG4A ATOX1 #> AARSD1        0.35   0.39  0.07  0.15  0.35 -0.06  0.18  0.22  0.51  0.31 #> ABL1          0.51   0.52  0.21  0.33  0.50  0.09  0.23  0.31  0.28  0.52 #> ACAA1         0.44   0.14  0.08  0.28  0.43  0.00  0.11  0.17  0.29  0.42 #> ACAN         -0.07   0.05  0.05 -0.01 -0.13  0.18 -0.04 -0.03 -0.04 -0.03 #> ACE2          0.07   0.16  0.05  0.23  0.05  0.12  0.08  0.07  0.05  0.09 #> ACOX1         0.50   0.01  0.00  0.30  0.48  0.01  0.09  0.03  0.23  0.35 #> ACP5          0.13   0.07  0.00  0.17  0.16  0.09  0.09  0.05  0.07  0.14 #> ACP6          0.26   0.19  0.09  0.21  0.25  0.15  0.14  0.08  0.10  0.27 #> ACTA2         0.06   0.21  0.10  0.24  0.10  0.19  0.15  0.14  0.02  0.23 #> ACTN4         0.06   0.12  0.08  0.05  0.07  0.09  0.05  0.06  0.04  0.11 #> ACY1          0.11   0.20  0.12  0.24  0.18  0.02  0.04  0.15  0.07  0.13 #> ADA           0.14   0.28  0.18  0.25  0.29 -0.01  0.23  0.17  0.20  0.22 #> ADA2          0.00   0.24  0.13  0.20  0.02  0.03  0.19  0.17 -0.03  0.15 #> ADAM15        0.03   0.18  0.08  0.12  0.10  0.07  0.07  0.18 -0.03  0.18 #> ADAM23       -0.04   0.09  0.06  0.04 -0.04  0.06  0.02  0.07 -0.05  0.03 #> ADAM8         0.04   0.37  0.10  0.10  0.03  0.09  0.09  0.15 -0.01  0.23 #> ADAMTS13      0.04  -0.03  0.00 -0.07 -0.06  0.04 -0.07 -0.04 -0.04 -0.10 #> ADAMTS15      0.01  -0.01  0.04  0.11  0.05  0.07  0.18 -0.05 -0.01  0.09 #> ADAMTS16      0.09   0.02 -0.06  0.12  0.10  0.01  0.02  0.03  0.05  0.12 #> ADAMTS8      -0.10  -0.04  0.01 -0.15 -0.15 -0.01 -0.06 -0.09 -0.12 -0.08 #> ADCYAP1R1     0.01  -0.02  0.00  0.01  0.01 -0.05  0.04 -0.02  0.02  0.00 #> ADGRE2       -0.01   0.35  0.11  0.18  0.07  0.06  0.20  0.18 -0.05  0.16 #> ADGRE5       -0.04   0.37  0.18  0.17  0.01  0.02  0.16  0.19 -0.05  0.15 #> ADGRG1       -0.01   0.15  0.03  0.19  0.11 -0.05  0.12  0.11 -0.01  0.16 #> ADGRG2       -0.10   0.03 -0.01 -0.13 -0.11 -0.03 -0.11  0.03 -0.07 -0.01 #> ADH4         -0.01   0.06  0.07  0.06  0.05 -0.02  0.02  0.06  0.04  0.02 #> ADM           0.14   0.14  0.00  0.12  0.15  0.08  0.13  0.03  0.07  0.22 #> AGER         -0.01   0.02 -0.01 -0.02  0.00  0.13  0.10  0.01 -0.07  0.07 #> AGR2          0.08   0.07 -0.01  0.08  0.01  0.07  0.00  0.06  0.03  0.09 #> AGR3          0.07   0.05  0.00  0.06  0.10  0.06  0.04 -0.02  0.03  0.06 #> AGRN          0.07   0.12  0.05  0.25  0.14  0.20  0.17  0.00 -0.05  0.21 #> AGRP          0.10   0.16  0.12  0.18  0.17  0.12  0.22  0.12  0.07  0.16 #> AGXT         -0.03   0.08  0.06  0.15 -0.01  0.06  0.04  0.06  0.00 -0.03 #> AHCY          0.58   0.26  0.13  0.34  0.56 -0.01  0.20  0.18  0.29  0.56 #> AHSP         -0.13   0.10 -0.02 -0.06 -0.10  0.04 -0.03  0.06  0.31 -0.16 #> AIF1          0.41   0.18  0.05  0.24  0.45  0.00  0.17  0.10  0.26  0.36 #> AIFM1         0.71   0.15  0.05  0.36  0.69 -0.03  0.11  0.09  0.33  0.52 #> AK1           0.46   0.07 -0.04  0.20  0.38 -0.04  0.03  0.07  0.57  0.36 #> AKR1B1        0.58   0.20  0.09  0.20  0.47 -0.05  0.13  0.12  0.40  0.54 #> AKR1C4        0.00   0.01  0.07  0.09  0.00  0.03  0.08  0.02  0.02  0.00 #> AKT1S1        0.65   0.30  0.05  0.26  0.56  0.00  0.11  0.12  0.55  0.55 #> AKT3          0.59   0.11  0.03  0.22  0.51  0.10  0.05  0.10  0.31  0.44 #> ALCAM         0.01   0.18  0.11  0.03 -0.05  0.04  0.05  0.14 -0.08  0.09 #> ALDH1A1       0.07   0.11  0.05  0.13  0.10  0.01  0.01  0.06  0.31  0.08 #> ALDH3A1       0.06   0.15  0.09  0.16  0.07  0.02  0.08  0.05  0.03  0.12 #> ALPP         -0.02  -0.12 -0.09  0.04 -0.04 -0.14 -0.09 -0.05 -0.01 -0.01 #> AMBN         -0.06   0.01  0.07 -0.07 -0.07 -0.05  0.03  0.00 -0.06  0.03 #> AMBP          0.11   0.03  0.00  0.07  0.04  0.16  0.01  0.02 -0.03  0.15 #> AMFR          0.29   0.46  0.18  0.19  0.28  0.13  0.18  0.33  0.16  0.32 #> AMIGO2        0.09   0.13 -0.01  0.07  0.05  0.03  0.03  0.02  0.06  0.15 #> AMN           0.10   0.01  0.06  0.11  0.12  0.06  0.09 -0.03  0.04  0.10 #> AMY2A        -0.03   0.01  0.00  0.01  0.00  0.07  0.02  0.04  0.05 -0.04 #> AMY2B         0.01   0.02 -0.04  0.01 -0.01  0.18  0.00  0.02  0.01 -0.02 #> ANG           0.13   0.05  0.03  0.14  0.17  0.10  0.15  0.06  0.10  0.14 #> ANGPT1        0.52   0.02 -0.04  0.18  0.46 -0.01 -0.02  0.03  0.39  0.37 #> ANGPT2        0.05   0.24  0.09  0.11  0.11 -0.02  0.17  0.13 -0.03  0.13 #> ANGPTL1       0.07   0.11  0.07  0.16 -0.01  0.15  0.07  0.05  0.00  0.10 #> ANGPTL2       0.21   0.13  0.09  0.14  0.25 -0.08  0.10  0.10  0.09  0.21 #> ANGPTL3      -0.06   0.02  0.01  0.04 -0.01  0.05 -0.03  0.02  0.00 -0.01 #> ANGPTL4       0.13   0.22  0.07  0.19  0.15  0.09  0.17  0.05 -0.05  0.20 #> ANGPTL7      -0.13  -0.01 -0.05  0.04 -0.17  0.24 -0.02 -0.04  0.00 -0.11 #> ANKRD54       0.34   0.24  0.09  0.11  0.29  0.00  0.05  0.14  0.44  0.24 #> ANPEP        -0.03   0.02  0.07  0.08 -0.02  0.07  0.01 -0.01 -0.08  0.01 #> ANXA10        0.01   0.06  0.02  0.11  0.05  0.05  0.06 -0.02 -0.01  0.04 #> ANXA11        0.62   0.16  0.05  0.13  0.41  0.05  0.07  0.08  0.30  0.52 #> ANXA3         0.70   0.03 -0.03  0.27  0.58 -0.02  0.06  0.02  0.41  0.54 #> ANXA4         0.68   0.15  0.09  0.25  0.59 -0.07  0.15  0.09  0.39  0.55 #> ANXA5         0.04   0.13  0.13  0.12  0.03  0.05  0.00  0.09 -0.01  0.11 #> AOC1          0.05   0.00 -0.02 -0.02  0.00 -0.01 -0.08 -0.01  0.09  0.02 #> AOC3         -0.09   0.01 -0.08 -0.11 -0.09 -0.01  0.01 -0.06  0.01 -0.05 #> APBB1IP       0.20   0.53  0.21  0.28  0.32  0.10  0.20  0.32  0.16  0.28 #> APEX1         0.34   0.62  0.16  0.22  0.37  0.07  0.19  0.26  0.21  0.37 #> APLP1        -0.33  -0.08 -0.01 -0.18 -0.36  0.11 -0.17 -0.11 -0.25 -0.23 #> APOH          0.10   0.10  0.05  0.11  0.06  0.13  0.09 -0.01  0.02  0.14 #> APOM         -0.11  -0.08 -0.08 -0.09 -0.13 -0.03 -0.14 -0.11  0.00 -0.10 #> APP           0.52   0.07 -0.02  0.20  0.52  0.03 -0.03  0.01  0.34  0.38 #> AREG          0.06   0.11  0.03  0.18  0.08  0.09  0.15  0.04  0.01  0.12 #> ARG1         -0.15   0.05  0.04 -0.09 -0.10 -0.05  0.02  0.06  0.31 -0.18 #> ARHGAP1       0.47   0.08  0.12  0.14  0.39  0.00  0.03  0.06  0.31  0.41 #> ARHGAP25      0.32   0.53  0.16  0.22  0.38  0.02  0.07  0.27  0.18  0.35 #> ARHGEF12      1.00   0.13  0.05  0.31  0.61  0.03  0.06  0.06  0.47  0.58 #> ARID4B        0.13   1.00  0.21  0.13  0.15  0.11  0.15  0.37  0.11  0.29 #> ARNT          0.05   0.21  1.00  0.04  0.03  0.00  0.11  0.18 -0.01  0.11 #> ARSA          0.31   0.13  0.04  1.00  0.43  0.09  0.17  0.01  0.18  0.29 #> ARSB          0.61   0.15  0.03  0.43  1.00 -0.09  0.19  0.08  0.36  0.46 #> ART3          0.03   0.11  0.00  0.09 -0.09  1.00 -0.02 -0.04 -0.04  0.05 #> ARTN          0.06   0.15  0.11  0.17  0.19 -0.02  1.00  0.07  0.05  0.11 #> ATF2          0.06   0.37  0.18  0.01  0.08 -0.04  0.07  1.00  0.09  0.09 #> ATG4A         0.47   0.11 -0.01  0.18  0.36 -0.04  0.05  0.09  1.00  0.30 #> ATOX1         0.58   0.29  0.11  0.29  0.46  0.05  0.11  0.09  0.30  1.00 #> ATP5IF1       0.70   0.15  0.03  0.30  0.58  0.00  0.06  0.08  0.37  0.53 #> ATP5PO        0.23   0.03  0.01  0.11  0.22 -0.07  0.00 -0.03  0.11  0.20 #> ATP6AP2       0.10   0.18  0.14  0.12  0.12  0.14  0.13  0.15  0.04  0.13 #> ATP6V1D       0.15  -0.06 -0.02  0.04  0.12  0.01  0.05  0.02  0.08  0.08 #> ATP6V1F       0.50   0.23  0.02  0.27  0.47 -0.02  0.09  0.21  0.41  0.40 #> ATXN10        0.51   0.28  0.10  0.20  0.50 -0.02  0.14  0.18  0.26  0.49 #> AXIN1         0.76   0.27  0.09  0.31  0.62  0.02  0.13  0.14  0.41  0.59 #> AXL          -0.04   0.16  0.08  0.06 -0.01  0.11  0.08  0.07 -0.14  0.11 #> AZU1          0.05   0.18  0.10  0.23  0.15  0.10  0.27  0.15  0.11  0.08 #> B4GALT1       0.08   0.32  0.13  0.18  0.09  0.17  0.14  0.13 -0.01  0.23 #>           ATP5IF1 ATP5PO ATP6AP2 ATP6V1D ATP6V1F ATXN10 AXIN1   AXL  AZU1 #> AARSD1       0.25   0.04    0.09    0.07    0.39   0.31  0.38  0.01  0.16 #> ABL1         0.48   0.12    0.22    0.12    0.47   0.56  0.62  0.18  0.24 #> ACAA1        0.44   0.22    0.16    0.17    0.39   0.39  0.44  0.07  0.19 #> ACAN        -0.11   0.00    0.15   -0.04   -0.08  -0.08 -0.08  0.15 -0.07 #> ACE2         0.07   0.05    0.13    0.00    0.09   0.10  0.07  0.16  0.24 #> ACOX1        0.49   0.21    0.16    0.07    0.33   0.31  0.48  0.06  0.07 #> ACP5         0.15   0.03    0.10    0.03    0.12   0.10  0.17  0.19  0.12 #> ACP6         0.24   0.09    0.13    0.03    0.14   0.23  0.25  0.11 -0.01 #> ACTA2        0.10   0.05    0.23    0.00    0.23   0.14  0.09  0.12  0.19 #> ACTN4        0.02   0.02    0.06   -0.03    0.09   0.15  0.08  0.05  0.06 #> ACY1         0.11   0.07    0.09    0.06    0.07   0.15  0.15  0.15  0.21 #> ADA          0.23   0.02    0.16    0.07    0.32   0.30  0.23  0.12  0.36 #> ADA2         0.05  -0.03    0.10    0.00    0.00   0.04  0.04  0.14  0.10 #> ADAM15       0.05   0.07    0.08   -0.01    0.06   0.14  0.12  0.15 -0.01 #> ADAM23      -0.04  -0.04   -0.05   -0.04   -0.03   0.02 -0.02  0.15 -0.01 #> ADAM8        0.08  -0.02    0.12   -0.04    0.08   0.23  0.13  0.25  0.08 #> ADAMTS13    -0.02  -0.01   -0.08    0.01   -0.11  -0.05  0.00 -0.01 -0.15 #> ADAMTS15     0.06   0.04    0.12   -0.02   -0.01  -0.01 -0.01  0.16  0.08 #> ADAMTS16     0.07   0.03    0.09    0.04    0.11   0.07  0.04  0.07 -0.05 #> ADAMTS8     -0.11   0.04   -0.07    0.01   -0.17  -0.11 -0.10  0.00 -0.29 #> ADCYAP1R1    0.03   0.13   -0.02   -0.04    0.00   0.01  0.00 -0.07 -0.08 #> ADGRE2       0.00  -0.02    0.14   -0.02    0.08   0.16  0.10  0.23  0.13 #> ADGRE5      -0.01  -0.01    0.09    0.05    0.02   0.11  0.09  0.21  0.16 #> ADGRG1       0.03   0.04    0.11    0.05    0.14   0.11  0.06  0.11  0.09 #> ADGRG2      -0.05  -0.02   -0.09    0.01   -0.05  -0.11 -0.06  0.08 -0.11 #> ADH4        -0.02  -0.01    0.00    0.01   -0.05   0.05  0.00  0.02  0.03 #> ADM          0.14   0.08    0.14    0.02    0.15   0.13  0.14  0.12  0.10 #> AGER         0.02   0.05    0.07    0.02    0.05  -0.01 -0.01  0.14 -0.07 #> AGR2         0.02   0.07    0.05   -0.03    0.07   0.03  0.04  0.00 -0.02 #> AGR3         0.04  -0.01    0.05    0.09    0.01   0.00  0.05  0.08 -0.01 #> AGRN         0.07   0.05    0.18   -0.01    0.06   0.09  0.09  0.25  0.14 #> AGRP         0.12  -0.01    0.14   -0.03    0.16   0.13  0.17  0.19  0.30 #> AGXT        -0.06   0.05    0.10    0.00   -0.04   0.05  0.01  0.08  0.14 #> AHCY         0.54   0.14    0.22    0.08    0.52   0.60  0.60  0.07  0.23 #> AHSP        -0.10  -0.07   -0.05   -0.01    0.04  -0.16 -0.12  0.05  0.19 #> AIF1         0.44   0.06    0.11    0.14    0.41   0.45  0.47  0.01  0.18 #> AIFM1        0.76   0.24    0.15    0.16    0.48   0.50  0.63  0.05  0.12 #> AK1          0.39   0.16    0.05    0.12    0.41   0.25  0.38 -0.09  0.16 #> AKR1B1       0.57   0.18    0.17    0.11    0.44   0.49  0.61  0.02  0.10 #> AKR1C4       0.00   0.10    0.09   -0.03    0.01   0.01 -0.02  0.10 -0.03 #> AKT1S1       0.61   0.21    0.07    0.10    0.55   0.49  0.66  0.05  0.17 #> AKT3         0.52   0.16    0.15    0.11    0.42   0.44  0.58 -0.02  0.03 #> ALCAM        0.03   0.05    0.09    0.01    0.05   0.08  0.06  0.20  0.05 #> ALDH1A1      0.05   0.03    0.03    0.04    0.14   0.03  0.05  0.09  0.16 #> ALDH3A1     -0.03   0.01    0.10   -0.01    0.03   0.07  0.04  0.13  0.06 #> ALPP        -0.01   0.06   -0.05    0.04   -0.04  -0.06 -0.10 -0.01 -0.07 #> AMBN        -0.05   0.01    0.00   -0.01   -0.07   0.01  0.00  0.05  0.00 #> AMBP         0.10   0.00    0.11    0.10    0.03   0.03  0.10  0.02 -0.03 #> AMFR         0.29   0.14    0.16    0.02    0.34   0.39  0.32  0.15  0.22 #> AMIGO2       0.08   0.04    0.12    0.08    0.04   0.07  0.13  0.05 -0.07 #> AMN          0.10   0.12    0.07    0.02    0.07   0.10  0.09  0.08  0.11 #> AMY2A        0.00  -0.02   -0.02    0.00   -0.02  -0.07  0.01 -0.03  0.01 #> AMY2B       -0.02  -0.07    0.00    0.03   -0.03  -0.03  0.02  0.04 -0.03 #> ANG          0.13   0.00    0.14   -0.01    0.06   0.10  0.16 -0.03  0.05 #> ANGPT1       0.47   0.10    0.08    0.05    0.30   0.28  0.47 -0.12  0.00 #> ANGPT2       0.10   0.05    0.12   -0.02    0.19   0.15  0.09  0.19  0.13 #> ANGPTL1      0.04   0.00    0.07    0.00    0.11   0.05  0.05  0.15  0.14 #> ANGPTL2      0.24   0.03    0.09    0.01    0.14   0.20  0.23  0.13  0.10 #> ANGPTL3     -0.02   0.02    0.09   -0.08   -0.01  -0.07 -0.04  0.07 -0.01 #> ANGPTL4      0.18   0.05    0.17    0.01    0.20   0.19  0.12  0.15  0.24 #> ANGPTL7     -0.14  -0.01   -0.06   -0.01   -0.08  -0.16 -0.10  0.03  0.01 #> ANKRD54      0.26   0.14    0.09    0.04    0.34   0.24  0.29 -0.08  0.20 #> ANPEP       -0.01   0.01    0.12   -0.05    0.03   0.01 -0.04  0.14  0.05 #> ANXA10      -0.04   0.02    0.06    0.01    0.02   0.02  0.01  0.01 -0.01 #> ANXA11       0.60   0.17    0.12    0.04    0.30   0.38  0.61  0.07  0.04 #> ANXA3        0.66   0.18    0.07    0.11    0.44   0.41  0.67 -0.04  0.12 #> ANXA4        0.64   0.20    0.10    0.09    0.45   0.46  0.69 -0.01  0.07 #> ANXA5        0.07   0.03    0.11    0.00    0.10   0.10  0.04  0.10  0.10 #> AOC1         0.10   0.05    0.03    0.03    0.04  -0.01  0.05  0.00 -0.01 #> AOC3        -0.11   0.05   -0.02   -0.02   -0.08  -0.10 -0.13  0.04 -0.11 #> APBB1IP      0.25  -0.01    0.19    0.11    0.32   0.38  0.36  0.16  0.39 #> APEX1        0.35   0.10    0.25    0.03    0.37   0.39  0.45  0.12  0.30 #> APLP1       -0.30  -0.02   -0.01   -0.04   -0.27  -0.25 -0.30  0.08 -0.15 #> APOH         0.07   0.04    0.00    0.01    0.09   0.01  0.11  0.11  0.00 #> APOM        -0.10   0.03   -0.05    0.01   -0.09  -0.13 -0.10 -0.12 -0.16 #> APP          0.48   0.13    0.09    0.09    0.35   0.30  0.47 -0.05  0.03 #> AREG         0.04   0.05    0.19    0.06    0.10   0.11  0.08  0.04  0.20 #> ARG1        -0.13   0.00   -0.04    0.02    0.00  -0.18 -0.15 -0.03  0.13 #> ARHGAP1      0.47   0.12    0.06    0.16    0.36   0.40  0.47  0.07  0.09 #> ARHGAP25     0.36   0.09    0.13    0.07    0.34   0.45  0.44  0.06  0.17 #> ARHGEF12     0.70   0.23    0.10    0.15    0.50   0.51  0.76 -0.04  0.05 #> ARID4B       0.15   0.03    0.18   -0.06    0.23   0.28  0.27  0.16  0.18 #> ARNT         0.03   0.01    0.14   -0.02    0.02   0.10  0.09  0.08  0.10 #> ARSA         0.30   0.11    0.12    0.04    0.27   0.20  0.31  0.06  0.23 #> ARSB         0.58   0.22    0.12    0.12    0.47   0.50  0.62 -0.01  0.15 #> ART3         0.00  -0.07    0.14    0.01   -0.02  -0.02  0.02  0.11  0.10 #> ARTN         0.06   0.00    0.13    0.05    0.09   0.14  0.13  0.08  0.27 #> ATF2         0.08  -0.03    0.15    0.02    0.21   0.18  0.14  0.07  0.15 #> ATG4A        0.37   0.11    0.04    0.08    0.41   0.26  0.41 -0.14  0.11 #> ATOX1        0.53   0.20    0.13    0.08    0.40   0.49  0.59  0.11  0.08 #> ATP5IF1      1.00   0.20    0.07    0.14    0.43   0.43  0.65  0.00  0.11 #> ATP5PO       0.20   1.00    0.04    0.06    0.20   0.12  0.15  0.02 -0.07 #> ATP6AP2      0.07   0.04    1.00   -0.01    0.18   0.16  0.14  0.01  0.09 #> ATP6V1D      0.14   0.06   -0.01    1.00    0.04   0.06  0.12 -0.02  0.06 #> ATP6V1F      0.43   0.20    0.18    0.04    1.00   0.42  0.44 -0.01  0.19 #> ATXN10       0.43   0.12    0.16    0.06    0.42   1.00  0.53  0.05  0.13 #> AXIN1        0.65   0.15    0.14    0.12    0.44   0.53  1.00  0.01  0.08 #> AXL          0.00   0.02    0.01   -0.02   -0.01   0.05  0.01  1.00  0.08 #> AZU1         0.11  -0.07    0.09    0.06    0.19   0.13  0.08  0.08  1.00 #> B4GALT1      0.10  -0.04    0.17   -0.03    0.11   0.21  0.13  0.24  0.20 #>           B4GALT1 #> AARSD1       0.16 #> ABL1         0.32 #> ACAA1        0.15 #> ACAN         0.10 #> ACE2         0.26 #> ACOX1        0.07 #> ACP5         0.14 #> ACP6         0.21 #> ACTA2        0.31 #> ACTN4        0.12 #> ACY1         0.19 #> ADA          0.30 #> ADA2         0.22 #> ADAM15       0.20 #> ADAM23       0.06 #> ADAM8        0.32 #> ADAMTS13    -0.08 #> ADAMTS15     0.19 #> ADAMTS16     0.11 #> ADAMTS8     -0.11 #> ADCYAP1R1    0.01 #> ADGRE2       0.23 #> ADGRE5       0.22 #> ADGRG1       0.15 #> ADGRG2      -0.09 #> ADH4         0.04 #> ADM          0.25 #> AGER         0.08 #> AGR2        -0.05 #> AGR3         0.06 #> AGRN         0.35 #> AGRP         0.26 #> AGXT         0.18 #> AHCY         0.25 #> AHSP        -0.02 #> AIF1         0.09 #> AIFM1        0.16 #> AK1         -0.01 #> AKR1B1       0.14 #> AKR1C4       0.08 #> AKT1S1       0.13 #> AKT3         0.12 #> ALCAM        0.17 #> ALDH1A1      0.06 #> ALDH3A1      0.15 #> ALPP        -0.09 #> AMBN        -0.05 #> AMBP         0.12 #> AMFR         0.36 #> AMIGO2       0.08 #> AMN          0.09 #> AMY2A       -0.03 #> AMY2B        0.03 #> ANG          0.18 #> ANGPT1       0.00 #> ANGPT2       0.23 #> ANGPTL1      0.21 #> ANGPTL2      0.21 #> ANGPTL3      0.08 #> ANGPTL4      0.28 #> ANGPTL7      0.03 #> ANKRD54      0.08 #> ANPEP        0.13 #> ANXA10       0.01 #> ANXA11       0.07 #> ANXA3        0.00 #> ANXA4        0.04 #> ANXA5        0.13 #> AOC1        -0.01 #> AOC3        -0.03 #> APBB1IP      0.34 #> APEX1        0.32 #> APLP1       -0.07 #> APOH         0.04 #> APOM        -0.21 #> APP          0.05 #> AREG         0.18 #> ARG1        -0.10 #> ARHGAP1      0.08 #> ARHGAP25     0.30 #> ARHGEF12     0.08 #> ARID4B       0.32 #> ARNT         0.13 #> ARSA         0.18 #> ARSB         0.09 #> ART3         0.17 #> ARTN         0.14 #> ATF2         0.13 #> ATG4A       -0.01 #> ATOX1        0.23 #> ATP5IF1      0.10 #> ATP5PO      -0.04 #> ATP6AP2      0.17 #> ATP6V1D     -0.03 #> ATP6V1F      0.11 #> ATXN10       0.21 #> AXIN1        0.13 #> AXL          0.24 #> AZU1         0.20 #> B4GALT1      1.00 #>  #> $data_summary$cor_results #>   Protein1 Protein2 Correlation #> 1  ATP5IF1    AIFM1        0.76 #> 2    AXIN1 ARHGEF12        0.76 #> 3    AIFM1  ATP5IF1        0.76 #> 4 ARHGEF12    AXIN1        0.76 #> 5 ARHGEF12    AIFM1        0.71 #> 6    AIFM1 ARHGEF12        0.71 #>  #> $data_summary$cor_heatmap  #>  #>  #> $metadata_summary #> $metadata_summary$na_percentage_col #> # A tibble: 1 × 2 #>   column na_percentage #>   <chr>          <dbl> #> 1 Grade           91.5 #>  #> $metadata_summary$na_col_hist #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.  #>  #> $metadata_summary$na_percentage_row #> # A tibble: 536 × 2 #>    DAid    na_percentage #>    <chr>           <dbl> #>  1 DA00001          12.5 #>  2 DA00002          12.5 #>  3 DA00003          12.5 #>  4 DA00004          12.5 #>  5 DA00005          12.5 #>  6 DA00006          12.5 #>  7 DA00007          12.5 #>  8 DA00008          12.5 #>  9 DA00009          12.5 #> 10 DA00010          12.5 #> # ℹ 526 more rows #>  #> $metadata_summary$na_row_hist #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.  #>  #> $metadata_summary$Stage  #>  #> $metadata_summary$Grade  #>  #> $metadata_summary$Sex  #>  #> $metadata_summary$Age #> Picking joint bandwidth of 6.06  #>  #> $metadata_summary$BMI #> Picking joint bandwidth of 1.77  #>  #> $metadata_summary$Cohort  #>  #>  #> attr(,\"class\") #> [1] \"hd_qc\""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_save_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Save tibbles or R objects — hd_save_data","title":"Save tibbles or R objects — hd_save_data","text":"hd_save_data() saves either tibble CSV, TSV, RDS, XLSX, R object (example list) RDS specified directory. directory exist, created. recommended file type files going used mainly R RDS.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_save_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save tibbles or R objects — hd_save_data","text":"","code":"hd_save_data(dat, path_name)"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_save_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save tibbles or R objects — hd_save_data","text":"dat data save. path_name name file saved. Extension options \"csv\", \"tsv\", \"rds\", \"xlsx\". data anything else dataframe tibble, file extension \"rds\".","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_save_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save tibbles or R objects — hd_save_data","text":"message indicating file saved successfully.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_save_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save tibbles or R objects — hd_save_data","text":"","code":"# Save a metadata dataframe as an RDS file hd_save_data(example_metadata, \"my_data/metadata.rds\") #> [1] \"File saved as my_data/metadata.rds\"  unlink(\"my_data\", recursive = TRUE)  # Clean up the created directory"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_save_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Create directory to save results — hd_save_path","title":"Create directory to save results — hd_save_path","text":"hd_save_path() creates directory specified current path save results. user can optionally choose create another inner directory named current date. directory already exists, message printed.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_save_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create directory to save results — hd_save_path","text":"","code":"hd_save_path(path_name, date = FALSE)"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_save_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create directory to save results — hd_save_path","text":"path_name name directory create. date TRUE, directory current date name created inside directory dir_name.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_save_path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create directory to save results — hd_save_path","text":"relative directory path string.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_save_path.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create directory to save results — hd_save_path","text":"","code":"# Create a directory hd_save_path(\"my_directory\", date = FALSE) #> [1] \"my_directory\" unlink(\"my_directory\", recursive = TRUE)  # Clean up the created directory  # Create a directory and an inner directory with the current date as name hd_save_path(\"my_directory\", date = TRUE) #> [1] \"my_directory/2024_12_08\" unlink(\"my_directory\", recursive = TRUE)  # Create a directory inside another directory hd_save_path(\"outer_directory/inner_directory\", date = FALSE) #> [1] \"outer_directory/inner_directory\" unlink(\"outer_directory\", recursive = TRUE)  # Create a directory inside a pre existing one hd_save_path(\"outer_directory\", date = FALSE) #> [1] \"outer_directory\" hd_save_path(\"outer_directory/inner_directory\", date = FALSE) #> [1] \"outer_directory/inner_directory\" unlink(\"outer_directory\", recursive = TRUE)  # Create a directory with the current date as name inside a pre existing one hd_save_path(\"outer_directory\", date = FALSE) #> [1] \"outer_directory\" hd_save_path(\"outer_directory\", date = TRUE) #> [1] \"outer_directory/2024_12_08\" unlink(\"outer_directory\", recursive = TRUE)"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_show_palettes.html","id":null,"dir":"Reference","previous_headings":"","what":"Display available color palettes — hd_show_palettes","title":"Display available color palettes — hd_show_palettes","text":"hd_show_palettes() displays grid color palettes.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_show_palettes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display available color palettes — hd_show_palettes","text":"","code":"hd_show_palettes(palettes = hd_palettes(), n = NULL)"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_show_palettes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Display available color palettes — hd_show_palettes","text":"palettes list color palettes. Defaults palettes hd_palettes(). n number colors show palette. NULL, colors shown.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_show_palettes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Display available color palettes — hd_show_palettes","text":"ggplot2 plot showing color palettes.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_show_palettes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Display available color palettes — hd_show_palettes","text":"","code":"hd_show_palettes()"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_split_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Split data into training and test sets — hd_split_data","title":"Split data into training and test sets — hd_split_data","text":"hd_split_data() splits data training test sets based ratio provided. also stratifies data based variable provided.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_split_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split data into training and test sets — hd_split_data","text":"","code":"hd_split_data(   dat,   metadata = NULL,   variable = \"Disease\",   metadata_cols = NULL,   ratio = 0.75,   seed = 123 )"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_split_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split data into training and test sets — hd_split_data","text":"dat HDAnalyzeR object dataset wide format sample_id first column. metadata dataset containing metadata information sample ID first column. HDAnalyzeR object provided, parameter needed. variable name column containing case control groups. Default \"Disease\". metadata_cols columns selected metadata predictors. Default NULL. ratio ratio training data test data. Default 0.75. seed Seed reproducibility. Default 123.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_split_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split data into training and test sets — hd_split_data","text":"split object containing train test data.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_split_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split data into training and test sets — hd_split_data","text":"","code":"# Initialize an HDAnalyzeR object hd_object <- hd_initialize(example_data, example_metadata)  # Split the data into training and test sets hd_split <- hd_split_data(hd_object, variable = \"Disease\") #> Warning: Too little data to stratify. #> • Resampling will be unstratified."},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_umap.html","id":null,"dir":"Reference","previous_headings":"","what":"Run UMAP analysis — hd_umap","title":"Run UMAP analysis — hd_umap","text":"hd_umap() runs UMAP analysis provided data. data contain missing values, function imputes using k-nearest neighbors algorithm (k = 5). number components calculated defined user. function returns tibble UMAP results.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_umap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run UMAP analysis — hd_umap","text":"","code":"hd_umap(dat, by_sample = TRUE, components = 2, seed = 123)"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_umap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run UMAP analysis — hd_umap","text":"dat HDAnalyzeR object dataset wide format sample_id first column. by_sample TRUE, points represent samples. FALSE, points represent features. Default TRUE. components number components calculated. Default 10. seed seed used UMAP analysis. Default 123.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_umap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run UMAP analysis — hd_umap","text":"list UMAP results.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_umap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run UMAP analysis — hd_umap","text":"","code":"# Create the HDAnalyzeR object providing the data and metadata hd_object <- hd_initialize(example_data, example_metadata)  # Run the UMAP analysis hd_umap(hd_object, components = 2, by_sample = TRUE, seed = 123) #> $umap_res #> # A tibble: 586 × 3 #>    DAid     UMAP1   UMAP2 #>    <fct>    <dbl>   <dbl> #>  1 DA00001 -2.39  -0.211  #>  2 DA00002  1.42   2.15   #>  3 DA00003 -1.07  -2.34   #>  4 DA00004 -1.57  -2.31   #>  5 DA00005 -2.71  -0.450  #>  6 DA00006  1.88  -0.286  #>  7 DA00007 -2.90  -1.75   #>  8 DA00008 -0.300  1.73   #>  9 DA00009 -0.803  0.0411 #> 10 DA00010  1.03   2.13   #> # ℹ 576 more rows #>  #> $by_sample #> [1] TRUE #>  #> attr(,\"class\") #> [1] \"hd_umap\"  # Run the UMAP analysis by feature hd_umap(hd_object, components = 2, by_sample = FALSE, seed = 123) #> $umap_res #> # A tibble: 100 × 3 #>    Assay   UMAP1  UMAP2 #>    <fct>   <dbl>  <dbl> #>  1 AARSD1  3.31  -2.38  #>  2 ABL1    1.52  -1.85  #>  3 ACAA1   0.238 -1.50  #>  4 ACAN   -0.289  1.69  #>  5 ACE2   -0.307 -0.731 #>  6 ACOX1  -2.58   1.23  #>  7 ACP5    1.00   0.229 #>  8 ACP6    1.35  -0.122 #>  9 ACTA2   1.71  -0.962 #> 10 ACTN4  -2.06   0.455 #> # ℹ 90 more rows #>  #> $by_sample #> [1] FALSE #>  #> attr(,\"class\") #> [1] \"hd_umap\""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_widen_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert omics data to wide format — hd_widen_data","title":"Convert omics data to wide format — hd_widen_data","text":"hd_widen_data() transforms omics data long wide format variables like different Assays column names expression values like NPX values.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_widen_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert omics data to wide format — hd_widen_data","text":"","code":"hd_widen_data(dat, exclude = \"DAid\", names_from = \"Assay\", values_from = \"NPX\")"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_widen_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert omics data to wide format — hd_widen_data","text":"dat tibble containing data long format. exclude name columns exclude transformation. names_from name column containing variable names. values_from name column containing values.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_widen_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert omics data to wide format — hd_widen_data","text":"tibble containing data wide format.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/hd_widen_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert omics data to wide format — hd_widen_data","text":"","code":"# Olink data in long format example_data #> # A tibble: 56,142 × 10 #>    DAid    Sample   OlinkID UniProt Assay Panel     NPX Assay_Warning QC_Warning #>    <chr>   <chr>    <chr>   <chr>   <chr> <chr>   <dbl> <chr>         <chr>      #>  1 DA00001 AML_syn… OID213… Q9BTE6  AARS… Onco…  3.39   PASS          PASS       #>  2 DA00001 AML_syn… OID212… P00519  ABL1  Onco…  2.76   PASS          PASS       #>  3 DA00001 AML_syn… OID212… P09110  ACAA1 Onco…  1.71   PASS          PASS       #>  4 DA00001 AML_syn… OID201… P16112  ACAN  Card…  0.0333 PASS          PASS       #>  5 DA00001 AML_syn… OID201… Q9BYF1  ACE2  Card…  1.76   PASS          PASS       #>  6 DA00001 AML_syn… OID201… Q15067  ACOX1 Card… -0.919  PASS          PASS       #>  7 DA00001 AML_syn… OID203… P13686  ACP5  Card…  1.54   PASS          PASS       #>  8 DA00001 AML_syn… OID214… Q9NPH0  ACP6  Onco…  2.15   PASS          PASS       #>  9 DA00001 AML_syn… OID200… P62736  ACTA2 Card…  2.81   PASS          PASS       #> 10 DA00001 AML_syn… OID204… O43707  ACTN4 Infl…  0.742  PASS          PASS       #> # ℹ 56,132 more rows #> # ℹ 1 more variable: PlateID <chr>  # Transform Olink data in wide format hd_widen_data(example_data) #> # A tibble: 586 × 101 #>    DAid    AARSD1   ABL1  ACAA1    ACAN    ACE2  ACOX1   ACP5    ACP6  ACTA2 #>    <chr>    <dbl>  <dbl>  <dbl>   <dbl>   <dbl>  <dbl>  <dbl>   <dbl>  <dbl> #>  1 DA00001   3.39  2.76   1.71   0.0333  1.76   -0.919 1.54    2.15    2.81  #>  2 DA00002   1.42  1.25  -0.816 -0.459   0.826  -0.902 0.647   1.30    0.798 #>  3 DA00003  NA    NA     NA      0.989  NA       0.330 1.37   NA      NA     #>  4 DA00004   3.41  3.38   1.69  NA       1.52   NA     0.841   0.582   1.70  #>  5 DA00005   5.01  5.05   0.128  0.401  -0.933  -0.584 0.0265  1.16    2.73  #>  6 DA00006   6.83  1.18  -1.74  -0.156   1.53   -0.721 0.620   0.527   0.772 #>  7 DA00007  NA    NA      3.96   0.682   3.14    2.62  1.47    2.25    2.01  #>  8 DA00008   2.78  0.812 -0.552  0.982  -0.101  -0.304 0.376  -0.826   1.52  #>  9 DA00009   4.39  3.34  -0.452 -0.868   0.395   1.71  1.49   -0.0285  0.200 #> 10 DA00010   1.83  1.21  -0.912 -1.04   -0.0918 -0.304 1.69    0.0920  2.04  #> # ℹ 576 more rows #> # ℹ 91 more variables: ACTN4 <dbl>, ACY1 <dbl>, ADA <dbl>, ADA2 <dbl>, #> #   ADAM15 <dbl>, ADAM23 <dbl>, ADAM8 <dbl>, ADAMTS13 <dbl>, ADAMTS15 <dbl>, #> #   ADAMTS16 <dbl>, ADAMTS8 <dbl>, ADCYAP1R1 <dbl>, ADGRE2 <dbl>, ADGRE5 <dbl>, #> #   ADGRG1 <dbl>, ADGRG2 <dbl>, ADH4 <dbl>, ADM <dbl>, AGER <dbl>, AGR2 <dbl>, #> #   AGR3 <dbl>, AGRN <dbl>, AGRP <dbl>, AGXT <dbl>, AHCY <dbl>, AHSP <dbl>, #> #   AIF1 <dbl>, AIFM1 <dbl>, AK1 <dbl>, AKR1B1 <dbl>, AKR1C4 <dbl>, …  # Use Sample name instead of Sample ID and Olink IDs instead of Assay names hd_widen_data(example_data, exclude = \"Sample\", names_from = \"OlinkID\") #> # A tibble: 586 × 101 #>    Sample     OID21311 OID21280 OID21269 OID20159 OID20105 OID20124 OID20314 #>    <chr>         <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl> #>  1 AML_syn_1      3.39    2.76     1.71    0.0333   1.76     -0.919   1.54   #>  2 AML_syn_2      1.42    1.25    -0.816  -0.459    0.826    -0.902   0.647  #>  3 AML_syn_3     NA      NA       NA       0.989   NA         0.330   1.37   #>  4 AML_syn_4      3.41    3.38     1.69   NA        1.52     NA       0.841  #>  5 AML_syn_5      5.01    5.05     0.128   0.401   -0.933    -0.584   0.0265 #>  6 AML_syn_6      6.83    1.18    -1.74   -0.156    1.53     -0.721   0.620  #>  7 AML_syn_7     NA      NA        3.96    0.682    3.14      2.62    1.47   #>  8 AML_syn_8      2.78    0.812   -0.552   0.982   -0.101    -0.304   0.376  #>  9 AML_syn_9      4.39    3.34    -0.452  -0.868    0.395     1.71    1.49   #> 10 AML_syn_10     1.83    1.21    -0.912  -1.04    -0.0918   -0.304   1.69   #> # ℹ 576 more rows #> # ℹ 93 more variables: OID21432 <dbl>, OID20079 <dbl>, OID20435 <dbl>, #> #   OID20137 <dbl>, OID20645 <dbl>, OID20394 <dbl>, OID20109 <dbl>, #> #   OID20651 <dbl>, OID21039 <dbl>, OID20249 <dbl>, OID21275 <dbl>, #> #   OID20089 <dbl>, OID21502 <dbl>, OID21188 <dbl>, OID20755 <dbl>, #> #   OID20260 <dbl>, OID21294 <dbl>, OID20189 <dbl>, OID20117 <dbl>, #> #   OID21467 <dbl>, OID20756 <dbl>, OID20896 <dbl>, OID21243 <dbl>, …"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/plot_loadings.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare PCA loadings to be plotted on the 2D plane — plot_loadings","title":"Prepare PCA loadings to be plotted on the 2D plane — plot_loadings","text":"plot_loadings() prepares PCA loadings plotted 2D plane.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/plot_loadings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare PCA loadings to be plotted on the 2D plane — plot_loadings","text":"","code":"plot_loadings(dim_object, plot_loadings, nloadings)"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/plot_loadings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare PCA loadings to be plotted on the 2D plane — plot_loadings","text":"dim_object PCA object containing PCA loadings. Created hd_pca(). plot_loadings component plotted. Default NULL. nloadings number loadings plotted. Default 5.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/plot_loadings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare PCA loadings to be plotted on the 2D plane — plot_loadings","text":"tibble PCA loadings plotted.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/plot_metadata_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot summary visualization for Sex, Age and BMI metadata — plot_metadata_summary","title":"Plot summary visualization for Sex, Age and BMI metadata — plot_metadata_summary","text":"plot_metadata_summary() creates three plots: Two ridge plots Age BMI distributions. bar plot number samples per Sex.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/plot_metadata_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot summary visualization for Sex, Age and BMI metadata — plot_metadata_summary","text":"","code":"plot_metadata_summary(   metadata,   sample_id,   variable,   palette = NULL,   unique_threshold = 5 )"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/plot_metadata_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot summary visualization for Sex, Age and BMI metadata — plot_metadata_summary","text":"metadata dataset containing metadata information sample ID first column. sample_id name column containing sample IDs. variable name column containing different classes. palette list color palettes plots. names list match column names metadata. Default NULL. unique_threshold threshold consider numeric variable categorical. Default 5.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/plot_metadata_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot summary visualization for Sex, Age and BMI metadata — plot_metadata_summary","text":"list containing plots sample counts.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/plot_missing_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Create the missing value distribution — plot_missing_values","title":"Create the missing value distribution — plot_missing_values","text":"plot_missing_values() creates histogram missing value distribution.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/plot_missing_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create the missing value distribution — plot_missing_values","text":"","code":"plot_missing_values(missing_values, yaxis_name)"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/plot_missing_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create the missing value distribution — plot_missing_values","text":"missing_values tibble column/row names percentage NAs column/row. yaxis_name name y-axis.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/plot_missing_values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create the missing value distribution — plot_missing_values","text":"histogram missing value distribution.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/plot_points.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot sample data points in a two-dimensional plane — plot_points","title":"Plot sample data points in a two-dimensional plane — plot_points","text":"plot_points() plots sample data points two-dimensional plane. points can plotted PCx/PCy UMAP1/UMAP2 space.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/plot_points.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot sample data points in a two-dimensional plane — plot_points","text":"","code":"plot_points(dim_res, x, y, color = NULL)"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/plot_points.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot sample data points in a two-dimensional plane — plot_points","text":"dim_res tibble results dimensionality reduction analysis. x name column dim_res contains x-axis values. y name column dim_res contains y-axis values. color name column dim_res contains variable used plot points color.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/plot_points.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot sample data points in a two-dimensional plane — plot_points","text":"ggplot object","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/prepare_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare data for model fitting — prepare_data","title":"Prepare data for model fitting — prepare_data","text":"prepare_data() prepares data model fitting. filters rows NAs variable column, converts variable factor, creates cross-validation sets.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/prepare_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare data for model fitting — prepare_data","text":"","code":"prepare_data(   dat,   variable = \"Disease\",   case,   control = NULL,   balance_groups = TRUE,   cv_sets = 5,   seed = 123 )"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/prepare_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare data for model fitting — prepare_data","text":"dat hd_model object coming check_data(). variable variable predict. Default \"Disease\". case case class. control control class. Default NULL. balance_groups Whether balance groups. Default TRUE. cv_sets Number cross-validation sets. Default 5. seed Seed reproducibility. Default 123.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/prepare_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare data for model fitting — prepare_data","text":"model object containing train test data cross-validation sets.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/prepare_plot_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract information from the HDAnalyzeR and PCA or UMAP object — prepare_plot_data","title":"Extract information from the HDAnalyzeR and PCA or UMAP object — prepare_plot_data","text":"prepare_plot_data() extracts PCA UMAP results metadata information respective objects.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/prepare_plot_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract information from the HDAnalyzeR and PCA or UMAP object — prepare_plot_data","text":"","code":"prepare_plot_data(dim_object, metadata, color, x, y)"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/prepare_plot_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract information from the HDAnalyzeR and PCA or UMAP object — prepare_plot_data","text":"dim_object PCA UMAP object containing results dimensionality reduction analysis. Created hd_pca() hd_umap(). metadata HDAnalyzeR object dataset wide format sample ID first column. color name column contains variable used plot points color. x name column dim_object contains x-axis values. y name column dim_object contains y-axis values.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/prepare_plot_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract information from the HDAnalyzeR and PCA or UMAP object — prepare_plot_data","text":"tibble PCA UMAP results metadata information available.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/print_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Print the summary of the quality control results — print_summary","title":"Print the summary of the quality control results — print_summary","text":"print_summary() prints summary quality control results input dataset. includes number samples variables, counts class, percentage NAs column row, normality test results, protein-protein correlations certain threshold, correlation heatmap.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/print_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print the summary of the quality control results — print_summary","text":"","code":"print_summary(   sample_n,   var_n,   class_summary,   na_percentage_col,   na_percentage_row = NULL,   cor_results = NULL,   cor_threshold = 0.8 )"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/print_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print the summary of the quality control results — print_summary","text":"sample_n number samples. var_n number variables. class_summary table counts class dataframe. na_percentage_col tibble column names percentage NAs column. na_percentage_row tibble DAids percentage NAs row. cor_results tibble filtered protein pairs correlation values. cor_threshold reporting protein-protein correlation threshold.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/qc_summary_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize the quality control results of Olink data — qc_summary_data","title":"Summarize the quality control results of Olink data — qc_summary_data","text":"qc_summary_data() summarizes quality control results input dataset. can handles long wide dataframes. function checks column types, calculates percentage NAs column row, performs normality test, calculates protein-protein correlations, creates heatmap correlations. user can specify reporting protein-protein correlation threshold.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/qc_summary_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize the quality control results of Olink data — qc_summary_data","text":"","code":"qc_summary_data(   wide_data,   sample_id,   unique_threshold = 5,   cor_threshold = 0.8,   cor_method = \"pearson\",   verbose = TRUE )"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/qc_summary_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize the quality control results of Olink data — qc_summary_data","text":"wide_data dataset wide format sample_id first column. sample_id name column containing sample IDs. unique_threshold threshold consider numeric variable categorical. Default 5. cor_threshold threshold consider protein-protein correlation high. Default 0.8. cor_method method calculate correlation. Default \"pearson\". verbose Whether print summary. Default TRUE.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/qc_summary_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize the quality control results of Olink data — qc_summary_data","text":"list containing qc summery data","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/qc_summary_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize the quality control results of metadata — qc_summary_metadata","title":"Summarize the quality control results of metadata — qc_summary_metadata","text":"qc_summary_metadata() summarizes quality control results metadata dataframe. checks column types, calculates percentage NAs column row, creates summary visualizations categorical numeric variables.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/qc_summary_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize the quality control results of metadata — qc_summary_metadata","text":"","code":"qc_summary_metadata(   metadata,   sample_id,   variable,   palette = NULL,   unique_threshold = 5,   verbose = TRUE )"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/qc_summary_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize the quality control results of metadata — qc_summary_metadata","text":"metadata dataset containing metadata information sample ID first column. sample_id name column containing sample IDs. variable name column containing different classes. palette list color palettes plots. names list match column names metadata. Default NULL. unique_threshold threshold consider numeric variable categorical. Default 5. verbose Whether print summary. Default TRUE.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/qc_summary_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize the quality control results of metadata — qc_summary_metadata","text":"list qc summary data","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/remove_batch_effects.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove batch effects — remove_batch_effects","title":"Remove batch effects — remove_batch_effects","text":"remove_batch_effects() removes batch effects data using limma package. converts dataframe matrix transposes get ready limma. removes batch effects converts data back normal format.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/remove_batch_effects.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove batch effects — remove_batch_effects","text":"","code":"remove_batch_effects(wide_data, metadata, sample_id, batch, batch2 = NULL)"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/remove_batch_effects.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove batch effects — remove_batch_effects","text":"wide_data tibble containing data normalized. data wide format. metadata tibble containing metadata information. sample_id column containing sample ID information. batch metadata column containing batch information. batch2 metadata column containing second batch information. Default NULL.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/remove_batch_effects.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove batch effects — remove_batch_effects","text":"tibble containing data without batch effects.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/scale_color_hd.html","id":null,"dir":"Reference","previous_headings":"","what":"HPA color scales — scale_color_hd","title":"HPA color scales — scale_color_hd","text":"scale_color_hd() creates ggplot2 scale color aesthetics using color palettes Human Protein Atlas (HPA) project.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/scale_color_hd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"HPA color scales — scale_color_hd","text":"","code":"scale_color_hd(palette)"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/scale_color_hd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"HPA color scales — scale_color_hd","text":"palette name palette use. one palettes get_hpa_palettes().","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/scale_color_hd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"HPA color scales — scale_color_hd","text":"ggplot2 scale color aesthetics.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/scale_color_hd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"HPA color scales — scale_color_hd","text":"","code":"# Create an example dataframe data <- data.frame(   var1 = 1:10,   var2 = seq(2, 20, by = 2),   Sex = rep(c(\"M\", \"F\"), each = 5) )  # Create a plot plot <- ggplot2::ggplot(data, ggplot2::aes(x = var1, y = var2, color = Sex)) +   ggplot2::geom_point() plot   # Add a custom palette plot + scale_color_hd(\"sex\")"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/scale_fill_hd.html","id":null,"dir":"Reference","previous_headings":"","what":"HPA fill scales — scale_fill_hd","title":"HPA fill scales — scale_fill_hd","text":"scale_fill_hd() creates ggplot2 scale fill aesthetics using color palettes Human Protein Atlas (HPA) project.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/scale_fill_hd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"HPA fill scales — scale_fill_hd","text":"","code":"scale_fill_hd(palette)"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/scale_fill_hd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"HPA fill scales — scale_fill_hd","text":"palette name palette use. one palettes get_hpa_palettes().","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/scale_fill_hd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"HPA fill scales — scale_fill_hd","text":"ggplot2 scale fill aesthetics.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/scale_fill_hd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"HPA fill scales — scale_fill_hd","text":"","code":"# Create an example dataframe data <- data.frame(   Sex = c(\"M\", \"F\"),   Count = c(60, 40) )  # Create a plot plot <- ggplot2::ggplot(data, ggplot2::aes(x = Sex, y = Count, fill = Sex)) +   ggplot2::geom_bar(stat = \"identity\", position = \"dodge\") plot   # Add a custom palette plot + scale_fill_hd(\"sex\")"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/theme_hd.html","id":null,"dir":"Reference","previous_headings":"","what":"HPA theme — theme_hd","title":"HPA theme — theme_hd","text":"theme_hd() creates theme ggplot2 plots used Human Protein Atlas (HPA) project.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/theme_hd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"HPA theme — theme_hd","text":"","code":"theme_hd(angled = 0, axis_x = TRUE, axis_y = TRUE, facet_title = TRUE)"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/theme_hd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"HPA theme — theme_hd","text":"angled angle x-axis text. Default 0. axis_x FALSE, x-axis removed. Default TRUE. axis_y FALSE, y-axis removed. Default TRUE. facet_title FALSE, facet title removed. Default TRUE.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/theme_hd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"HPA theme — theme_hd","text":"ggplot2 theme object.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/theme_hd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"HPA theme — theme_hd","text":"","code":"# Create a plot plot <- example_metadata |>   ggplot2::ggplot(ggplot2::aes(x = Sex)) +   ggplot2::geom_bar() plot   # Apply the HPA theme plot + theme_hd()"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/tune_lr_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Hyperparameter optimization for logistic regression models — tune_lr_model","title":"Hyperparameter optimization for logistic regression models — tune_lr_model","text":"tune_lr_model() performs hyperparameter optimization logistic regression models. tunes model using provided grid size cross-validation sets. returns best model hyperparameters.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/tune_lr_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hyperparameter optimization for logistic regression models — tune_lr_model","text":"","code":"tune_lr_model(   dat,   variable = \"Disease\",   cor_threshold = 0.9,   verbose = TRUE,   seed = 123 )"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/tune_lr_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hyperparameter optimization for logistic regression models — tune_lr_model","text":"dat hd_model object coming prepare_data(). variable variable predict. Default \"Disease\". cor_threshold Threshold absolute correlation values. used remove minimum number features resulting absolute correlations less value. verbose Whether print progress messages. Default TRUE. seed Seed reproducibility. Default 123.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/tune_lr_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Hyperparameter optimization for logistic regression models — tune_lr_model","text":"model object containing train test data, tuned model, workflow.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/tune_rf_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Hyperparameter optimization for random forest models — tune_rf_model","title":"Hyperparameter optimization for random forest models — tune_rf_model","text":"tune_rf_model() performs hyperparameter optimization random forest models. tunes model using provided grid size cross-validation sets. returns best model hyperparameters.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/tune_rf_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hyperparameter optimization for random forest models — tune_rf_model","text":"","code":"tune_rf_model(   dat,   variable = \"Disease\",   cor_threshold = 0.9,   grid_size = 30,   verbose = TRUE,   seed = 123 )"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/tune_rf_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hyperparameter optimization for random forest models — tune_rf_model","text":"dat hd_model object coming prepare_data(). variable variable predict. Default \"Disease\". cor_threshold Threshold absolute correlation values. used remove minimum number features resulting absolute correlations less value. grid_size Size hyperparameter optimization grid. Default 10. verbose Whether print progress messages. Default TRUE. seed Seed reproducibility. Default 123.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/tune_rf_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Hyperparameter optimization for random forest models — tune_rf_model","text":"model object containing train test data, tuned model, workflow.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/tune_rreg_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Hyperparameter optimization for regularized regression models — tune_rreg_model","title":"Hyperparameter optimization for regularized regression models — tune_rreg_model","text":"tune_rreg_model() performs hyperparameter optimization regularized regression models. tunes model using provided grid size cross-validation sets. returns best model hyperparameters.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/tune_rreg_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hyperparameter optimization for regularized regression models — tune_rreg_model","text":"","code":"tune_rreg_model(   dat,   variable = \"Disease\",   cor_threshold = 0.9,   grid_size = 30,   mixture = NULL,   verbose = TRUE,   seed = 123 )"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/tune_rreg_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hyperparameter optimization for regularized regression models — tune_rreg_model","text":"dat hd_model object coming prepare_data(). variable variable predict. Default \"Disease\". cor_threshold Threshold absolute correlation values. used remove minimum number features resulting absolute correlations less value. grid_size Size hyperparameter optimization grid. Default 10. mixture mixture parameter elastic net. NULL tuned. Default NULL. verbose Whether print progress messages. Default TRUE. seed Seed reproducibility. Default 123.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/tune_rreg_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Hyperparameter optimization for regularized regression models — tune_rreg_model","text":"model object containing train test data, tuned model, workflow.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/variable_imp.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract model features and plot variable importance — variable_imp","title":"Extract model features and plot variable importance — variable_imp","text":"variable_imp() calculates variable importance model plots top features. also generates title plot based model metrics mixture parameter.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/variable_imp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract model features and plot variable importance — variable_imp","text":"","code":"variable_imp(   dat,   variable = \"Disease\",   case,   mixture = NULL,   palette = NULL,   y_labels = FALSE,   title = c(\"accuracy\", \"sensitivity\", \"specificity\", \"auc\", \"features\", \"top-features\"),   verbose = TRUE,   seed = 123 )"},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/variable_imp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract model features and plot variable importance — variable_imp","text":"dat hd_model object coming evaluate_model(). variable variable predict. Default \"Disease\". case case class. mixture mixture parameter elastic net. NULL tuned. Default NULL. palette color palette classes. character, one palettes hd_palettes(). Default NULL. title Vector title elements include plot. seed Seed reproducibility. Default 123.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/reference/variable_imp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract model features and plot variable importance — variable_imp","text":"model object containing features variable importance plot.","code":""},{"path":[]},{"path":"https://hda1472.github.io/HDAnalyzeR/news/index.html","id":"general-1-1-0","dir":"Changelog","previous_headings":"","what":"General","title":"HDAnalyzeR 1.1.0","text":"Changed function nomenclature consistent, easier understand search . functions now start hd_ convenient searching RStudio especially working together packages. Convert heatmaps tidyheatmaps ggplot objects ggplotify. Make vignettes readable suppressing non necessary results messages. Solve bugs issues. Informative warnings added functions guide user case potential issues. Preprocess module removed considered redundant limited.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/news/index.html","id":"utils-1-1-0","dir":"Changelog","previous_headings":"","what":"Utils","title":"HDAnalyzeR 1.1.0","text":"Added hd_initialize() create initial object used functions. making package usage much straightforward concise. Added hd_detect_vartype() detect variable categorical continuous. Simplified arguments hd_save_data() (former save_df()) make user friendly similar hd_import_data() (former import_df()). Made hd_widen_data() flexible allow user defined columns used wide data generation exclude, names_from values_from arguments. generate_df() deprecated considered redundant.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/news/index.html","id":"dimensionality-reduction-1-1-0","dir":"Changelog","previous_headings":"","what":"Dimensionality Reduction","title":"HDAnalyzeR 1.1.0","text":"Fix bug hd_auto_pca() (former do_pca()) PC component numbers 9.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/news/index.html","id":"palettes--themes-1-1-0","dir":"Changelog","previous_headings":"","what":"Palettes & Themes","title":"HDAnalyzeR 1.1.0","text":"Added hd_show_palettes() display available palettes package. Added selected palettes ggsci package.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/news/index.html","id":"imputation-1-1-0","dir":"Changelog","previous_headings":"","what":"Imputation","title":"HDAnalyzeR 1.1.0","text":"Add hd_na_search() summarizes distribution NA values heatmap. also makes able annotate user defined metadata variables. Removed impute_mice() function considered complicated package. needed, user can use mice package directly. Add hd_omit_na() remove rows NA values based specified columns data.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/news/index.html","id":"qc-summary-1-1-0","dir":"Changelog","previous_headings":"","what":"QC Summary","title":"HDAnalyzeR 1.1.0","text":"Add cor_method argument qc_summary_data() allow user choose correlation method. Remove normality check invalid large datasets. tests sensitive always return significant results. user still wants check normality recommend histograms QQ plots. Merge qc_summary_data() qc_summary_metadata() one function hd_qc_summary(). Add hd_qc_summary() visualizes metadata columns instead requiring manual selection.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/news/index.html","id":"differential-expression-analysis-1-1-0","dir":"Changelog","previous_headings":"","what":"Differential Expression Analysis","title":"HDAnalyzeR 1.1.0","text":"Merge do_limma() do_limma_continuous() new hd_run_de_limma() recognizes variable type automatically. hd_plot_volcano() now function alone.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/news/index.html","id":"classification-models-1-1-0","dir":"Changelog","previous_headings":"","what":"Classification Models","title":"HDAnalyzeR 1.1.0","text":"Multiclassification models now return variable importance plot well. AUC barplot multiclassification models now ordered. Add plot_biomarkers_summary_heatmap() summarize results differential expression analysis classification models one summary heatmap. Fix issue color matching bars Upset plots plot_de_summary() plot_features_summary() frequency ties. Now bars colored correctly even case frequency ties. Add verbose argument plot_de_summary() plot_features_summary() suppress printing proteins/features sets different cases. Remove non necessary return plot_gsea(). Add user_defined_proteins argument plot_volcano() differential expression functions order user specify proteins label top volcano plot.","code":""},{"path":"https://hda1472.github.io/HDAnalyzeR/news/index.html","id":"hdanalyzer-100-2024-08-19","dir":"Changelog","previous_headings":"","what":"HDAnalyzeR 1.0.0 (2024-08-19)","title":"HDAnalyzeR 1.0.0 (2024-08-19)","text":"Initial release HDAnalyzeR.","code":""}]
