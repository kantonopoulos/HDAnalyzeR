% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/enrichment_analysis.R
\name{hd_ora}
\alias{hd_ora}
\title{Over-representation analysis}
\usage{
hd_ora(
  gene_list,
  database = c("GO", "Reactome", "KEGG"),
  ontology = c("BP", "CC", "MF", "ALL"),
  background = NULL,
  pval_lim_enrichment = 0.05
)
}
\arguments{
\item{gene_list}{A character vector containing the gene names. These can be differentially expressed proteins or selected protein features from classification models.}

\item{database}{The database to perform the ORA. It can be either "GO", "KEGG", or "Reactome".}

\item{ontology}{The ontology to use when database = "GO". It can be "BP" (Biological Process), "CC" (Cellular Component), "MF" (Molecular Function), or "ALL". In the case of KEGG and Reactome, this parameter is ignored.}

\item{background}{A character vector containing the background genes.}

\item{pval_lim_enrichment}{The p-value threshold to consider a term as significant in the enrichment analysis.}
}
\value{
A list containing the results of the ORA.
}
\description{
\code{hd_ora()} performs over-representation analysis (ORA) using the clusterProfiler package.
}
\details{
qvalueCutoff was set to be 4 times the pvalueCutoff. To perform the ORA, \code{clusterProfiler} package is used.
For more information, please refer to the \code{clusterProfiler} documentation.
}
\examples{
# Initialize an HDAnalyzeR object
hd_object <- hd_initialize(example_data, example_metadata)

# Run differential expression analysis for AML vs all others
de_results <- hd_de_limma(hd_object, case = "AML")

# Extract the up-regulated proteins for AML
sig_up_proteins_aml <- de_results$de_res |>
  dplyr::filter(adj.P.Val < 0.05 & logFC > 0) |>
  dplyr::pull(Feature)

# Perform ORA with `GO` database and `BP` ontology
hd_ora(sig_up_proteins_aml, database = "GO", ontology = "BP")
}
