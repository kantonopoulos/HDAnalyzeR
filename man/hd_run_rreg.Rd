% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/classification_models.R
\name{hd_run_rreg}
\alias{hd_run_rreg}
\title{Run regularized regression model pipeline}
\usage{
hd_run_rreg(
  dat,
  variable = "Disease",
  case,
  control = NULL,
  balance_groups = TRUE,
  cor_threshold = 0.9,
  grid_size = 30,
  cv_sets = 5,
  mixture = NULL,
  palette = NULL,
  verbose = TRUE,
  title = c("accuracy", "sensitivity", "specificity", "auc", "features", "top-features",
    "mixture"),
  seed = 123
)
}
\arguments{
\item{dat}{An \code{hd_model} object or a list containing the train and test data.}

\item{variable}{The name of the column containing the case and control groups. Default is "Disease".}

\item{case}{The case class.}

\item{control}{The control groups. If NULL, it will be set to all other unique values of the variable that are not the case. Default is NULL.}

\item{balance_groups}{Whether to balance the groups. Default is TRUE.}

\item{cor_threshold}{Threshold of absolute correlation values. This will be used to remove the minimum number of features so that all their resulting absolute correlations are less than this value.}

\item{grid_size}{Size of the hyperparameter optimization grid. Default is 30.}

\item{cv_sets}{Number of cross-validation sets. Default is 5.}

\item{mixture}{The mixture parameter for the elastic net. If NULL it will be tuned. Default is NULL.}

\item{palette}{The color palette for the classes. If it is a character, it should be one of the palettes from \code{hd_palettes()}. Default is NULL.}

\item{verbose}{Whether to print progress messages. Default is TRUE.}

\item{title}{Vector of title elements to include in the plot.}

\item{seed}{Seed for reproducibility. Default is 123.}
}
\value{
A model object containing the train and test data, the metrics, the ROC curve, the selected features, the variable importance, and the mixture parameter.
}
\description{
\code{hd_run_rreg()} runs the regularized regression model pipeline. It creates
class-balanced case-control groups for the train set, tunes the model, evaluates
the model, and plots the variable importance.
}
\examples{
# Initialize an HDAnalyzeR object
hd_object <- hd_initialize(example_data, example_metadata)

# Split the data into training and test sets
hd_split <- hd_run_data_split(hd_object, variable = "Disease")

# Run the regularized regression model pipeline
hd_run_rreg(hd_split,
            variable = "Disease",
            case = "AML",
            grid_size = 5,
            palette = "cancers12")
}
