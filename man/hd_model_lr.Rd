% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/classification_models.R
\name{hd_model_lr}
\alias{hd_model_lr}
\title{Run logistic regression model pipeline}
\usage{
hd_model_lr(
  dat,
  variable = "Disease",
  case,
  control = NULL,
  balance_groups = TRUE,
  cor_threshold = 0.9,
  palette = NULL,
  plot_y_labels = TRUE,
  verbose = TRUE,
  plot_title = c("accuracy", "sensitivity", "specificity", "auc", "features",
    "top-features"),
  seed = 123
)
}
\arguments{
\item{dat}{An \code{hd_model} object or a list containing the train and test data.}

\item{variable}{The name of the column containing the case and control groups. Default is "Disease".}

\item{case}{The case class.}

\item{control}{The control groups. If NULL, it will be set to all other unique values of the variable that are not the case. Default is NULL.}

\item{balance_groups}{Whether to balance the groups. Default is TRUE.}

\item{cor_threshold}{Threshold of absolute correlation values. This will be used to remove the minimum number of features so that all their resulting absolute correlations are less than this value.}

\item{palette}{The color palette for the classes. If it is a character, it should be one of the palettes from \code{hd_palettes()}. In multi-class is it no needed. Default is NULL.}

\item{plot_y_labels}{Whether to show y-axis labels in the variable importance plot. Default is TRUE.}

\item{verbose}{Whether to print progress messages. Default is TRUE.}

\item{plot_title}{Vector of title elements to include in the plot.}

\item{seed}{Seed for reproducibility. Default is 123.}
}
\value{
A model object containing the train and test data, the metrics, the ROC curve, the selected features, the variable importance, and the mixture parameter.
}
\description{
\code{hd_model_lr()} runs the logistic regression model pipeline. It creates
class-balanced case-control groups for the train set, tunes the model, evaluates
the model, and plots the variable importance.
}
\details{
This model is ideal when the number of features is small. Otherwise, use
\code{hd_model_rreg()} as it is more robust to high-dimensional data.
The numeric predictors will be normalized and the nominal predictors will
be one-hot encoded. If the data contain missing values, KNN (k=5) imputation
will be used to impute. Logistic regression models are not supported for
multiclass classification. \code{case} is required for binary classification. If
multi-class classification is needed, use \code{hd_model_rreg()} instead.
}
\examples{
# Initialize an HDAnalyzeR object with only a subset of the predictors
hd_object <- hd_initialize(
  example_data |> dplyr::filter(Assay \%in\% c("ADA", "AARSD1", "ACAA1", "ACAN1", "ACOX1")),
  example_metadata
)

# Split the data into training and test sets
hd_split <- hd_split_data(
  hd_object,
  metadata_cols = c("Age", "Sex"),  # Include metadata columns
  variable = "Disease"
)

# Run the logistic regression model pipeline
hd_model_lr(hd_split,
            variable = "Disease",
            case = "AML",
            palette = "cancers12")
}
