% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cluster.R
\name{hd_cluster_samples}
\alias{hd_cluster_samples}
\title{Cluster samples in k clusters}
\usage{
hd_cluster_samples(
  dat,
  distance_method = "euclidean",
  clustering_method = "ward.D2",
  normalize = TRUE,
  k = NULL,
  k_max = 15,
  gap_b = 100,
  seed = 123,
  verbose = FALSE
)
}
\arguments{
\item{dat}{An HDAnalyzeR object or a dataset in wide format and sample ID as its first column.}

\item{distance_method}{The distance method to use. Default is "euclidean".}

\item{clustering_method}{The clustering method to use. Default is "ward.D2".}

\item{normalize}{A logical value indicating whether to normalize the data. Z-score normalization is applied using the \code{hd_normalize()} function. Default is TRUE.}

\item{k}{The number of clusters to return. If NULL, the function determines the optimal number of clusters using the gap statistic.}

\item{k_max}{The maximum number of clusters to test. Default is 15. Valid only if k is NULL.}

\item{gap_b}{The number of times to repeat the clustering in the gap analysis. Default is 100. Valid only if k is NULL.}

\item{seed}{The seed to use for reproducibility. Default is 123. Valid only if k is NULL.}

\item{verbose}{A logical value indicating whether to print the progress of the gap analysis. Default is FALSE. Valid only if k is NULL.}
}
\value{
A list with the cluster assignment.
}
\description{
\code{hd_cluster_samples()} takes a dataset and returns the clustering of the samples.
The user can define the number of clusters or let the function determine the optimal
number of clusters using the gap statistic. If the data contain missing values, the
function imputes them using the k-nearest neighbors algorithm (k = 5).
}
\examples{
# Create the HDAnalyzeR object providing the data and metadata
hd_object <- hd_initialize(example_data, example_metadata)

# Clustered data
clustering <- hd_cluster_samples(hd_object, gap_b = 10)

# Access the results
head(clustering[["cluster_res"]])

# Clustered data with defined number of clusters
clustering <- hd_cluster_samples(hd_object, k = 7, gap_b = 10)

# Access the results
head(clustering[["cluster_res"]])
}
