% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/classification_models.R
\name{hd_model_rreg}
\alias{hd_model_rreg}
\title{Regularized regression model pipeline}
\usage{
hd_model_rreg(
  dat,
  variable = "Disease",
  case,
  control = NULL,
  balance_groups = TRUE,
  cor_threshold = 0.9,
  grid_size = 30,
  cv_sets = 5,
  mixture = NULL,
  palette = NULL,
  plot_y_labels = FALSE,
  verbose = TRUE,
  plot_title = c("accuracy", "sensitivity", "specificity", "auc", "features",
    "top-features", "mixture"),
  seed = 123
)
}
\arguments{
\item{dat}{An \code{hd_model} object or a list containing the train and test data.}

\item{variable}{The name of the metadata variable containing the case and control groups. Default is "Disease".}

\item{case}{The case class.}

\item{control}{The control groups. If NULL, it will be set to all other unique values of the variable that are not the case. Default is NULL.}

\item{balance_groups}{Whether to balance the groups in the train set. It is only valid in binary classification settings. Default is TRUE.}

\item{cor_threshold}{Threshold of absolute correlation values. This will be used to remove the minimum number of features so that all their resulting absolute correlations are less than this value.}

\item{grid_size}{Size of the hyperparameter optimization grid. Default is 30.}

\item{cv_sets}{Number of cross-validation sets. Default is 5.}

\item{mixture}{The mixture parameter for the elastic net model (1 - LASSO, 0 - Ridge). If NULL it will be tuned. Default is NULL.}

\item{palette}{The color palette for the classes. If it is a character, it should be one of the palettes from \code{hd_palettes()}. In case of a continuous variable it is not required. Default is NULL.}

\item{plot_y_labels}{Whether to show y-axis labels in the feature importance plot. Default is FALSE.}

\item{verbose}{Whether to print progress messages. Default is TRUE.}

\item{plot_title}{Vector of title elements to include in the plot. It should be a subset of \code{c("accuracy", "sensitivity", "specificity", "auc", "features", "top-features", "mixture")}.}

\item{seed}{Seed for reproducibility. Default is 123.}
}
\value{
A model object containing the train and test data, the metrics, the ROC curve, the selected features, their importance, and the mixture parameter.
}
\description{
\code{hd_model_rreg()} runs the regularized regression model pipeline. It creates
class-balanced case-control groups for the train set, tunes the model, evaluates
the model, and plots the feature importance and model performance.
}
\details{
This model will not work if the number of predictors is less than 2.
However, if this is the case, consider using \code{hd_model_lr()} instead if it is
a classification problem. In case it is a regression problem, consider using
\code{hd_plot_regression()} directly to plot your feature against the target variable.

The numeric predictors will be normalized and the nominal predictors will
be one-hot encoded. If the data contain missing values, KNN (k=5) imputation
will be used to impute. If \code{case} is provided, the model will be a binary
classification model. If \code{case} is NULL, the model will be a multiclass classification model.

In multi-class models, the groups in the train set are not balanced and sensitivity and specificity
are calculated via macro-averaging. In case the model is run against a continuous variable,
the palette will be ignored and we have to change the elements of \code{plot_title} to \code{rmse} and \code{rsq}
to plot the RMSE and RSQ instead of \code{accuracy}, \code{sensitivity}, \code{specificity}, and \code{auc}
(see examples bellow).
}
\examples{
# Initialize an HDAnalyzeR object
hd_object <- hd_initialize(example_data, example_metadata)

# Split the data into training and test sets
hd_split <- hd_split_data(hd_object, variable = "Disease")

# Run the regularized regression model pipeline
hd_model_rreg(hd_split,
              variable = "Disease",
              case = "AML",
              grid_size = 5,
              palette = "cancers12",
              verbose = FALSE)

# Run the multiclass regularized regression model pipeline
hd_model_rreg(hd_split,
              variable = "Disease",
              case = NULL,
              grid_size = 2,
              cv_sets = 2,
              verbose = FALSE)

# Run the regularized regression model pipeline for a continuous variable
# Split the data into training and test sets
hd_split <- hd_split_data(hd_object, variable = "Age")

# Run the regularized regression model pipeline
hd_model_rreg(hd_split,
              variable = "Age",
              case = NULL,
              grid_size = 2,
              cv_sets = 2,
              plot_title = c("rmse",
                             "rsq",
                             "features",
                             "mixture"),
              verbose = FALSE)
}
